!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	include/artilist.h	/^	A(ART_BAT_FROM_HELL, "Bat from Hell",                BASEBALL_BAT,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_CANDLE_OF_ETERNAL_FLAME, "The Candle of Eternal Flame",        MAGIC_CANDLE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_CLEAVER, "Cleaver",                    BATTLE_AXE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_CROWN_OF_SAINT_EDWARD, "The Crown of Saint Edward", HELM_OF_TELEPATHY,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DEATHSWORD, "Deathsword",                   TWO_HANDED_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DEEP_FREEZE, "Deep Freeze",                ATHAME,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DELUDER, "Deluder",               CLOAK_OF_DISPLACEMENT,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DEMONBANE, "Demonbane",			LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DISRUPTER, "Disrupter",                  MACE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DOOMBLADE, "Doomblade",                  ORCISH_SHORT_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_DRAGONBANE, "Dragonbane",			BROADSWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_ELFRIST, "Elfrist",                    ORCISH_SPEAR,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_EXCALIBUR, "Excalibur",                  LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_EYES_OF_THE_OVERWORLD, "The Eyes of the Overworld",	LENSES,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_EYE_OF_THE_AETHIOPICA, "The Eye of the Aethiopica",	AMULET_OF_ESP,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_EYE_OF_THE_BEHOLDER, "The Eye of the Beholder", EYEBALL,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_FIREWALL, "Firewall",                  ATHAME,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_FIRE_BRAND, "Fire Brand",                 LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_FROST_BRAND, "Frost Brand",                LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_GAUNTLETS_OF_DEFENSE, "Gauntlets of Defense",    GAUNTLETS_OF_DEXTERITY,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_GIANTKILLER, "Giantkiller",                AXE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_GRAYSWANDIR, "Grayswandir",		SILVER_SABER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_GREAT_DAGGER_OF_GLAURGNAA, "The Great Dagger of Glaurgnaa",       GREAT_DAGGER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_GRIMTOOTH, "Grimtooth",                  ORCISH_DAGGER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_HAND_OF_VECNA, "The Hand of Vecna",       SEVERED_HAND,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_HEART_OF_AHRIMAN, "The Heart of Ahriman",	LUCKSTONE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_HELLFIRE, "Hellfire", CROSSBOW,	\/* WAC *\/$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_HOLY_SPEAR_OF_LIGHT, "Holy Spear of Light",        SILVER_SPEAR,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_HOUCHOU, "Houchou",                SPOON,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_KEY_OF_CHAOS, "The Key of Chaos", SKELETON_KEY,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_KEY_OF_LAW, "The Key of Law", SKELETON_KEY,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_KEY_OF_NEUTRALITY, "The Key of Neutrality", SKELETON_KEY,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_LONGBOW_OF_DIANA, "The Longbow of Diana", BOW,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_LUCKBLADE, "Luckblade",                  SHORT_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_MAGICBANE, "Magicbane",                  ATHAME,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_MAGIC_MIRROR_OF_MERLIN, "The Magic Mirror of Merlin", MIRROR,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_MASTER_KEY_OF_THIEVERY, "The Master Key of Thievery", SKELETON_KEY,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_MIRRORBRIGHT, "Mirrorbright",               SHIELD_OF_REFLECTION,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_MITRE_OF_HOLINESS, "The Mitre of Holiness",	HELM_OF_BRILLIANCE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_MJOLLNIR, "Mjollnir",                   HEAVY_HAMMER,           \/* Mjo:llnir *\/$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_NIGHTHORN, "Nighthorn", UNICORN_HORN,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_OGRESMASHER, "Ogresmasher",		WAR_HAMMER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_ORB_OF_DETECTION, "The Orb of Detection",	CRYSTAL_BALL,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_ORB_OF_FATE, "The Orb of Fate",		CRYSTAL_BALL,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_ORCRIST, "Orcrist",                    ELVEN_BROADSWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_PLAGUE, "Plague", DARK_ELVEN_BOW,	\/* KMH *\/$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_QUICK_BLADE, "Quick Blade",                ELVEN_SHORT_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_REAPER, "Reaper",                     HALBERD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SCEPTRE_OF_MIGHT, "The Sceptre of Might",	MACE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SERPENT_S_TONGUE, "Serpent's Tongue",            DAGGER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SKULLCRUSHER, "Skullcrusher",               CLUB,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SNICKERSNEE, "Snickersnee",                KATANA,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_STAFF_OF_AESCULAPIUS, "The Staff of Aesculapius",	QUARTERSTAFF,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_STAKE_OF_VAN_HELSING, "The Stake of Van Helsing",        WOODEN_STAKE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_STING, "Sting",			ELVEN_DAGGER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_STORMBRINGER, "Stormbringer",               RUNESWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_STORM_WHISTLE, "The Storm Whistle",          MAGIC_WHISTLE,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SUNSWORD, "Sunsword",                   LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SWORD_OF_BALANCE, "Sword of Balance",           SILVER_SHORT_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_SWORD_OF_JUSTICE, "Sword of Justice",           LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_THIEFBANE, "Thiefbane",                  LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_TROLLSBANE, "Trollsbane",                 MORNING_STAR,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_TSURUGI_OF_MURAMASA, "The Tsurugi of Muramasa",	TSURUGI,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_VORPAL_BLADE, "Vorpal Blade",		LONG_SWORD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_WALLET_OF_PERSEUS, "Wallet of Perseus",       BAG_OF_HOLDING,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_WEREBANE, "Werebane",			SILVER_SABER,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_WHISPERFEET, "Whisperfeet",               SPEED_BOOTS,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(ART_YENDORIAN_EXPRESS_CARD, "The Platinum Yendorian Express Card", CREDIT_CARD,$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(NROFARTIFACTS = ART_CROWN_OF_SAINT_EDWARD, NULL, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )$/;"	e	enum:__anon26
A	include/artilist.h	/^	A(_DUMMY_ART, "",				STRANGE_OBJECT,$/;"	e	enum:__anon26
A	include/artilist.h	27;"	d
A	include/artilist.h	420;"	d
A	src/monst.c	56;"	d	file:
ABASE	include/attrib.h	19;"	d
ABON	include/attrib.h	20;"	d
ABORT	include/ntconf.h	114;"	d
ACCESSIBLE	include/rm.h	85;"	d
ACCFOOD	include/edog.h	12;"	d
ACID_RES	include/prop.h	15;"	d
ACURR	include/attrib.h	22;"	d
ACURRSTR	include/attrib.h	23;"	d
AC_VALUE	include/hack.h	284;"	d
ADORNED	include/prop.h	18;"	d
AD_ACID	include/attk.h	101;"	d
AD_ACID	include/monattk.h	46;"	d
AD_ANY	include/monattk.h	37;"	d
AD_BLND	include/attk.h	104;"	d
AD_BLND	include/monattk.h	49;"	d
AD_CALM	include/monattk.h	80;"	d
AD_CLRC	include/attk.h	136;"	d
AD_CLRC	include/monattk.h	86;"	d
AD_COLD	include/attk.h	96;"	d
AD_COLD	include/monattk.h	41;"	d
AD_CONF	include/attk.h	118;"	d
AD_CONF	include/monattk.h	63;"	d
AD_CORR	include/monattk.h	83;"	d
AD_CURS	include/attk.h	141;"	d
AD_CURS	include/monattk.h	91;"	d
AD_DCAY	include/attk.h	127;"	d
AD_DCAY	include/monattk.h	72;"	d
AD_DETH	include/attk.h	131;"	d
AD_DETH	include/monattk.h	76;"	d
AD_DGST	include/attk.h	119;"	d
AD_DGST	include/monattk.h	64;"	d
AD_DISE	include/attk.h	126;"	d
AD_DISE	include/monattk.h	71;"	d
AD_DISN	include/attk.h	98;"	d
AD_DISN	include/monattk.h	43;"	d
AD_DRCO	include/attk.h	124;"	d
AD_DRCO	include/monattk.h	69;"	d
AD_DRDX	include/attk.h	123;"	d
AD_DRDX	include/monattk.h	68;"	d
AD_DREN	include/attk.h	109;"	d
AD_DREN	include/monattk.h	54;"	d
AD_DRIN	include/attk.h	125;"	d
AD_DRIN	include/monattk.h	70;"	d
AD_DRLI	include/attk.h	108;"	d
AD_DRLI	include/monattk.h	53;"	d
AD_DRST	include/attk.h	100;"	d
AD_DRST	include/monattk.h	45;"	d
AD_ELEC	include/attk.h	99;"	d
AD_ELEC	include/monattk.h	44;"	d
AD_ENCH	include/monattk.h	81;"	d
AD_FAMN	include/attk.h	133;"	d
AD_FAMN	include/monattk.h	78;"	d
AD_FIRE	include/attk.h	95;"	d
AD_FIRE	include/monattk.h	40;"	d
AD_HALU	include/attk.h	130;"	d
AD_HALU	include/monattk.h	75;"	d
AD_HEAL	include/attk.h	120;"	d
AD_HEAL	include/monattk.h	65;"	d
AD_LEGS	include/attk.h	110;"	d
AD_LEGS	include/monattk.h	55;"	d
AD_LITE	include/attk.h	102;"	d
AD_LITE	include/monattk.h	47;"	d
AD_MAGM	include/attk.h	94;"	d
AD_MAGM	include/monattk.h	39;"	d
AD_PEST	include/attk.h	132;"	d
AD_PEST	include/monattk.h	77;"	d
AD_PHYS	include/attk.h	93;"	d
AD_PHYS	include/monattk.h	38;"	d
AD_PLYS	include/attk.h	107;"	d
AD_PLYS	include/monattk.h	52;"	d
AD_POLY	include/monattk.h	82;"	d
AD_RBRE	include/attk.h	138;"	d
AD_RBRE	include/monattk.h	88;"	d
AD_RUST	include/attk.h	117;"	d
AD_RUST	include/monattk.h	62;"	d
AD_SAMU	include/attk.h	140;"	d
AD_SAMU	include/monattk.h	90;"	d
AD_SEDU	include/attk.h	115;"	d
AD_SEDU	include/monattk.h	60;"	d
AD_SGLD	include/attk.h	113;"	d
AD_SGLD	include/monattk.h	58;"	d
AD_SITM	include/attk.h	114;"	d
AD_SITM	include/monattk.h	59;"	d
AD_SLEE	include/attk.h	97;"	d
AD_SLEE	include/monattk.h	42;"	d
AD_SLIM	include/attk.h	134;"	d
AD_SLIM	include/monattk.h	79;"	d
AD_SLOW	include/attk.h	106;"	d
AD_SLOW	include/monattk.h	51;"	d
AD_SPC2	include/attk.h	103;"	d
AD_SPC2	include/monattk.h	48;"	d
AD_SPEL	include/attk.h	137;"	d
AD_SPEL	include/monattk.h	87;"	d
AD_SSEX	include/attk.h	128;"	d
AD_SSEX	include/monattk.h	73;"	d
AD_STCK	include/attk.h	112;"	d
AD_STCK	include/monattk.h	57;"	d
AD_STON	include/attk.h	111;"	d
AD_STON	include/monattk.h	56;"	d
AD_STUN	include/attk.h	105;"	d
AD_STUN	include/monattk.h	50;"	d
AD_TCKL	include/monattk.h	84;"	d
AD_TLPT	include/attk.h	116;"	d
AD_TLPT	include/monattk.h	61;"	d
AD_WERE	include/attk.h	122;"	d
AD_WERE	include/monattk.h	67;"	d
AD_WRAP	include/attk.h	121;"	d
AD_WRAP	include/monattk.h	66;"	d
AE	include/decl.h	394;"	d
AE	include/tcap.h	18;"	d
AEXE	include/attrib.h	21;"	d
AGGRAVATE_MONSTER	include/prop.h	29;"	d
AIR	include/rm.h	68;"	d
ALERT_BORDER_COLOR	include/wincurs.h	27;"	d
ALGN_SINNED	src/priest.c	12;"	d	file:
ALIGNLIM	include/align.h	16;"	d
ALIGNMENT	build-linux/include/dgn_comp.h	/^    ALIGNMENT = 271,$/;"	e	enum:yytokentype
ALIGNMENT	build-linux/include/lev_comp.h	/^    ALIGNMENT = 310,$/;"	e	enum:yytokentype
ALIGNMENT	build-linux/src/dgn_yacc.c	/^    ALIGNMENT = 271,$/;"	e	enum:yytokentype	file:
ALIGNMENT	build-linux/src/lev_yacc.c	/^    ALIGNMENT = 310,$/;"	e	enum:yytokentype	file:
ALIGNWEIGHT	include/global.h	204;"	d
ALIGN_BOTTOM	include/winprocs.h	192;"	d
ALIGN_H	include/align.h	6;"	d
ALIGN_LEFT	include/winprocs.h	189;"	d
ALIGN_RIGHT	include/winprocs.h	190;"	d
ALIGN_TOP	include/winprocs.h	191;"	d
ALLOCA_HACK	include/ntconf.h	135;"	d
ALLOW_ALL	include/mfndpos.h	12;"	d
ALLOW_BARS	include/mfndpos.h	20;"	d
ALLOW_COUNT	include/objclass.h	149;"	d
ALLOW_DIG	include/mfndpos.h	19;"	d
ALLOW_FLOOROBJ	include/objclass.h	152;"	d
ALLOW_M	include/mfndpos.h	10;"	d
ALLOW_NONE	include/objclass.h	151;"	d
ALLOW_ROCK	include/mfndpos.h	17;"	d
ALLOW_SANCT	include/mfndpos.h	21;"	d
ALLOW_SSM	include/mfndpos.h	22;"	d
ALLOW_THISPLACE	include/objclass.h	153;"	d
ALLOW_TM	include/mfndpos.h	11;"	d
ALLOW_TRAPS	include/mfndpos.h	8;"	d
ALLOW_U	include/mfndpos.h	9;"	d
ALLOW_WALL	include/mfndpos.h	18;"	d
ALL_CLASSES	include/objclass.h	150;"	d
ALL_FINISHED	include/hack.h	137;"	d
ALL_MAP	include/spell.h	15;"	d
ALL_SPELLS	include/spell.h	16;"	d
ALL_TYPES	include/hack.h	153;"	d
ALL_TYPES_SELECTED	include/hack.h	161;"	d
ALPHA	include/global.h	11;"	d
ALTAR	include/rm.h	65;"	d
ALTAR_ID	build-linux/include/lev_comp.h	/^    ALTAR_ID = 281,$/;"	e	enum:yytokentype
ALTAR_ID	build-linux/src/lev_yacc.c	/^    ALTAR_ID = 281,$/;"	e	enum:yytokentype	file:
ALTAR_TYPE	build-linux/include/lev_comp.h	/^    ALTAR_TYPE = 314,$/;"	e	enum:yytokentype
ALTAR_TYPE	build-linux/src/lev_yacc.c	/^    ALTAR_TYPE = 314,$/;"	e	enum:yytokentype	file:
AMAX	include/attrib.h	27;"	d
AMS_MAILBOX	include/unixconf.h	148;"	d
AMULET	src/objects.c	/^	AMULET(AMULET_OF_CHANGE, "amulet of change",        "square",     0,          110),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_DRAIN_RESISTANCE, "amulet of drain resistance","warped",   DRAIN_RES,   60),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_ESP, "amulet of ESP",           "circular",   TELEPAT,    140),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_FLYING, "amulet of flying",        "convex",     FLYING,      50),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_LIFE_SAVING, "amulet of life saving",   "spherical",  LIFESAVED,   60),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_MAGICAL_BREATHING, "amulet of magical breathing", "octagonal", MAGICAL_BREATHING, 50),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_REFLECTION, "amulet of reflection",    "hexagonal",  REFLECTING,  60),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_RESTFUL_SLEEP, "amulet of restful sleep", "triangular", SLEEPING,   110),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_STRANGULATION, "amulet of strangulation", "oval",       STRANGLED,  110),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_OF_UNCHANGING, "amulet of unchanging",    "concave",    UNCHANGING,	 50),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_VERSUS_POISON, "amulet versus poison",    "pyramidal",  POISON_RES, 140),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	/^	AMULET(AMULET_VERSUS_STONE, "amulet versus stone",     "lunate",   \/*STONE_RES*\/0,60),$/;"	e	enum:__anon12	file:
AMULET	src/objects.c	677;"	d	file:
AMULET	src/objects.c	698;"	d	file:
AMULET_CLASS	include/objclass.h	134;"	d
AMULET_SYM	include/objclass.h	169;"	d
AM_CHAOTIC	include/align.h	28;"	d
AM_LAWFUL	include/align.h	30;"	d
AM_MASK	include/align.h	32;"	d
AM_NEUTRAL	include/align.h	29;"	d
AM_NONE	include/align.h	27;"	d
AM_SHRINE	include/rm.h	265;"	d
AM_SPLEV_CO	include/align.h	34;"	d
AM_SPLEV_NONCO	include/align.h	35;"	d
ANGRY	include/eshk.h	49;"	d
ANIMATE_NORMAL	include/trap.h	40;"	d
ANIMATE_SHATTER	include/trap.h	41;"	d
ANIMATE_SPELL	include/trap.h	42;"	d
ANTHOLE	include/mkroom.h	73;"	d
ANTIMAGIC	include/prop.h	53;"	d
ANTI_MAGIC	include/trap.h	73;"	d
ANY_SHOP	include/mkroom.h	97;"	d
ANY_TYPE	include/mkroom.h	96;"	d
APPORT	include/edog.h	14;"	d
AP_GRAB	include/flag.h	263;"	d
AP_LEAVE	include/flag.h	262;"	d
ARBITRARY_SIZE	util/lev_main.c	1508;"	d	file:
ARBOREAL	include/sp_lev.h	24;"	d
ARM	include/hack.h	216;"	d
ARMOR	src/objects.c	/^	ARMOR(BANDED_MAIL, "banded mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(BRONZE_PLATE_MAIL, "bronze plate mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(CHAIN_MAIL, "chain mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(CRYSTAL_PLATE_MAIL, "crystal plate mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(DARK_ELVEN_MITHRIL_COAT, "dark elven mithril-coat", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(DWARVISH_MITHRIL_COAT, "dwarvish mithril-coat", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ELVEN_MITHRIL_COAT, "elven mithril-coat", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(HAWAIIAN_SHIRT, "Hawaiian shirt", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(LEATHER_ARMOR, "leather armor", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(LEATHER_JACKET, "leather jacket", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ORCISH_CHAIN_MAIL, "orcish chain mail", "crude chain mail",$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ORCISH_RING_MAIL, "orcish ring mail", "crude ring mail",$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(PLATE_MAIL, "plate mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(RING_MAIL, "ring mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ROBE, "robe", "red robe",$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ROBE_OF_POWER, "robe of power", "orange robe",$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ROBE_OF_PROTECTION, "robe of protection", "blue robe",$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(ROBE_OF_WEAKNESS, "robe of weakness", "green robe",$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(SCALE_MAIL, "scale mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(SPLINT_MAIL, "splint mail", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(STUDDED_LEATHER_ARMOR, "studded leather armor", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	/^	ARMOR(T_SHIRT, "T-shirt", NULL,$/;"	e	enum:__anon12	file:
ARMOR	src/objects.c	393;"	d	file:
ARMOR	src/objects.c	620;"	d	file:
ARMORSHOP	include/mkroom.h	79;"	d
ARMOR_CLASS	include/objclass.h	132;"	d
ARMOR_SYM	include/objclass.h	167;"	d
ARM_BONUS	include/hack.h	273;"	d
ARM_BOOTS	include/objclass.h	88;"	d
ARM_CLOAK	include/objclass.h	89;"	d
ARM_GLOVES	include/objclass.h	87;"	d
ARM_HELM	include/objclass.h	86;"	d
ARM_SHIELD	include/objclass.h	85;"	d
ARM_SHIRT	include/objclass.h	90;"	d
ARM_SUIT	include/objclass.h	91;"	d
ARROW_TRAP	include/trap.h	53;"	d
ARTICLE_A	include/decl.h	343;"	d
ARTICLE_NONE	include/decl.h	341;"	d
ARTICLE_THE	include/decl.h	342;"	d
ARTICLE_YOUR	include/decl.h	344;"	d
ARTIFACT_H	include/artifact.h	6;"	d
ARTILIST_H	include/artilist.h	432;"	d
ARTILIST_H	include/artilist.h	436;"	d
ARTILIST_H	include/artilist.h	6;"	d
ARTILIST_PASS2	include/artilist.h	434;"	d
AS	include/decl.h	393;"	d
AS	include/tcap.h	17;"	d
ASCENDED	include/hack.h	83;"	d
ASCII_GRAPHICS	include/rm.h	247;"	d
AS_MON_IS_UNIQUE	include/trap.h	47;"	d
AS_NO_MON	include/trap.h	46;"	d
AS_OK	include/trap.h	45;"	d
ATEMP	include/attrib.h	30;"	d
ATIME	include/attrib.h	31;"	d
ATR_BLINK	include/wintype.h	47;"	d
ATR_BOLD	include/wintype.h	44;"	d
ATR_DIM	include/wintype.h	45;"	d
ATR_INVERSE	include/wintype.h	48;"	d
ATR_NONE	include/wintype.h	43;"	d
ATR_ULINE	include/wintype.h	46;"	d
ATTK	src/monst.c	55;"	d	file:
ATTK_H	include/attk.h	6;"	d
ATTRIB_H	include/attrib.h	8;"	d
ATTRMAX	include/attrib.h	42;"	d
ATTRMIN	include/attrib.h	43;"	d
ATTR_COUNT	src/apply.c	1633;"	d	file:
ATTR_COUNT	src/apply.c	1789;"	d	file:
AT_ANY	include/monattk.h	11;"	d
AT_BITE	include/attk.h	63;"	d
AT_BITE	include/monattk.h	14;"	d
AT_BOOM	include/attk.h	73;"	d
AT_BOOM	include/monattk.h	24;"	d
AT_BREA	include/attk.h	71;"	d
AT_BREA	include/monattk.h	22;"	d
AT_BUTT	include/attk.h	65;"	d
AT_BUTT	include/monattk.h	16;"	d
AT_CLAW	include/attk.h	62;"	d
AT_CLAW	include/monattk.h	13;"	d
AT_ENGL	include/attk.h	70;"	d
AT_ENGL	include/monattk.h	21;"	d
AT_EXPL	include/attk.h	72;"	d
AT_EXPL	include/monattk.h	23;"	d
AT_GAZE	include/attk.h	74;"	d
AT_GAZE	include/monattk.h	25;"	d
AT_GODS	include/attk.h	83;"	d
AT_HUGS	include/attk.h	68;"	d
AT_HUGS	include/monattk.h	19;"	d
AT_KICK	include/attk.h	64;"	d
AT_KICK	include/monattk.h	15;"	d
AT_MAGC	include/monattk.h	30;"	d
AT_MEGA	include/attk.h	81;"	d
AT_MULTIPLY	include/monattk.h	27;"	d
AT_NONE	include/attk.h	61;"	d
AT_NONE	include/monattk.h	12;"	d
AT_SPEL	include/attk.h	79;"	d
AT_SPIT	include/attk.h	69;"	d
AT_SPIT	include/monattk.h	20;"	d
AT_STNG	include/attk.h	67;"	d
AT_STNG	include/monattk.h	18;"	d
AT_TENT	include/attk.h	75;"	d
AT_TENT	include/monattk.h	26;"	d
AT_THRO	include/attk.h	78;"	d
AT_TRAP	include/attk.h	82;"	d
AT_TUCH	include/attk.h	66;"	d
AT_TUCH	include/monattk.h	17;"	d
AT_WAND	include/attk.h	80;"	d
AT_WEAP	include/attk.h	77;"	d
AT_WEAP	include/monattk.h	29;"	d
AUTOCOMPLETE	src/cmd.c	2417;"	d	file:
AUTOSELECT_SINGLE	include/hack.h	141;"	d
AUX	include/unixconf.h	196;"	d
AVAL	src/attrib.c	332;"	d	file:
A_BOOK	src/u_init.c	29;"	d	file:
A_CHA	include/attrib.h	15;"	d
A_CHAOTIC	include/align.h	20;"	d
A_COALIGNED	include/align.h	24;"	d
A_CON	include/attrib.h	14;"	d
A_CURRENT	include/you.h	325;"	d
A_DEX	include/attrib.h	13;"	d
A_DUNGEON	build-linux/include/dgn_comp.h	/^    A_DUNGEON = 259,$/;"	e	enum:yytokentype
A_DUNGEON	build-linux/src/dgn_yacc.c	/^    A_DUNGEON = 259,$/;"	e	enum:yytokentype	file:
A_INT	include/attrib.h	11;"	d
A_LAWFUL	include/align.h	22;"	d
A_MAX	include/attrib.h	17;"	d
A_NEUTRAL	include/align.h	21;"	d
A_NONE	include/align.h	18;"	d
A_OPALIGNED	include/align.h	25;"	d
A_ORIGINAL	include/you.h	324;"	d
A_REGISTER	build-linux/include/lev_comp.h	/^    A_REGISTER = 309,$/;"	e	enum:yytokentype
A_REGISTER	build-linux/src/lev_yacc.c	/^    A_REGISTER = 309,$/;"	e	enum:yytokentype	file:
A_STR	include/attrib.h	10;"	d
A_WIS	include/attrib.h	12;"	d
A_Your	src/trap.c	/^static const char * const A_Your[2] = { "A", "Your" };$/;"	v	file:
A_gush_of_water_hits	src/trap.c	/^static const char * const A_gush_of_water_hits = "A gush of water hits";$/;"	v	file:
Acid_resistance	include/youprop.h	78;"	d
Adjmonnam	src/do_name.c	/^char *Adjmonnam(struct monst *mtmp, const char *adj) {$/;"	f
Adornment	include/youprop.h	183;"	d
Aggravate_monster	include/youprop.h	203;"	d
Align	include/you.h	/^struct Align {$/;"	s
Align2amask	include/align.h	39;"	d
Amask2align	include/align.h	37;"	d
Amonnam	src/do_name.c	/^char *Amonnam(struct monst *mtmp) {$/;"	f
Amphibious	include/youprop.h	254;"	d
Amulet_off	src/do_wear.c	/^void Amulet_off(void) {$/;"	f
Amulet_on	src/do_wear.c	/^void Amulet_on(void) {$/;"	f
An	src/objnam.c	/^char * An (const char *str) {$/;"	f
Antimagic	include/youprop.h	74;"	d
Archeologist	src/u_init.c	/^static struct trobj Archeologist[] = {$/;"	v	typeref:struct:trobj	file:
Armor_gone	src/do_wear.c	/^int Armor_gone(void) {$/;"	f
Armor_off	src/do_wear.c	/^int Armor_off(void) {$/;"	f
Armor_on	src/do_wear.c	/^int Armor_on(void) {$/;"	f
Athome	src/minion.c	132;"	d	file:
Attk	include/attk.h	/^typedef struct Attk {$/;"	s
Attk	include/attk.h	/^} *Attk;$/;"	t	typeref:struct:Attk
B	src/objects.c	378;"	d	file:
B	src/objects.c	80;"	d	file:
BADFOODSHOP	include/mkroom.h	71;"	d
BALL_CLASS	include/objclass.h	144;"	d
BALL_SYM	include/objclass.h	179;"	d
BARRACKS	include/mkroom.h	62;"	d
BASE_WINDOW	win/tty/wintty.c	/^winid BASE_WINDOW;$/;"	v
BC	sys/share/tclib.c	/^char *BC, *UP;$/;"	v
BC	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
BCPOS_BALL	src/ball.c	90;"	d	file:
BCPOS_CHAIN	src/ball.c	89;"	d	file:
BCPOS_DIFFER	src/ball.c	88;"	d	file:
BC_BALL	include/you.h	284;"	d
BC_CHAIN	include/you.h	285;"	d
BClairvoyant	include/youprop.h	168;"	d
BEAR_TRAP	include/trap.h	57;"	d
BEEHIVE	include/mkroom.h	60;"	d
BEGIN	build-linux/src/dgn_lex.c	118;"	d	file:
BEGIN	build-linux/src/lev_lex.c	118;"	d	file:
BEL	sys/share/tclib.c	16;"	d	file:
BETA	include/global.h	12;"	d
BETRAYED	include/hack.h	68;"	d
BILLED_TYPES	include/hack.h	154;"	d
BITFIELDS	include/config.h	180;"	d
BITS	src/objects.c	32;"	d	file:
BInvis	include/youprop.h	187;"	d
BLACKSHOP	include/mkroom.h	92;"	d
BLCORNER	include/rm.h	38;"	d
BLINDED	include/prop.h	39;"	d
BLITZ_CHAIN	include/tech.h	44;"	d
BLITZ_END	include/tech.h	45;"	d
BLITZ_START	include/tech.h	43;"	d
BLOOD	include/hack.h	231;"	d
BOLT_LIM	include/hack.h	21;"	d
BOMB_BLOW	include/timeout.h	33;"	d
BONE	include/objclass.h	53;"	d
BONESPREFIX	include/decl.h	433;"	d
BOOKSHOP	include/mkroom.h	89;"	d
BOOLEAN	build-linux/include/lev_comp.h	/^    BOOLEAN = 260,$/;"	e	enum:yytokentype
BOOLEAN	build-linux/src/lev_yacc.c	/^    BOOLEAN = 260,$/;"	e	enum:yytokentype	file:
BOOTS	src/objects.c	/^	BOOTS(ELVEN_BOOTS, "elven boots", "mud boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(FUMBLE_BOOTS, "fumble boots", "riding boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(HIGH_BOOTS, "high boots", "jackboots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(IRON_SHOES, "iron shoes", "hard shoes",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(JUMPING_BOOTS, "jumping boots", "hiking boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(KICKING_BOOTS, "kicking boots", "steel boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(LEVITATION_BOOTS, "levitation boots", "snow boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(LOW_BOOTS, "low boots", "walking shoes",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(SPEED_BOOTS, "speed boots", "combat boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	/^	BOOTS(WATER_WALKING_BOOTS, "water walking boots", "jungle boots",$/;"	e	enum:__anon12	file:
BOOTS	src/objects.c	406;"	d	file:
BOOTS	src/objects.c	619;"	d	file:
BORG	include/config.h	235;"	d
BOTH_SIDES	include/prop.h	129;"	d
BOTTOM	src/sp_lev.c	51;"	d	file:
BOW	src/objects.c	/^	BOW(BOW, "bow", NULL,			1, 1, 24, 30, 60, 0, WOOD, P_BOW, HI_WOOD),$/;"	e	enum:__anon12	file:
BOW	src/objects.c	/^	BOW(DARK_ELVEN_BOW, "dark elven bow",  "black runed bow", 0, 1, 0, 30, 60, 0, WOOD, P_BOW, CLR_BLACK),$/;"	e	enum:__anon12	file:
BOW	src/objects.c	/^	BOW(ELVEN_BOW, "elven bow", "runed bow",	0, 1, 12, 30, 60, 0, WOOD, P_BOW, HI_WOOD),$/;"	e	enum:__anon12	file:
BOW	src/objects.c	/^	BOW(ORCISH_BOW, "orcish bow", "crude bow",	0, 1, 12, 30, 60, 0, WOOD, P_BOW, CLR_BLACK),$/;"	e	enum:__anon12	file:
BOW	src/objects.c	/^	BOW(SLING, "sling", NULL,		1, 0, 40,  3, 20, 0, WOOD, P_SLING, HI_LEATHER),$/;"	e	enum:__anon12	file:
BOW	src/objects.c	/^	BOW(YUMI, "yumi", "long bow",			0, 1, 0, 30, 60, 0, WOOD, P_BOW, HI_WOOD),$/;"	e	enum:__anon12	file:
BOW	src/objects.c	383;"	d	file:
BOW	src/objects.c	59;"	d	file:
BP_ALIGN	src/role.c	1355;"	d	file:
BP_ALIGN	src/role.c	1587;"	d	file:
BP_GEND	src/role.c	1356;"	d	file:
BP_GEND	src/role.c	1588;"	d	file:
BP_RACE	src/role.c	1357;"	d	file:
BP_RACE	src/role.c	1589;"	d	file:
BP_ROLE	src/role.c	1358;"	d	file:
BP_ROLE	src/role.c	1590;"	d	file:
BRANCH	build-linux/include/dgn_comp.h	/^    BRANCH = 260,$/;"	e	enum:yytokentype
BRANCH	build-linux/src/dgn_yacc.c	/^    BRANCH = 260,$/;"	e	enum:yytokentype	file:
BRANCH_ID	build-linux/include/lev_comp.h	/^    BRANCH_ID = 289,$/;"	e	enum:yytokentype
BRANCH_ID	build-linux/src/lev_yacc.c	/^    BRANCH_ID = 289,$/;"	e	enum:yytokentype	file:
BRANCH_LIMIT	include/dgn_file.h	74;"	d
BRCORNER	include/rm.h	39;"	d
BREAK_0	sys/share/random.c	91;"	d	file:
BREAK_1	sys/share/random.c	96;"	d	file:
BREAK_2	sys/share/random.c	101;"	d	file:
BREAK_3	sys/share/random.c	106;"	d	file:
BREAK_4	sys/share/random.c	111;"	d	file:
BREEDER_EGG	src/mon.c	2716;"	d	file:
BRIGHT	include/color.h	43;"	d
BR_NO_END1	include/dungeon.h	82;"	d
BR_NO_END2	include/dungeon.h	85;"	d
BR_PORTAL	include/dungeon.h	88;"	d
BR_STAIR	include/dungeon.h	81;"	d
BSD_JOB_CONTROL	include/unixconf.h	222;"	d
BSIZE	src/cmd.c	161;"	d	file:
BSIZE	sys/share/unixtty.c	298;"	d	file:
BSTRCMP	src/objnam.c	1523;"	d	file:
BSTRCMPI	src/objnam.c	1524;"	d	file:
BSTRNCMP	src/objnam.c	1525;"	d	file:
BSTRNCMPI	src/objnam.c	1526;"	d	file:
BStealth	include/youprop.h	198;"	d
BUC_ALLBKNOWN	include/hack.h	160;"	d
BUC_BLESSED	include/hack.h	156;"	d
BUC_CURSED	include/hack.h	157;"	d
BUC_UNCURSED	include/hack.h	158;"	d
BUC_UNKNOWN	include/hack.h	159;"	d
BUFSZ	include/global.h	190;"	d
BULLET	src/objects.c	/^	BULLET(BULLET, "bullet", NULL,$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	/^	BULLET(FRAG_GRENADE, "frag grenade", NULL,$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	/^	BULLET(GAS_GRENADE, "gas grenade", NULL,$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	/^	BULLET(ROCKET, "rocket", NULL,$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	/^	BULLET(SHOTGUN_SHELL, "shotgun shell", NULL,$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	/^	BULLET(SILVER_BULLET, "silver bullet", NULL,$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	/^	BULLET(STICK_OF_DYNAMITE, "stick of dynamite", "red stick",$/;"	e	enum:__anon12	file:
BULLET	src/objects.c	384;"	d	file:
BULLET	src/objects.c	64;"	d	file:
BURIED_TOO	include/obj.h	363;"	d
BURN	include/engrave.h	17;"	d
BURNING	include/hack.h	73;"	d
BURNING_OIL	include/objclass.h	155;"	d
BURN_OBJECT	include/timeout.h	29;"	d
BUSTDOOR	include/mfndpos.h	16;"	d
BY_COOKIE	include/hack.h	35;"	d
BY_NEXTHERE	include/hack.h	140;"	d
BY_OBJECT	src/apply.c	2975;"	d	file:
BY_OBJECT	src/dig.c	144;"	d	file:
BY_OBJECT	src/explode.c	799;"	d	file:
BY_ORACLE	include/hack.h	34;"	d
BY_OTHER	include/hack.h	37;"	d
BY_PAPER	include/hack.h	36;"	d
BY_YOU	src/dig.c	143;"	d	file:
B_MAJOR	src/u_init.c	44;"	d	file:
B_MINOR	src/u_init.c	45;"	d	file:
Barbarian	src/u_init.c	/^static struct trobj Barbarian[] = {$/;"	v	typeref:struct:trobj	file:
Bitfield	include/global.h	61;"	d
Bitfield	include/global.h	63;"	d
Blind	include/youprop.h	101;"	d
Blind_telepat	include/youprop.h	146;"	d
Blinded	include/youprop.h	97;"	d
Blindf_off	src/do_wear.c	/^void Blindf_off(struct obj *otmp) {$/;"	f
Blindf_on	src/do_wear.c	/^void Blindf_on(struct obj *otmp) {$/;"	f
Blindfold	src/u_init.c	/^static struct trobj Blindfold[] = {$/;"	v	typeref:struct:trobj	file:
Blindfolded	include/youprop.h	98;"	d
Bool_Opt	src/options.c	/^static struct Bool_Opt {$/;"	s	file:
Bool_Opt	win/proxy/getopt.c	/^static struct Bool_Opt$/;"	s	file:
Bool_Tile_Opt	src/options.c	/^static struct Bool_Tile_Opt {$/;"	s	file:
Boots_off	src/do_wear.c	/^int Boots_off(void) {$/;"	f
Boots_on	src/do_wear.c	/^int Boots_on(void) {$/;"	f
Breathless	include/youprop.h	258;"	d
C	include/ntconf.h	100;"	d
C	src/cmd.c	2254;"	d	file:
C	src/drawing.c	10;"	d	file:
C	src/drawing.c	13;"	d	file:
C	src/drawing.c	308;"	d	file:
C	src/monst.c	29;"	d	file:
C	src/monst.c	32;"	d	file:
C	win/curses/cursmisc.c	27;"	d	file:
C	win/proxy/glyphmap.c	16;"	d	file:
C	win/proxy/glyphmap.c	18;"	d	file:
C	win/tty/topl.c	14;"	d	file:
CADAVER	include/edog.h	11;"	d
CANDLESHOP	include/mkroom.h	91;"	d
CANNIBAL_ALLOWED	src/eat.c	57;"	d	file:
CARD_FOOL	include/egyp.h	12;"	d
CARD_RANKS	include/egyp.h	9;"	d
CARD_SUITED	include/egyp.h	11;"	d
CARD_SUITS	include/egyp.h	8;"	d
CARD_TOTAL	include/egyp.h	13;"	d
CARD_TRUMPS	include/egyp.h	10;"	d
CARY	include/artilist.h	17;"	d
CAST_BOOST	src/spell.c	18;"	d	file:
CBAUD	sys/share/unixtty.c	59;"	d	file:
CBRKMASK	sys/share/unixtty.c	108;"	d	file:
CBRKMASK	sys/share/unixtty.c	53;"	d	file:
CBRKON	sys/share/unixtty.c	109;"	d	file:
CBRKON	sys/share/unixtty.c	54;"	d	file:
CE	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
CEILDIV	src/mkobj.c	919;"	d	file:
CEILDIV	src/mkobj.c	923;"	d	file:
CEILDIV	src/pickup.c	38;"	d	file:
CENTER	build-linux/include/lev_comp.h	/^    CENTER = 312,$/;"	e	enum:yytokentype
CENTER	build-linux/src/lev_yacc.c	/^    CENTER = 312,$/;"	e	enum:yytokentype	file:
CENTER	include/wincurs.h	/^	CENTER,$/;"	e	enum:orient_type
CENTER	src/sp_lev.c	46;"	d	file:
CHAIN_CLASS	include/objclass.h	145;"	d
CHAIN_IN_MIDDLE	src/ball.c	379;"	d	file:
CHAIN_IN_MIDDLE	src/ball.c	535;"	d	file:
CHAIN_SYM	include/objclass.h	180;"	d
CHAM_CHAMELEON	include/monst.h	75;"	d
CHAM_DOPPELGANGER	include/monst.h	76;"	d
CHAM_MAX_INDX	include/monst.h	78;"	d
CHAM_ORDINARY	include/monst.h	74;"	d
CHAM_SANDESTIN	include/monst.h	77;"	d
CHANCE_ID	build-linux/include/lev_comp.h	/^    CHANCE_ID = 291,$/;"	e	enum:yytokentype
CHANCE_ID	build-linux/src/lev_yacc.c	/^    CHANCE_ID = 291,$/;"	e	enum:yytokentype	file:
CHAR	build-linux/include/lev_comp.h	/^    CHAR = 258,$/;"	e	enum:yytokentype
CHAR	build-linux/src/lev_yacc.c	/^    CHAR = 258,$/;"	e	enum:yytokentype	file:
CHARGE_OBJ	include/artifact.h	60;"	d
CHBRANCH	build-linux/include/dgn_comp.h	/^    CHBRANCH = 261,$/;"	e	enum:yytokentype
CHBRANCH	build-linux/src/dgn_yacc.c	/^    CHBRANCH = 261,$/;"	e	enum:yytokentype	file:
CHDIR	include/config.h	112;"	d
CHECKINPUT	sys/winnt/nttty.c	/^typedef int (__stdcall * CHECKINPUT)($/;"	t	file:
CHECK_ALLOW	src/dogmove.c	538;"	d	file:
CHECK_ALLOW	src/dogmove.c	575;"	d	file:
CHLEVEL	build-linux/include/dgn_comp.h	/^    CHLEVEL = 264,$/;"	e	enum:yytokentype
CHLEVEL	build-linux/src/dgn_yacc.c	/^    CHLEVEL = 264,$/;"	e	enum:yytokentype	file:
CHOKING	include/hack.h	69;"	d
CHOOSE_ALL	include/hack.h	155;"	d
CL	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
CLAIRVOYANT	include/prop.h	55;"	d
CLC_BLIND_YOU	src/mcastu.c	28;"	d	file:
CLC_CONFUSE_YOU	src/mcastu.c	26;"	d	file:
CLC_CURE_SELF	src/mcastu.c	25;"	d	file:
CLC_CURSE_ITEMS	src/mcastu.c	30;"	d	file:
CLC_FIRE_PILLAR	src/mcastu.c	32;"	d	file:
CLC_GEYSER	src/mcastu.c	33;"	d	file:
CLC_INSECTS	src/mcastu.c	29;"	d	file:
CLC_LIGHTNING	src/mcastu.c	31;"	d	file:
CLC_OPEN_WOUNDS	src/mcastu.c	24;"	d	file:
CLC_PARALYZE	src/mcastu.c	27;"	d	file:
CLEAR_FOUNTAIN_LOOTED	include/rm.h	288;"	d
CLEAR_FOUNTAIN_WARNED	include/rm.h	287;"	d
CLICK_1	include/wintype.h	51;"	d
CLICK_2	include/wintype.h	52;"	d
CLIPPING	include/config.h	199;"	d
CLOAK	src/objects.c	/^	CLOAK(CLOAK_OF_DISPLACEMENT, "cloak of displacement", "piece of cloth",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(CLOAK_OF_INVISIBILITY, "cloak of invisibility", "opera cloak",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(CLOAK_OF_MAGIC_RESISTANCE, "cloak of magic resistance", "ornamental cope",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(CLOAK_OF_PROTECTION, "cloak of protection", "tattered cape",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(DWARVISH_CLOAK, "dwarvish cloak", "hooded cloak",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(ELVEN_CLOAK, "elven cloak", "faded pall",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(LAB_COAT, "lab coat", "white coat",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(LEATHER_CLOAK, "leather cloak", NULL,$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(MUMMY_WRAPPING, "mummy wrapping", NULL,$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(OILSKIN_CLOAK, "oilskin cloak", "slippery cloak",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(ORCISH_CLOAK, "orcish cloak", "coarse mantelet",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	/^	CLOAK(POISONOUS_CLOAK, "poisonous cloak", "dirty rag",$/;"	e	enum:__anon12	file:
CLOAK	src/objects.c	398;"	d	file:
CLOAK	src/objects.c	616;"	d	file:
CLOTH	include/objclass.h	50;"	d
CLOUD	include/rm.h	69;"	d
CLR_BLACK	include/color.h	16;"	d
CLR_BLACK	include/color.h	18;"	d
CLR_BLUE	include/color.h	23;"	d
CLR_BRIGHT_BLUE	include/color.h	35;"	d
CLR_BRIGHT_CYAN	include/color.h	37;"	d
CLR_BRIGHT_GREEN	include/color.h	33;"	d
CLR_BRIGHT_MAGENTA	include/color.h	36;"	d
CLR_BROWN	include/color.h	22;"	d
CLR_CYAN	include/color.h	25;"	d
CLR_GRAY	include/color.h	26;"	d
CLR_GREEN	include/color.h	21;"	d
CLR_MAGENTA	include/color.h	24;"	d
CLR_MAX	include/color.h	39;"	d
CLR_MAX	sys/winnt/nttty.c	134;"	d	file:
CLR_ORANGE	include/color.h	32;"	d
CLR_RED	include/color.h	20;"	d
CLR_WHITE	include/color.h	38;"	d
CLR_YELLOW	include/color.h	34;"	d
CMAP_DOOR	win/proxy/glyphmap.c	292;"	d	file:
CMAP_EFFECT	win/proxy/glyphmap.c	294;"	d	file:
CMAP_GROUP	win/proxy/glyphmap.c	298;"	d	file:
CMAP_NO_GROUP	win/proxy/glyphmap.c	296;"	d	file:
CMAP_SWALLOW	win/proxy/glyphmap.c	295;"	d	file:
CMAP_TRAP	win/proxy/glyphmap.c	293;"	d	file:
CMAP_WALL	win/proxy/glyphmap.c	291;"	d	file:
CMD_TRAVEL	src/cmd.c	19;"	d	file:
CO	include/decl.h	396;"	d
CO	include/tcap.h	20;"	d
COBJECT_ID	build-linux/include/lev_comp.h	/^    COBJECT_ID = 269,$/;"	e	enum:yytokentype
COBJECT_ID	build-linux/src/lev_yacc.c	/^    COBJECT_ID = 269,$/;"	e	enum:yytokentype	file:
COCKNEST	include/mkroom.h	72;"	d
COIN	src/objects.c	/^	COIN(GOLD_PIECE, "gold piece",      1000, GOLD,1),$/;"	e	enum:__anon12	file:
COIN	src/objects.c	1136;"	d	file:
COIN	src/objects.c	1140;"	d	file:
COIN_CLASS	include/objclass.h	141;"	d
COLD	include/artilist.h	20;"	d
COLD	include/artilist.h	426;"	d
COLD_RES	include/prop.h	10;"	d
COLNO	include/global.h	168;"	d
COLOR_BLACK	win/tty/termcap.c	618;"	d	file:
COLOR_BLACK	win/tty/termcap.c	623;"	d	file:
COLOR_BLACK	win/tty/termcap.c	643;"	d	file:
COLOR_BLUE	win/tty/termcap.c	625;"	d	file:
COLOR_BLUE	win/tty/termcap.c	636;"	d	file:
COLOR_CYAN	win/tty/termcap.c	627;"	d	file:
COLOR_CYAN	win/tty/termcap.c	638;"	d	file:
COLOR_GREEN	win/tty/termcap.c	626;"	d	file:
COLOR_GREEN	win/tty/termcap.c	634;"	d	file:
COLOR_H	include/color.h	6;"	d
COLOR_MAGENTA	win/tty/termcap.c	629;"	d	file:
COLOR_MAGENTA	win/tty/termcap.c	637;"	d	file:
COLOR_RED	win/tty/termcap.c	628;"	d	file:
COLOR_RED	win/tty/termcap.c	633;"	d	file:
COLOR_WHITE	win/tty/termcap.c	631;"	d	file:
COLOR_WHITE	win/tty/termcap.c	639;"	d	file:
COLOR_YELLOW	win/tty/termcap.c	630;"	d	file:
COLOR_YELLOW	win/tty/termcap.c	635;"	d	file:
COMMON_ID	include/qtext.h	54;"	d
COMSPEC	sys/share/pcsys.c	/^static const char *COMSPEC = "COMSPEC";$/;"	v	file:
CONFIG1_H	include/config1.h	6;"	d
CONFIGPREFIX	include/decl.h	437;"	d
CONFIG_H	include/config.h	6;"	d
CONFIG_SLOT	src/options.c	3853;"	d	file:
CONFLICT	include/prop.h	30;"	d
CONFUSION	include/prop.h	37;"	d
CONS_HERO	include/lev.h	28;"	d
CONS_HERO	src/mkmaze.c	859;"	d	file:
CONS_MON	include/lev.h	27;"	d
CONS_MON	src/mkmaze.c	858;"	d	file:
CONS_OBJ	include/lev.h	26;"	d
CONS_OBJ	src/mkmaze.c	857;"	d	file:
CONS_TRAP	include/lev.h	29;"	d
CONS_TRAP	src/mkmaze.c	860;"	d	file:
CONTAINED	build-linux/include/lev_comp.h	/^    CONTAINED = 323,$/;"	e	enum:yytokentype
CONTAINED	build-linux/src/lev_yacc.c	/^    CONTAINED = 323,$/;"	e	enum:yytokentype	file:
CONTAINED_SYM	src/invent.c	8;"	d	file:
CONTAINED_TOO	include/obj.h	362;"	d
CONTAINER	src/objects.c	/^	CONTAINER(BAG_OF_HOLDING, "bag of holding", "bag",      0, 1, 0, 0,  20, 15, 100, CLOTH, HI_CLOTH),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(BAG_OF_TRICKS, "bag of tricks", "bag",       0, 1, 1, 0,  20, 15, 100, CLOTH, HI_CLOTH),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(CHEST, "chest", NULL,           1, 0, 0, 1,  35,600,  16, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(ICE_BOX, "ice box", NULL,         1, 0, 0, 1,  10,900,  42, PLASTIC, CLR_WHITE),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(LARGE_BOX, "large box", NULL,       1, 0, 0, 1,  40,350,   8, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(MEDICAL_KIT, "medical kit", "leather bag",$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(OILSKIN_SACK, "oilskin sack", "bag",        0, 0, 0, 0,  10, 15, 100, CLOTH, HI_CLOTH),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	/^	CONTAINER(SACK, "sack", "bag",                0, 0, 0, 0,  40, 15,   2, CLOTH, HI_CLOTH),$/;"	e	enum:__anon12	file:
CONTAINER	src/objects.c	707;"	d	file:
CONTAINER	src/objects.c	848;"	d	file:
CONVERT	include/you.h	323;"	d
COORD_H	include/coord.h	6;"	d
COPPER	include/objclass.h	57;"	d
COPYRIGHT_BANNER_A	include/patchlevel.h	20;"	d
COPYRIGHT_BANNER_B	include/patchlevel.h	21;"	d
COPYRIGHT_BANNER_C	include/patchlevel.h	22;"	d
COPYRIGHT_BANNER_D	include/patchlevel.h	23;"	d
COPY_OBJ_DESCR	src/o_init.c	129;"	d	file:
CORR	include/rm.h	56;"	d
CORRIDOR_ID	build-linux/include/lev_comp.h	/^    CORRIDOR_ID = 292,$/;"	e	enum:yytokentype
CORRIDOR_ID	build-linux/src/lev_yacc.c	/^    CORRIDOR_ID = 292,$/;"	e	enum:yytokentype	file:
COULD_SEE	include/vision.h	14;"	d
COUNT_SAVE	include/lev.h	10;"	d
COURT	include/mkroom.h	57;"	d
CQ_SIZE	src/cmd.c	212;"	d	file:
CREATE_AMMO	include/artifact.h	64;"	d
CREATE_PORTAL	include/artifact.h	62;"	d
CROSSWALL	include/rm.h	40;"	d
CRUSHING	include/hack.h	75;"	d
CURSDIAL_H	win/curses/cursdial.h	4;"	d
CURSES_DARK_GRAY	include/wincurs.h	40;"	d
CURSES_GRAPHICS	include/config.h	37;"	d
CURSE_TYPE	build-linux/include/lev_comp.h	/^    CURSE_TYPE = 302,$/;"	e	enum:yytokentype
CURSE_TYPE	build-linux/src/lev_yacc.c	/^    CURSE_TYPE = 302,$/;"	e	enum:yytokentype	file:
CURSINIT_H	win/curses/cursinit.h	4;"	d
CURSINVT_H	win/curses/cursinvt.h	4;"	d
CURSMESG_H	win/curses/cursmesg.h	4;"	d
CURSMISC_H	win/curses/cursmisc.h	4;"	d
CURSSTAT_H	win/curses/cursstat.h	4;"	d
CURSWIN_H	win/curses/curswins.h	4;"	d
C_AMMO	src/u_init.c	53;"	d	file:
C_bl	src/display.c	2053;"	d	file:
C_blcorn	src/display.c	2067;"	d	file:
C_br	src/display.c	2056;"	d	file:
C_brcorn	src/display.c	2066;"	d	file:
C_crwall	src/display.c	2070;"	d	file:
C_tl	src/display.c	2054;"	d	file:
C_tlwall	src/display.c	2068;"	d	file:
C_tr	src/display.c	2055;"	d	file:
C_trcorn	src/display.c	2065;"	d	file:
C_tuwall	src/display.c	2069;"	d	file:
Can_dig_down	src/dungeon.c	/^boolean Can_dig_down(d_level *lev) {$/;"	f
Can_fall_thru	src/dungeon.c	/^boolean Can_fall_thru(d_level *lev) {$/;"	f
Can_rise_up	src/dungeon.c	/^boolean Can_rise_up(int x, int y, d_level *lev) {$/;"	f
Cave_man	src/u_init.c	/^static struct trobj Cave_man[] = {$/;"	v	typeref:struct:trobj	file:
Clairvoyant	include/youprop.h	169;"	d
Cloak_off	src/do_wear.c	/^int Cloak_off(void) {$/;"	f
Cloak_on	src/do_wear.c	/^int Cloak_on(void) {$/;"	f
Close	src/files.c	98;"	d	file:
Cold_resistance	include/youprop.h	36;"	d
Comp_Opt	src/options.c	/^static struct Comp_Opt {$/;"	s	file:
Conflict	include/youprop.h	207;"	d
Confusion	include/youprop.h	95;"	d
CtrlHandler	sys/winnt/nttty.c	/^static BOOL CtrlHandler(ctrltype)$/;"	f	file:
Cursed_obj	src/pray.c	30;"	d	file:
DART_TRAP	include/trap.h	54;"	d
DATAPREFIX	include/decl.h	434;"	d
DATAPREFIX	src/dlb.c	12;"	d	file:
DBWALL	include/rm.h	45;"	d
DB_DIR	include/rm.h	311;"	d
DB_EAST	include/rm.h	309;"	d
DB_FLOOR	include/rm.h	319;"	d
DB_ICE	include/rm.h	318;"	d
DB_LAVA	include/rm.h	317;"	d
DB_MOAT	include/rm.h	316;"	d
DB_NORTH	include/rm.h	307;"	d
DB_SOUTH	include/rm.h	308;"	d
DB_UNDER	include/rm.h	320;"	d
DB_WEST	include/rm.h	310;"	d
DD	src/dungeon.c	55;"	d	file:
DDIST	src/dogmove.c	419;"	d	file:
DEADMONSTER	include/monst.h	191;"	d
DEATH_GAZE	include/artifact.h	66;"	d
DEATH_LINE	src/rip.c	65;"	d	file:
DEC	sys/share/uudecode.c	72;"	d	file:
DECL_H	include/decl.h	6;"	d
DEFAULT_WINDOW_SYS	include/config.h	50;"	d
DEFAULT_WINDOW_SYS	include/config.h	72;"	d
DEFAULT_WINDOW_SYS	include/config.h	77;"	d
DEFTEXTCOLOR	sys/winnt/nttty.c	146;"	d	file:
DEFUNCT_MONSTER	include/hack.h	134;"	d
DEF_ANGEL	include/monsym.h	115;"	d
DEF_ANT	include/monsym.h	89;"	d
DEF_BAD_COINS	include/monsym.h	147;"	d
DEF_BAD_FOOD	include/monsym.h	146;"	d
DEF_BAT	include/monsym.h	116;"	d
DEF_BLOB	include/monsym.h	90;"	d
DEF_CENTAUR	include/monsym.h	117;"	d
DEF_COCKATRICE	include/monsym.h	91;"	d
DEF_DEMON	include/monsym.h	143;"	d
DEF_DOG	include/monsym.h	92;"	d
DEF_DRAGON	include/monsym.h	118;"	d
DEF_EEL	include/monsym.h	144;"	d
DEF_ELEMENTAL	include/monsym.h	119;"	d
DEF_EYE	include/monsym.h	93;"	d
DEF_FELINE	include/monsym.h	94;"	d
DEF_FUNGUS	include/monsym.h	120;"	d
DEF_GAME_NAME	include/patchlevel.h	8;"	d
DEF_GHOST	include/monsym.h	141;"	d
DEF_GIANT	include/monsym.h	122;"	d
DEF_GNOME	include/monsym.h	121;"	d
DEF_GOLEM	include/monsym.h	142;"	d
DEF_GREMLIN	include/monsym.h	95;"	d
DEF_HUMAN	include/monsym.h	140;"	d
DEF_HUMANOID	include/monsym.h	96;"	d
DEF_IMP	include/monsym.h	97;"	d
DEF_INVISIBLE	include/monsym.h	149;"	d
DEF_JABBERWOCK	include/monsym.h	123;"	d
DEF_JELLY	include/monsym.h	98;"	d
DEF_KOBOLD	include/monsym.h	99;"	d
DEF_KOP	include/monsym.h	124;"	d
DEF_LEPRECHAUN	include/monsym.h	100;"	d
DEF_LICH	include/monsym.h	125;"	d
DEF_LIGHT	include/monsym.h	113;"	d
DEF_LIZARD	include/monsym.h	145;"	d
DEF_MAILREADER	include/unixconf.h	151;"	d
DEF_MAILREADER	include/unixconf.h	153;"	d
DEF_MAILREADER	include/unixconf.h	159;"	d
DEF_MAILREADER	include/unixconf.h	162;"	d
DEF_MAILREADER	include/unixconf.h	164;"	d
DEF_MAILREADER	include/unixconf.h	168;"	d
DEF_MIMIC	include/monsym.h	101;"	d
DEF_MIMIC_DEF	include/monsym.h	151;"	d
DEF_MUMMY	include/monsym.h	126;"	d
DEF_NAGA	include/monsym.h	127;"	d
DEF_NYMPH	include/monsym.h	102;"	d
DEF_OGRE	include/monsym.h	128;"	d
DEF_ORC	include/monsym.h	103;"	d
DEF_PIERCER	include/monsym.h	104;"	d
DEF_PUDDING	include/monsym.h	129;"	d
DEF_QUADRUPED	include/monsym.h	105;"	d
DEF_QUANTMECH	include/monsym.h	130;"	d
DEF_RODENT	include/monsym.h	106;"	d
DEF_RUSTMONST	include/monsym.h	131;"	d
DEF_SNAKE	include/monsym.h	132;"	d
DEF_SPIDER	include/monsym.h	107;"	d
DEF_TRAPPER	include/monsym.h	108;"	d
DEF_TROLL	include/monsym.h	133;"	d
DEF_UMBER	include/monsym.h	134;"	d
DEF_UNICORN	include/monsym.h	109;"	d
DEF_VAMPIRE	include/monsym.h	135;"	d
DEF_VORTEX	include/monsym.h	110;"	d
DEF_WORM	include/monsym.h	111;"	d
DEF_WORM_TAIL	include/monsym.h	150;"	d
DEF_WRAITH	include/monsym.h	136;"	d
DEF_XAN	include/monsym.h	112;"	d
DEF_XORN	include/monsym.h	137;"	d
DEF_YETI	include/monsym.h	138;"	d
DEF_ZOMBIE	include/monsym.h	139;"	d
DEF_ZRUTY	include/monsym.h	114;"	d
DEG_0	sys/share/random.c	92;"	d	file:
DEG_1	sys/share/random.c	97;"	d	file:
DEG_2	sys/share/random.c	102;"	d	file:
DEG_3	sys/share/random.c	107;"	d	file:
DEG_4	sys/share/random.c	112;"	d	file:
DELPHI	include/mkroom.h	64;"	d
DELTA_CWT	src/pickup.c	44;"	d	file:
DESCRIPTION	build-linux/include/dgn_comp.h	/^    DESCRIPTION = 268,$/;"	e	enum:yytokentype
DESCRIPTION	build-linux/src/dgn_yacc.c	/^    DESCRIPTION = 268,$/;"	e	enum:yytokentype	file:
DESCRIPTOR	build-linux/include/dgn_comp.h	/^    DESCRIPTOR = 269,$/;"	e	enum:yytokentype
DESCRIPTOR	build-linux/src/dgn_yacc.c	/^    DESCRIPTOR = 269,$/;"	e	enum:yytokentype	file:
DESELECT	win/curses/cursdial.c	/^    DESELECT,$/;"	e	enum:menu_op_type	file:
DESTROY_ARM	src/do_wear.c	2126;"	d	file:
DESTROY_ARM	src/do_wear.c	2172;"	d	file:
DETECTED	src/display.c	321;"	d	file:
DETECT_MONSTERS	include/prop.h	75;"	d
DEVOUT	src/pray.c	64;"	d	file:
DEVOUT	src/read.c	9;"	d	file:
DFNS	include/artilist.h	16;"	d
DFNS	include/artilist.h	423;"	d
DGN_COMP	build-linux/src/dgn_lex.c	570;"	d	file:
DGN_FILE_H	include/dgn_file.h	6;"	d
DIALOG_BORDER_COLOR	include/wincurs.h	26;"	d
DIED	include/hack.h	67;"	d
DIGTYP_BOULDER	src/dig.c	23;"	d	file:
DIGTYP_DOOR	src/dig.c	24;"	d	file:
DIGTYP_ROCK	src/dig.c	21;"	d	file:
DIGTYP_STATUE	src/dig.c	22;"	d	file:
DIGTYP_TREE	src/dig.c	25;"	d	file:
DIGTYP_UNDIGGABLE	src/dig.c	20;"	d	file:
DIRECTION	build-linux/include/lev_comp.h	/^    DIRECTION = 304,$/;"	e	enum:yytokentype
DIRECTION	build-linux/src/lev_yacc.c	/^    DIRECTION = 304,$/;"	e	enum:yytokentype	file:
DISCLOSE_NO_WITHOUT_PROMPT	include/flag.h	139;"	d
DISCLOSE_PROMPT_DEFAULT_NO	include/flag.h	137;"	d
DISCLOSE_PROMPT_DEFAULT_YES	include/flag.h	136;"	d
DISCLOSE_YES_WITHOUT_PROMPT	include/flag.h	138;"	d
DISINT_RES	include/prop.h	12;"	d
DISMOUNT_BONES	include/hack.h	45;"	d
DISMOUNT_BYCHOICE	include/hack.h	46;"	d
DISMOUNT_ENGULFED	include/hack.h	44;"	d
DISMOUNT_FELL	include/hack.h	41;"	d
DISMOUNT_GENERIC	include/hack.h	40;"	d
DISMOUNT_POLY	include/hack.h	43;"	d
DISMOUNT_THROWN	include/hack.h	42;"	d
DISPLACED	include/prop.h	54;"	d
DISPLAY_H	include/display.h	7;"	d
DISPLAY_LAYERS	include/config.h	242;"	d
DISP_ALWAYS	include/display.h	190;"	d
DISP_BEAM	include/display.h	187;"	d
DISP_BEAM_ALWAYS	include/display.h	188;"	d
DISP_CHANGE	include/display.h	191;"	d
DISP_END	include/display.h	192;"	d
DISP_FLASH	include/display.h	189;"	d
DISP_FREEMEM	include/display.h	193;"	d
DISP_IN_GAME	include/hack.h	253;"	d
DISSOLVED	include/hack.h	74;"	d
DLB	include/config1.h	9;"	d
DLBFILE	include/dlb.h	40;"	d
DLBLIB	include/dlb.h	15;"	d
DLBRSRC	include/dlb.h	13;"	d
DLB_DIRECTORY	util/dlb_main.c	21;"	d	file:
DLB_H	include/dlb.h	6;"	d
DLB_MAX_VERS	src/dlb.c	111;"	d	file:
DLB_MIN_VERS	src/dlb.c	110;"	d	file:
DLB_VERS	util/dlb_main.c	48;"	d	file:
DOAGAIN	include/config.h	233;"	d
DOAGAIN	include/decl.h	236;"	d
DOAGAIN	include/decl.h	237;"	d
DOESCAPE	include/decl.h	235;"	d
DOESCAPE	include/wincurs.h	18;"	d
DOFORCEFIGHT	include/decl.h	232;"	d
DOGFOOD	include/edog.h	10;"	d
DONOPICKUP	include/decl.h	233;"	d
DOOR	include/rm.h	55;"	d
DOORMAX	include/global.h	188;"	d
DOOR_ID	build-linux/include/lev_comp.h	/^    DOOR_ID = 272,$/;"	e	enum:yytokentype
DOOR_ID	build-linux/src/lev_yacc.c	/^    DOOR_ID = 272,$/;"	e	enum:yytokentype	file:
DOOR_STATE	build-linux/include/lev_comp.h	/^    DOOR_STATE = 300,$/;"	e	enum:yytokentype
DOOR_STATE	build-linux/src/lev_yacc.c	/^    DOOR_STATE = 300,$/;"	e	enum:yytokentype	file:
DORUN	include/decl.h	231;"	d
DORUN_NOPICKUP	include/decl.h	234;"	d
DORUSH	include/decl.h	230;"	d
DOUBLE_CLICK	sys/winnt/nttty.c	30;"	d	file:
DOWN	include/wincurs.h	/^	DOWN,$/;"	e	enum:orient_type
DOWN	src/extralev.c	19;"	d	file:
DO_MOVE	include/hack.h	179;"	d
DRAGONLAIR	include/mkroom.h	70;"	d
DRAGON_HIDE	include/objclass.h	54;"	d
DRAGON_SILVER	include/color.h	58;"	d
DRAIN_RES	include/prop.h	62;"	d
DRAWBRIDGE_DOWN	include/rm.h	67;"	d
DRAWBRIDGE_ID	build-linux/include/lev_comp.h	/^    DRAWBRIDGE_ID = 273,$/;"	e	enum:yytokentype
DRAWBRIDGE_ID	build-linux/src/lev_yacc.c	/^    DRAWBRIDGE_ID = 273,$/;"	e	enum:yytokentype	file:
DRAWBRIDGE_UP	include/rm.h	52;"	d
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(BLACK_DRAGON_SCALES, "black dragon scales",  0, DISINT_RES, 700, 7, CLR_BLACK),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(BLACK_DRAGON_SCALE_MAIL, "black dragon scale mail",  1, DISINT_RES, 1200, 1, CLR_BLACK),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(BLUE_DRAGON_SCALES, "blue dragon scales",   0, SHOCK_RES,  500, 7, CLR_BLUE),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(BLUE_DRAGON_SCALE_MAIL, "blue dragon scale mail",   1, SHOCK_RES,   900, 1, CLR_BLUE),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(DEEP_DRAGON_SCALES, "deep dragon scales",   0, DRAIN_RES,  500, 7, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(DEEP_DRAGON_SCALE_MAIL, "deep dragon scale mail",   1, DRAIN_RES,  1200, 1, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(GRAY_DRAGON_SCALES, "gray dragon scales",   0, ANTIMAGIC,  700, 7, CLR_GRAY),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(GRAY_DRAGON_SCALE_MAIL, "gray dragon scale mail",   1, ANTIMAGIC,  1200, 1, CLR_GRAY),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(GREEN_DRAGON_SCALES, "green dragon scales",  0, POISON_RES, 500, 7, CLR_GREEN),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(GREEN_DRAGON_SCALE_MAIL, "green dragon scale mail",  1, POISON_RES,  900, 1, CLR_GREEN),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(ORANGE_DRAGON_SCALES, "orange dragon scales", 0, SLEEP_RES,  500, 7, CLR_ORANGE),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(ORANGE_DRAGON_SCALE_MAIL, "orange dragon scale mail", 1, SLEEP_RES,   900, 1, CLR_ORANGE),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(RED_DRAGON_SCALES, "red dragon scales",    0, FIRE_RES,   500, 7, CLR_RED),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(RED_DRAGON_SCALE_MAIL, "red dragon scale mail",    1, FIRE_RES,    900, 1, CLR_RED),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(SHIMMERING_DRAGON_SCALES, "shimmering dragon scales", 0, DISPLACED,  700, 7, CLR_CYAN),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(SHIMMERING_DRAGON_SCALE_MAIL, "shimmering dragon scale mail", 1, DISPLACED, 1200, 1, CLR_CYAN),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(SILVER_DRAGON_SCALES, "silver dragon scales", 0, REFLECTING, 700, 7, SILVER),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(SILVER_DRAGON_SCALE_MAIL, "silver dragon scale mail", 1, REFLECTING, 1200, 1, SILVER),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(WHITE_DRAGON_SCALES, "white dragon scales",  0, COLD_RES,   500, 7, CLR_WHITE),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(WHITE_DRAGON_SCALE_MAIL, "white dragon scale mail",  1, COLD_RES,    900, 1, CLR_WHITE),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(YELLOW_DRAGON_SCALES, "yellow dragon scales", 0, ACID_RES,   500, 7, CLR_YELLOW),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	/^	DRGN_ARMR(YELLOW_DRAGON_SCALE_MAIL, "yellow dragon scale mail", 1, ACID_RES,    900, 1, CLR_YELLOW),$/;"	e	enum:__anon12	file:
DRGN_ARMR	src/objects.c	469;"	d	file:
DRGN_ARMR	src/objects.c	499;"	d	file:
DRLI	include/artilist.h	19;"	d
DRLI	include/artilist.h	425;"	d
DROPPABLES	src/dogmove.c	/^static struct obj *DROPPABLES(struct monst *mon) {$/;"	f	file:
DROWNING	include/hack.h	72;"	d
DRY	src/sp_lev.c	158;"	d	file:
DTHSZ	src/topten.c	14;"	d	file:
DUMMY	include/hack.h	23;"	d
DUNGEON_FILE	src/dungeon.c	9;"	d	file:
DUNGEON_GROWTH	include/config.h	238;"	d
DUNGEON_H	include/dungeon.h	6;"	d
DUST	include/engrave.h	15;"	d
D_ALIGN_CHAOTIC	include/dgn_file.h	64;"	d
D_ALIGN_LAWFUL	include/dgn_file.h	66;"	d
D_ALIGN_MASK	include/dgn_file.h	68;"	d
D_ALIGN_NEUTRAL	include/dgn_file.h	65;"	d
D_ALIGN_NONE	include/dgn_file.h	63;"	d
D_BROKEN	include/rm.h	256;"	d
D_CLOSED	include/rm.h	258;"	d
D_ISOPEN	include/rm.h	257;"	d
D_LOCKED	include/rm.h	259;"	d
D_NODOOR	include/rm.h	255;"	d
D_SCATTER	include/mkroom.h	27;"	d
D_SHOP	include/mkroom.h	28;"	d
D_TEMPLE	include/mkroom.h	29;"	d
D_TRAPPED	include/rm.h	260;"	d
D_WARNED	include/rm.h	295;"	d
DeInitMAPI	sys/winnt/mapimail.c	/^int DeInitMAPI()$/;"	f
Delay	sys/winnt/winnt.c	/^void Delay(int ms)$/;"	f
DeleteFile	src/files.c	99;"	d	file:
Detect_monsters	include/youprop.h	179;"	d
Disint_resistance	include/youprop.h	46;"	d
Displaced	include/youprop.h	194;"	d
DisplayDesc	include/wintty.h	/^struct DisplayDesc {$/;"	s
DllMain	sys/winnt/nhraykey.c	/^int WINAPI DllMain(HINSTANCE hInstance, DWORD fdwReason, PVOID pvReserved)$/;"	f
Doname2	src/objnam.c	/^char * Doname2 (struct obj *obj) {$/;"	f
Dpline	include/hack.h	14;"	d
Dragon_mail_to_pm	include/obj.h	289;"	d
Dragon_scales_to_pm	include/obj.h	287;"	d
Dragon_to_scales	include/obj.h	291;"	d
Drain_resistance	include/youprop.h	61;"	d
E	src/objects.c	379;"	d	file:
E	src/objects.c	81;"	d	file:
EAcid_resistance	include/youprop.h	77;"	d
EAggravate_monster	include/youprop.h	202;"	d
EAntimagic	include/youprop.h	73;"	d
ECHO	build-linux/src/dgn_lex.c	770;"	d	file:
ECHO	build-linux/src/lev_lex.c	1074;"	d	file:
EClairvoyant	include/youprop.h	167;"	d
ECold_resistance	include/youprop.h	35;"	d
EConflict	include/youprop.h	206;"	d
EDITLEVEL	include/patchlevel.h	17;"	d
EDOG	include/edog.h	31;"	d
EDOG_H	include/edog.h	6;"	d
EDetect_monsters	include/youprop.h	178;"	d
EDisint_resistance	include/youprop.h	45;"	d
EDisplaced	include/youprop.h	193;"	d
EDrain_resistance	include/youprop.h	60;"	d
EEnergy_regeneration	include/youprop.h	291;"	d
EFast	include/youprop.h	319;"	d
EFire_resistance	include/youprop.h	30;"	d
EFlying	include/youprop.h	236;"	d
EFumbling	include/youprop.h	122;"	d
EGD	include/vault.h	25;"	d
EGYP	include/egyp.h	27;"	d
EGYP__H	include/egyp.h	4;"	d
EHalf_physical_damage	include/youprop.h	282;"	d
EHalf_spell_damage	include/youprop.h	278;"	d
EHalluc_resistance	include/youprop.h	115;"	d
EHunger	include/youprop.h	134;"	d
EInfravision	include/youprop.h	173;"	d
EInvis	include/youprop.h	186;"	d
EJumping	include/youprop.h	212;"	d
ELEASH	include/eleash.h	18;"	d
ELEASH_H	include/eleash.h	6;"	d
ELEASH_PSZ	include/eleash.h	13;"	d
ELEC	include/artilist.h	22;"	d
ELEC	include/artilist.h	428;"	d
ELevitation	include/youprop.h	226;"	d
EMIN	include/emin.h	12;"	d
EMIN_H	include/emin.h	6;"	d
EMPTY	src/objnam.c	1847;"	d	file:
EMagical_breathing	include/youprop.h	253;"	d
ENC_NORMAL	util/dlb_main.c	55;"	d	file:
ENERGY_BOOST	include/artifact.h	58;"	d
ENERGY_REGENERATION	include/prop.h	57;"	d
ENGRAVE	include/engrave.h	16;"	d
ENGRAVE_H	include/engrave.h	6;"	d
ENGRAVING_ID	build-linux/include/lev_comp.h	/^    ENGRAVING_ID = 294,$/;"	e	enum:yytokentype
ENGRAVING_ID	build-linux/src/lev_yacc.c	/^    ENGRAVING_ID = 294,$/;"	e	enum:yytokentype	file:
ENGRAVING_TYPE	build-linux/include/lev_comp.h	/^    ENGRAVING_TYPE = 303,$/;"	e	enum:yytokentype
ENGRAVING_TYPE	build-linux/src/lev_yacc.c	/^    ENGRAVING_TYPE = 303,$/;"	e	enum:yytokentype	file:
ENGR_BLOOD	include/engrave.h	19;"	d
ENLIGHTENING	include/artifact.h	63;"	d
ENTITIES	src/dbridge.c	216;"	d	file:
ENTRY	build-linux/include/dgn_comp.h	/^    ENTRY = 273,$/;"	e	enum:yytokentype
ENTRY	build-linux/src/dgn_yacc.c	/^    ENTRY = 273,$/;"	e	enum:yytokentype	file:
ENTRYMAX	src/topten.c	18;"	d	file:
ENTRY_FORMAT	util/dlb_main.c	443;"	d	file:
ENV_SLOT	src/options.c	3855;"	d	file:
EN_ADULT_DRAGON	src/polyself.c	1562;"	d	file:
EN_BABY_DRAGON	src/polyself.c	1561;"	d	file:
EN_DOPP	src/polyself.c	1554;"	d	file:
EN_WERE	src/polyself.c	1560;"	d	file:
EOB_ACT_CONTINUE_SCAN	build-linux/src/dgn_lex.c	162;"	d	file:
EOB_ACT_CONTINUE_SCAN	build-linux/src/lev_lex.c	162;"	d	file:
EOB_ACT_END_OF_FILE	build-linux/src/dgn_lex.c	163;"	d	file:
EOB_ACT_END_OF_FILE	build-linux/src/lev_lex.c	163;"	d	file:
EOB_ACT_LAST_MATCH	build-linux/src/dgn_lex.c	164;"	d	file:
EOB_ACT_LAST_MATCH	build-linux/src/lev_lex.c	164;"	d	file:
EPATHTO_DONE	src/teleport.c	190;"	d	file:
EPATHTO_INACCESSIBLE	src/teleport.c	189;"	d	file:
EPATHTO_TAIL	src/teleport.c	191;"	d	file:
EPATHTO_UNSEEN	src/teleport.c	188;"	d	file:
EPATHTO_X	src/teleport.c	195;"	d	file:
EPATHTO_XY	src/teleport.c	193;"	d	file:
EPATHTO_Y	src/teleport.c	194;"	d	file:
EPRI	include/epri.h	16;"	d
EPRI_H	include/epri.h	6;"	d
EPasses_walls	include/youprop.h	267;"	d
EPoison_resistance	include/youprop.h	55;"	d
EPolymorph	include/youprop.h	307;"	d
EPolymorph_control	include/youprop.h	311;"	d
EProtection	include/youprop.h	295;"	d
EProtection_from_shape_changers	include/youprop.h	300;"	d
ERR	build-linux/src/dgn_yacc.c	98;"	d	file:
ERR	build-linux/src/lev_yacc.c	99;"	d	file:
ERR	util/lev_main.c	54;"	d	file:
EReflecting	include/youprop.h	323;"	d
ERegeneration	include/youprop.h	286;"	d
ESC	sys/share/tclib.c	15;"	d	file:
ESCAPED	include/hack.h	82;"	d
ESHK	include/eshk.h	46;"	d
ESHK_H	include/eshk.h	6;"	d
ESearching	include/youprop.h	163;"	d
ESee_invisible	include/youprop.h	140;"	d
EShock_resistance	include/youprop.h	50;"	d
ESleep_resistance	include/youprop.h	40;"	d
ESleeping	include/youprop.h	130;"	d
ESlow_digestion	include/youprop.h	274;"	d
EStealth	include/youprop.h	197;"	d
EStone_resistance	include/youprop.h	80;"	d
ESwimming	include/youprop.h	246;"	d
ETelepat	include/youprop.h	145;"	d
ETeleport_control	include/youprop.h	221;"	d
ETeleportation	include/youprop.h	216;"	d
EUnchanging	include/youprop.h	315;"	d
EWarn_of_mon	include/youprop.h	156;"	d
EWarning	include/youprop.h	151;"	d
EWounded_legs	include/youprop.h	126;"	d
EXACT_NAME	include/decl.h	351;"	d
EXEPATH	include/ntconf.h	12;"	d
EXEPATHBUFSZ	sys/share/pcmain.c	482;"	d	file:
EXEPATHBUFSZ	util/recover.c	295;"	d	file:
EXIT_FAILURE	include/global.h	122;"	d
EXIT_SUCCESS	build-linux/src/dgn_yacc.c	324;"	d	file:
EXIT_SUCCESS	build-linux/src/dgn_yacc.c	352;"	d	file:
EXIT_SUCCESS	build-linux/src/lev_yacc.c	469;"	d	file:
EXIT_SUCCESS	build-linux/src/lev_yacc.c	497;"	d	file:
EXIT_SUCCESS	include/global.h	119;"	d
EXPIRE_GAS_CLOUD	src/region.c	52;"	d	file:
EXPLOSION	include/objclass.h	41;"	d
EXPL_DARK	include/hack.h	206;"	d
EXPL_FIERY	include/hack.h	211;"	d
EXPL_FROSTY	include/hack.h	212;"	d
EXPL_MAGICAL	include/hack.h	210;"	d
EXPL_MAX	include/hack.h	213;"	d
EXPL_MUDDY	include/hack.h	208;"	d
EXPL_NOXIOUS	include/hack.h	207;"	d
EXPL_WET	include/hack.h	209;"	d
EXTABS	sys/share/unixtty.c	104;"	d	file:
EXTABS	sys/share/unixtty.c	46;"	d	file:
EXTABS	sys/share/unixtty.c	48;"	d	file:
EXTCMDLIST_SIZE	src/cmd.c	2420;"	d	file:
EXTERN_H	include/extern.h	6;"	d
EXT_ENCUMBER	include/hack.h	30;"	d
EYE	include/hack.h	217;"	d
E_phrase	src/dbridge.c	/^static const char *E_phrase(struct entity *etmp, const char *verb) {$/;"	f	file:
Enam	src/dbridge.c	/^static const char *Enam(struct entity *etmp) {$/;"	f	file:
Energy_regeneration	include/youprop.h	292;"	d
Enter_Blitz	src/tech.c	/^*Enter_Blitz = "Enter Blitz Command[. to end]: ";$/;"	v	file:
ExplodeLocation	src/explode.c	/^} ExplodeLocation;$/;"	t	typeref:struct:__anon8	file:
ExplodeRegion	src/explode.c	/^} ExplodeRegion;$/;"	t	typeref:struct:__anon9	file:
FACE	include/hack.h	218;"	d
FAINTED	src/attrib.c	370;"	d	file:
FAINTED	src/eat.c	53;"	d	file:
FAINTED	src/pray.c	133;"	d	file:
FAINTING	src/attrib.c	369;"	d	file:
FAINTING	src/eat.c	52;"	d	file:
FAINTING	src/pray.c	132;"	d	file:
FARAWAY	src/dogmove.c	499;"	d	file:
FAST	include/prop.h	35;"	d
FAST_SPEED	include/permonst.h	70;"	d
FATAL_DAMAGE_MODIFIER	src/artifact.c	33;"	d	file:
FCMASK	include/ntconf.h	90;"	d
FCMASK	include/unixconf.h	176;"	d
FCSIZ	include/vault.h	8;"	d
FEATURE_NOTICE_VER	include/hack.h	256;"	d
FEATURE_NOTICE_VER_MAJ	include/hack.h	261;"	d
FEATURE_NOTICE_VER_MIN	include/hack.h	262;"	d
FEATURE_NOTICE_VER_PATCH	include/hack.h	263;"	d
FEEL_COCKATRICE	include/hack.h	145;"	d
FERVENT	src/pray.c	65;"	d	file:
FIG_TRANSFORM	include/timeout.h	31;"	d
FILENAME	include/ntconf.h	66;"	d
FILENAME	include/ntconf.h	71;"	d
FILENAME	include/ntconf.h	73;"	d
FILENAME_CMP	include/dlb.h	43;"	d
FILENAME_CMP	include/ntconf.h	104;"	d
FILLING	build-linux/include/lev_comp.h	/^    FILLING = 277,$/;"	e	enum:yytokentype
FILLING	build-linux/src/lev_yacc.c	/^    FILLING = 277,$/;"	e	enum:yytokentype	file:
FINGER	include/hack.h	219;"	d
FINGERTIP	include/hack.h	220;"	d
FIRE	include/artilist.h	21;"	d
FIRE	include/artilist.h	427;"	d
FIRE_RES	include/prop.h	9;"	d
FIRE_TRAP	include/trap.h	62;"	d
FIRST_AMULET	src/end.c	14;"	d	file:
FIRST_GEM	src/end.c	13;"	d	file:
FIRST_SPELL	src/objects.c	/^	FIRST_SPELL,$/;"	e	enum:__anon12	file:
FIXED_ABIL	include/prop.h	68;"	d
FIXLEVEL	include/patchlevel.h	18;"	d
FLAGS_ID	build-linux/include/lev_comp.h	/^    FLAGS_ID = 318,$/;"	e	enum:yytokentype
FLAGS_ID	build-linux/src/lev_yacc.c	/^    FLAGS_ID = 318,$/;"	e	enum:yytokentype	file:
FLAG_H	include/flag.h	10;"	d
FLAG_TYPE	build-linux/include/lev_comp.h	/^    FLAG_TYPE = 319,$/;"	e	enum:yytokentype
FLAG_TYPE	build-linux/src/lev_yacc.c	/^    FLAG_TYPE = 319,$/;"	e	enum:yytokentype	file:
FLASHED_LIGHT	include/hack.h	101;"	d
FLESH	include/objclass.h	48;"	d
FLEXINT_H	build-linux/src/dgn_lex.c	30;"	d	file:
FLEXINT_H	build-linux/src/lev_lex.c	30;"	d	file:
FLEX_BETA	build-linux/src/dgn_lex.c	14;"	d	file:
FLEX_BETA	build-linux/src/lev_lex.c	14;"	d	file:
FLEX_SCANNER	build-linux/src/dgn_lex.c	9;"	d	file:
FLEX_SCANNER	build-linux/src/lev_lex.c	9;"	d	file:
FLING	include/hack.h	201;"	d
FLYING	include/prop.h	69;"	d
FM_EVERYWHERE	include/hack.h	167;"	d
FM_FMON	include/hack.h	164;"	d
FM_MIGRATE	include/hack.h	165;"	d
FM_MYDOGS	include/hack.h	166;"	d
FOLLOW	src/invent.c	33;"	d	file:
FOLLOW	src/pickup.c	35;"	d	file:
FOOD	src/objects.c	/^	FOOD(APPLE, "apple",               13, 1,  2, 0, VEGGY,  50, CLR_RED),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(ASIAN_PEAR, "asian pear",           1, 1,  2, 0, VEGGY,  75, CLR_BRIGHT_GREEN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(BANANA, "banana",              10, 1,  2, 0, VEGGY,  80, CLR_YELLOW),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CANDY_BAR, "candy bar",           13, 1,  2, 0, VEGGY, 100, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CARROT, "carrot",              15, 1,  2, 0, VEGGY,  50, CLR_ORANGE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CHEESE, "cheese",              10, 2,  2, 0, FLESH, 250, CLR_YELLOW),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CLOVE_OF_GARLIC, "clove of garlic",      7, 1,  1, 0, VEGGY,  40, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CORPSE, "corpse",               0, 1,  0, 0, FLESH,   0, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CRAM_RATION, "cram ration",         20, 3, 15, 0, VEGGY, 600, HI_ORGANIC),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(CREAM_PIE, "cream pie",           10, 1, 10, 0, VEGGY, 100, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(C_RATION, "C-ration",             0, 1, 10, 0, VEGGY, 300, HI_ORGANIC),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(EGG, "egg",                 80, 1,  1, 1, FLESH,  80, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(EUCALYPTUS_LEAF, "eucalyptus leaf",      4, 1,  1, 0, VEGGY,  30, CLR_GREEN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(EYEBALL, "eyeball",              0, 1,  0, 0, FLESH,  10, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(FOOD_RATION, "food ration",        380, 5, 20, 0, VEGGY, 800, HI_ORGANIC),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(FORTUNE_COOKIE, "fortune cookie",      55, 1,  1, 0, VEGGY,  40, CLR_YELLOW),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(HOLY_WAFER, "holy wafer",           7, 1,  1, 0, VEGGY, 150, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(HUGE_CHUNK_OF_MEAT, "huge chunk of meat",   0,20,400, 0, FLESH,2000, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(KELP_FROND, "kelp frond",           0, 1,  1, 0, VEGGY,  30, CLR_GREEN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(K_RATION, "K-ration",             0, 1, 10, 0, VEGGY, 400, HI_ORGANIC),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(LEMBAS_WAFER, "lembas wafer",        20, 2,  5, 0, VEGGY, 800, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(LUMP_OF_ROYAL_JELLY, "lump of royal jelly",  1, 1,  2, 0, VEGGY, 200, CLR_YELLOW),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(MEATBALL, "meatball",             0, 1,  1, 0, FLESH,   5, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(MEAT_STICK, "meat stick",           0, 1,  1, 0, FLESH,   5, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(MELON, "melon",                9, 1,  5, 0, VEGGY, 100, CLR_BRIGHT_GREEN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(MUSHROOM, "mushroom",             1, 1,  5, 0, VEGGY,  90, CLR_BLACK),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(ORANGE, "orange",              10, 1,  2, 0, VEGGY,  80, CLR_ORANGE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(PANCAKE, "pancake",             14, 2,  2, 0, VEGGY, 200, CLR_YELLOW),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(PEAR, "pear",                 9, 1,  2, 0, VEGGY,  50, CLR_BRIGHT_GREEN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(PILL, "pill",                 1, 1,  1, 0, VEGGY,   0, CLR_BRIGHT_MAGENTA),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(SANDWICH, "sandwich",            10, 1, 10, 0, FLESH, 100, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(SEVERED_HAND, "severed hand",         0, 1,  0, 0, FLESH,  40, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(SLIME_MOLD, "slime mold",          75, 1,  5, 0, VEGGY, 250, HI_ORGANIC),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(SPRIG_OF_WOLFSBANE, "sprig of wolfsbane",   7, 1,  1, 0, VEGGY,  40, CLR_GREEN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(TIN, "tin",                 75, 0, 10, 1, METAL,   0, HI_METAL),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(TORTILLA, "tortilla",             1, 2,  2, 0, VEGGY,  80, CLR_WHITE),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	/^	FOOD(TRIPE_RATION, "tripe ration",       142, 2, 10, 0, FLESH, 200, CLR_BROWN),$/;"	e	enum:__anon12	file:
FOOD	src/objects.c	853;"	d	file:
FOOD	src/objects.c	917;"	d	file:
FOODSHOP	include/mkroom.h	83;"	d
FOOD_CLASS	include/objclass.h	136;"	d
FOOD_SYM	include/objclass.h	171;"	d
FOOT	include/hack.h	221;"	d
FORCEBUNGLE	include/hack.h	175;"	d
FORGOTTEN	include/dungeon.h	169;"	d
FORTUNE_COST	src/gypsy.c	186;"	d	file:
FOUNTAIN	include/rm.h	60;"	d
FOUNTAIN_ID	build-linux/include/lev_comp.h	/^    FOUNTAIN_ID = 295,$/;"	e	enum:yytokentype
FOUNTAIN_ID	build-linux/src/lev_yacc.c	/^    FOUNTAIN_ID = 295,$/;"	e	enum:yytokentype	file:
FOUNTAIN_IS_LOOTED	include/rm.h	284;"	d
FOUNTAIN_IS_WARNED	include/rm.h	283;"	d
FQN_MAX_FILENAME	include/decl.h	442;"	d
FQN_NUMBUF	src/files.c	56;"	d	file:
FREE_ACTION	include/prop.h	65;"	d
FREE_SAVE	include/lev.h	12;"	d
FRENCH_FRIED_TIN	src/eat.c	140;"	d	file:
FROMEXPER	include/prop.h	116;"	d
FROMOUTSIDE	include/prop.h	118;"	d
FROMRACE	include/prop.h	117;"	d
FROM_LEFT_1ST_BUTTON_PRESSED	sys/winnt/nttty.c	23;"	d	file:
FROM_LEFT_2ND_BUTTON_PRESSED	sys/winnt/nttty.c	25;"	d	file:
FROM_LEFT_3RD_BUTTON_PRESSED	sys/winnt/nttty.c	26;"	d	file:
FROM_LEFT_4TH_BUTTON_PRESSED	sys/winnt/nttty.c	27;"	d	file:
FULL_MOON	include/flag.h	89;"	d
FUMBLING	include/prop.h	46;"	d
FUNC_TAB_H	include/func_tab.h	6;"	d
FUNGUSFARM	include/mkroom.h	76;"	d
F_BOOK	src/u_init.c	62;"	d	file:
F_LOOTED	include/rm.h	281;"	d
F_WARNED	include/rm.h	282;"	d
Fast	include/youprop.h	320;"	d
Fgetc	src/sp_lev.c	59;"	d	file:
Fire_resistance	include/youprop.h	31;"	d
Fixed_abil	include/youprop.h	332;"	d
Flame_Mage	src/u_init.c	/^static struct trobj Flame_Mage[] = {$/;"	v	typeref:struct:trobj	file:
Flying	include/youprop.h	237;"	d
Food_xname	src/eat.c	/^static const char *Food_xname(struct obj *food, boolean the_pfx) {$/;"	f	file:
Fread	src/dungeon.c	/^static void Fread(void *ptr, int size, int nitems, dlb *stream) {$/;"	f	file:
Fread	src/questpgr.c	/^static void Fread(void *ptr, int size, int nitems, dlb *stream) {$/;"	f	file:
Fread	src/sp_lev.c	58;"	d	file:
Free	src/sp_lev.c	62;"	d	file:
Free	util/lev_main.c	57;"	d	file:
Free_action	include/youprop.h	330;"	d
Fumbling	include/youprop.h	123;"	d
GDIST	src/dogmove.c	620;"	d	file:
GDIST	src/priest.c	57;"	d	file:
GDIST	src/shk.c	3274;"	d	file:
GEM	src/objects.c	/^	GEM(AGATE, "agate", "orange",                12,  1,  200, 15,  6, GEMSTONE, CLR_ORANGE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(AMBER, "amber", "yellowish brown",        8,  1, 1000, 15,  2, GEMSTONE, CLR_BROWN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(AMETHYST, "amethyst", "violet",             14,  1,  600, 15,  7, GEMSTONE, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(AQUAMARINE, "aquamarine", "green",             6,  1, 1500, 15,  8, GEMSTONE, CLR_GREEN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(BLACK_OPAL, "black opal", "black",             3,  1, 2500, 15,  8, GEMSTONE, CLR_BLACK),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(CHRYSOBERYL, "chrysoberyl", "yellow",           8,  1,  700, 15,  5, GEMSTONE, CLR_YELLOW),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(CITRINE, "citrine", "yellow",               4,  1, 1500, 15,  6, GEMSTONE, CLR_YELLOW),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(DIAMOND, "diamond", "white",                3,  1, 4000, 15, 10, GEMSTONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(DILITHIUM_CRYSTAL, "dilithium crystal", "white",      2,  1, 4500, 15,  5, GEMSTONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(EMERALD, "emerald", "green",                5,  1, 2500, 15,  8, GEMSTONE, CLR_GREEN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(FLUORITE, "fluorite", "violet",             15,  1,  400, 15,  4, GEMSTONE, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(GARNET, "garnet", "red",                  12,  1,  700, 15,  7, GEMSTONE, CLR_RED),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(JACINTH, "jacinth", "orange",               3,  1, 3250, 15,  9, GEMSTONE, CLR_ORANGE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(JADE, "jade", "green",                  10,  1,  300, 15,  6, GEMSTONE, CLR_GREEN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(JASPER, "jasper", "red",                  15,  1,  500, 15,  7, GEMSTONE, CLR_RED),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(JET, "jet", "black",                    6,  1,  850, 15,  7, GEMSTONE, CLR_BLACK),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(OBSIDIAN, "obsidian", "black",               9,  1,  200, 15,  6, GEMSTONE, CLR_BLACK),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(OPAL, "opal", "white",                  12,  1,  800, 15,  6, GEMSTONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(RUBY, "ruby", "red",                     4,  1, 3500, 15,  9, GEMSTONE, CLR_RED),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(SAPPHIRE, "sapphire", "blue",                4,  1, 3000, 15,  9, GEMSTONE, CLR_BLUE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(TOPAZ, "topaz", "yellowish brown",       10,  1,  900, 15,  8, GEMSTONE, CLR_BROWN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(TURQUOISE, "turquoise", "green",              6,  1, 2000, 15,  6, GEMSTONE, CLR_GREEN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_BLACK_GLASS, "worthless piece of black glass",  "black",  76, 1, 0, 6, 5, GLASS, CLR_BLACK),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_BLUE_GLASS, "worthless piece of blue glass", "blue",     76, 1, 0, 6, 5, GLASS, CLR_BLUE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_GREEN_GLASS, "worthless piece of green glass", "green",   76, 1, 0, 6, 5, GLASS, CLR_GREEN),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_ORANGE_GLASS, "worthless piece of orange glass", "orange", 76, 1, 0, 6, 5, GLASS, CLR_ORANGE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_RED_GLASS, "worthless piece of red glass", "red",       76, 1, 0, 6, 5, GLASS, CLR_RED),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_VIOLET_GLASS, "worthless piece of violet glass", "violet", 76, 1, 0, 6, 5, GLASS, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_WHITE_GLASS, "worthless piece of white glass", "white",   76, 1, 0, 6, 5, GLASS, CLR_WHITE),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_YELLOWISH_BROWN_GLASS, "worthless piece of yellowish brown glass", "yellowish brown",$/;"	e	enum:__anon12	file:
GEM	src/objects.c	/^	GEM(WORTHLESS_PIECE_OF_YELLOW_GLASS, "worthless piece of yellow glass", "yellow", 76, 1, 0, 6, 5, GLASS, CLR_YELLOW),$/;"	e	enum:__anon12	file:
GEM	src/objects.c	1143;"	d	file:
GEM	src/objects.c	1198;"	d	file:
GEMSTONE	include/objclass.h	64;"	d
GEM_CLASS	include/objclass.h	142;"	d
GEM_SYM	include/objclass.h	177;"	d
GENOCIDED	include/hack.h	78;"	d
GEOMETRY_ID	build-linux/include/lev_comp.h	/^    GEOMETRY_ID = 266,$/;"	e	enum:yytokentype
GEOMETRY_ID	build-linux/src/lev_yacc.c	/^    GEOMETRY_ID = 266,$/;"	e	enum:yytokentype	file:
GFlag	win/tty/wintty.c	/^bool GFlag = false;$/;"	v
GIANTCOURT	include/mkroom.h	68;"	d
GLASS	include/objclass.h	63;"	d
GLIB	include/prop.h	50;"	d
GLOBAL_H	include/global.h	6;"	d
GLOVES	src/objects.c	/^	GLOVES(GAUNTLETS_OF_DEXTERITY, "gauntlets of dexterity", "fencing gloves",$/;"	e	enum:__anon12	file:
GLOVES	src/objects.c	/^	GLOVES(GAUNTLETS_OF_FUMBLING, "gauntlets of fumbling", "padded gloves",$/;"	e	enum:__anon12	file:
GLOVES	src/objects.c	/^	GLOVES(GAUNTLETS_OF_POWER, "gauntlets of power", "riding gloves",$/;"	e	enum:__anon12	file:
GLOVES	src/objects.c	/^	GLOVES(GAUNTLETS_OF_SWIMMING, "gauntlets of swimming", "black gloves",$/;"	e	enum:__anon12	file:
GLOVES	src/objects.c	/^	GLOVES(LEATHER_GLOVES, "leather gloves", "old gloves",$/;"	e	enum:__anon12	file:
GLOVES	src/objects.c	402;"	d	file:
GLOVES	src/objects.c	618;"	d	file:
GLYPH_BODY_OFF	include/display.h	274;"	d
GLYPH_CMAP_OFF	include/display.h	277;"	d
GLYPH_DETECT_OFF	include/display.h	273;"	d
GLYPH_EXPLODE_OFF	include/display.h	278;"	d
GLYPH_INVISIBLE	include/display.h	286;"	d
GLYPH_INVIS_OFF	include/display.h	272;"	d
GLYPH_MON_OFF	include/display.h	270;"	d
GLYPH_OBJ_OFF	include/display.h	276;"	d
GLYPH_PET_OFF	include/display.h	271;"	d
GLYPH_RIDDEN_OFF	include/display.h	275;"	d
GLYPH_SWALLOW_OFF	include/display.h	280;"	d
GLYPH_WARNING_OFF	include/display.h	281;"	d
GLYPH_ZAP_OFF	include/display.h	279;"	d
GNU_REGEX	include/unixconf.h	303;"	d
GOLD	include/objclass.h	59;"	d
GOLD_CAPACITY	src/pickup.c	49;"	d	file:
GOLD_ID	build-linux/include/lev_comp.h	/^    GOLD_ID = 293,$/;"	e	enum:yytokentype
GOLD_ID	build-linux/src/lev_yacc.c	/^    GOLD_ID = 293,$/;"	e	enum:yytokentype	file:
GOLD_LINE	src/rip.c	64;"	d	file:
GOLD_SYM	include/objclass.h	176;"	d
GOLD_TYPES	include/hack.h	151;"	d
GOLD_WT	src/pickup.c	47;"	d	file:
GRAVE	include/rm.h	64;"	d
GRENADE_TRIGGER	src/explode.c	811;"	d	file:
GSELIDX	win/tty/wintty.c	1202;"	d	file:
GTTY	sys/share/unixtty.c	115;"	d	file:
GTTY	sys/share/unixtty.c	118;"	d	file:
GTTY	sys/share/unixtty.c	67;"	d	file:
GTTY	sys/share/unixtty.c	71;"	d	file:
GTTY	sys/share/unixtty.c	74;"	d	file:
GTTY2	sys/share/unixtty.c	121;"	d	file:
GTTY2	sys/share/unixtty.c	78;"	d	file:
GUIDEBOOK_SLOT	src/pager.c	/^	GUIDEBOOK_SLOT,$/;"	e	enum:__anon16	file:
GUILaunched	sys/winnt/nttty.c	/^int GUILaunched;$/;"	v
GUN	src/objects.c	/^	GUN(ASSAULT_RIFLE, "assault rifle", NULL,	   1,  0, 0,  40, 1000, 20,  5, -2, WP_BULLET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(AUTO_SHOTGUN, "auto shotgun", NULL,	   1,  1, 0,  60, 1500,  3,  2,  0,  WP_SHELL, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(CROSSBOW, "crossbow", NULL,	0, 1, 45, 50, 40, 12, -1, 0, WP_GENERIC, WOOD, P_CROSSBOW, HI_WOOD),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(GRENADE_LAUNCHER, "grenade launcher", NULL, 1,  1, 0,  55, 1500,  6, -3, -3,WP_GRENADE, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(HEAVY_MACHINE_GUN, "heavy machine gun", NULL,1,  1, 0, 500, 2000, 20,  8, -4, WP_BULLET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(PISTOL, "pistol", NULL,	   1,  0, 0,  20,  100, 15,  0,  0, WP_BULLET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(RIFLE, "rifle", NULL,		   1,  1, 0,  30,  150, 22, -1,  1, WP_BULLET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(ROCKET_LAUNCHER, "rocket launcher", NULL,  1,  1, 0, 750, 3500, 20, -5, -4, WP_ROCKET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(SHOTGUN, "shotgun", NULL,	   1,  0, 0,  35,  200,  3, -1,  3,  WP_SHELL, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(SNIPER_RIFLE, "sniper rifle", NULL,	   1,  1, 0,  50, 4000, 25, -3,  4, WP_BULLET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	/^	GUN(SUBMACHINE_GUN, "submachine gun", NULL,   1,  0, 0,  25,  250, 10,  3, -1, WP_BULLET, IRON, P_FIREARM, HI_METAL),$/;"	e	enum:__anon12	file:
GUN	src/objects.c	385;"	d	file:
GUN	src/objects.c	69;"	d	file:
G_EXTINCT	include/monflag.h	220;"	d
G_FREQ	include/monflag.h	214;"	d
G_GENO	include/monflag.h	212;"	d
G_GENOD	include/monflag.h	219;"	d
G_GONE	include/monflag.h	218;"	d
G_HELL	include/monflag.h	208;"	d
G_KNOWN	include/monflag.h	217;"	d
G_LGROUP	include/monflag.h	211;"	d
G_NOCORPSE	include/monflag.h	213;"	d
G_NOGEN	include/monflag.h	209;"	d
G_NOHELL	include/monflag.h	207;"	d
G_SGROUP	include/monflag.h	210;"	d
G_UNIQ	include/monflag.h	206;"	d
G_VLGROUP	include/monflag.h	205;"	d
GemStone	src/objnam.c	26;"	d	file:
Gender	include/you.h	/^struct Gender {$/;"	s
Getchar	include/global.h	77;"	d
Glib	include/youprop.h	110;"	d
Gloves_off	src/do_wear.c	/^int Gloves_off(void) {$/;"	f
Gloves_on	src/do_wear.c	/^int Gloves_on(void) {$/;"	f
Goodbye	src/role.c	/^Goodbye (void) {$/;"	f
HACKDIR	include/config.h	122;"	d
HACKDIR	include/config.h	124;"	d
HACKPREFIX	include/decl.h	430;"	d
HACK_H	include/hack.h	6;"	d
HAIR	include/hack.h	230;"	d
HALF_PHDAM	include/prop.h	60;"	d
HALF_SPDAM	include/prop.h	59;"	d
HALLUC	include/prop.h	44;"	d
HALLUC_RES	include/prop.h	45;"	d
HAND	include/hack.h	222;"	d
HANDED	include/hack.h	223;"	d
HANDLES_PER_NODE	win/proxy/dlbh.c	12;"	d	file:
HARDFLOOR	include/sp_lev.h	21;"	d
HARDGEM	src/objects.c	36;"	d	file:
HATCH_EGG	include/timeout.h	30;"	d
HAggravate_monster	include/youprop.h	201;"	d
HClairvoyant	include/youprop.h	166;"	d
HCold_resistance	include/youprop.h	34;"	d
HConflict	include/youprop.h	205;"	d
HConfusion	include/youprop.h	94;"	d
HDetect_monsters	include/youprop.h	177;"	d
HDisint_resistance	include/youprop.h	44;"	d
HDrain_resistance	include/youprop.h	59;"	d
HEAD	include/hack.h	224;"	d
HEADSTONE	include/engrave.h	20;"	d
HEALING	include/artifact.h	57;"	d
HEIGHT	src/mkmap.c	8;"	d	file:
HELLISH	include/dgn_file.h	59;"	d
HELM	src/objects.c	/^	HELM(CORNUTHAUM, "cornuthaum", "conical hat",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(DENTED_POT, "dented pot", NULL,$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(DUNCE_CAP, "dunce cap", "conical hat",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(DWARVISH_IRON_HELM, "dwarvish iron helm", "hard hat",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(ELVEN_LEATHER_HELM, "elven leather helm", "leather hat",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(FEDORA, "fedora", NULL,$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(HELMET, "helmet", "plumed helmet",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(HELM_OF_BRILLIANCE, "helm of brilliance", "etched helmet",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(HELM_OF_OPPOSITE_ALIGNMENT, "helm of opposite alignment", "crested helmet",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(HELM_OF_TELEPATHY, "helm of telepathy", "visored helmet",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	/^	HELM(ORCISH_HELM, "orcish helm", "iron skull cap",$/;"	e	enum:__anon12	file:
HELM	src/objects.c	400;"	d	file:
HELM	src/objects.c	615;"	d	file:
HERB_GROWTH_LIMIT	src/hack.c	58;"	d	file:
HEnergy_regeneration	include/youprop.h	290;"	d
HFast	include/youprop.h	318;"	d
HFire_resistance	include/youprop.h	29;"	d
HFumbling	include/youprop.h	121;"	d
HHalf_physical_damage	include/youprop.h	281;"	d
HHalf_spell_damage	include/youprop.h	277;"	d
HHallucination	include/youprop.h	114;"	d
HHunger	include/youprop.h	133;"	d
HIGHLIGHT_COLOR	include/wincurs.h	30;"	d
HIT_BODY	src/uhitm.c	44;"	d	file:
HIT_FATAL	src/uhitm.c	46;"	d	file:
HIT_OTHER	src/uhitm.c	45;"	d	file:
HIT_USWAPWEP	src/uhitm.c	43;"	d	file:
HIT_UWEP	src/uhitm.c	42;"	d	file:
HI_CLOTH	include/color.h	52;"	d
HI_COPPER	include/color.h	48;"	d
HI_DOMESTIC	src/mapglyph.c	10;"	d	file:
HI_DOMESTIC	src/monst.c	33;"	d	file:
HI_GLASS	include/color.h	56;"	d
HI_GOLD	include/color.h	50;"	d
HI_LEATHER	include/color.h	51;"	d
HI_LORD	src/monst.c	34;"	d	file:
HI_METAL	include/color.h	47;"	d
HI_MINERAL	include/color.h	57;"	d
HI_OBJ	include/color.h	46;"	d
HI_ORGANIC	include/color.h	53;"	d
HI_PAPER	include/color.h	55;"	d
HI_SILVER	include/color.h	49;"	d
HI_WOOD	include/color.h	54;"	d
HI_ZAP	include/color.h	59;"	d
HInfravision	include/youprop.h	172;"	d
HInvis	include/youprop.h	185;"	d
HJumping	include/youprop.h	211;"	d
HLOCK	include/ntconf.h	92;"	d
HLOCK	include/unixconf.h	240;"	d
HLevitation	include/youprop.h	225;"	d
HMagical_breathing	include/youprop.h	252;"	d
HO	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
HOLD_LOCKFILE_OPEN	include/ntconf.h	21;"	d
HOLE	include/trap.h	65;"	d
HOMEMADE_TIN	src/eat.c	133;"	d	file:
HP_TRACK	src/borg.c	8;"	d	file:
HP_TREND	src/borg.c	9;"	d	file:
HPasses_walls	include/youprop.h	266;"	d
HPoison_resistance	include/youprop.h	54;"	d
HPolymorph	include/youprop.h	306;"	d
HPolymorph_control	include/youprop.h	310;"	d
HProtection	include/youprop.h	294;"	d
HProtection_from_shape_changers	include/youprop.h	298;"	d
HRegeneration	include/youprop.h	285;"	d
HSearching	include/youprop.h	162;"	d
HSee_invisible	include/youprop.h	139;"	d
HShock_resistance	include/youprop.h	49;"	d
HSick_resistance	include/youprop.h	65;"	d
HSleep_resistance	include/youprop.h	39;"	d
HSleeping	include/youprop.h	129;"	d
HSlow_digestion	include/youprop.h	273;"	d
HStealth	include/youprop.h	196;"	d
HStun	include/youprop.h	89;"	d
HSwimming	include/youprop.h	245;"	d
HTelepat	include/youprop.h	144;"	d
HTeleport_control	include/youprop.h	220;"	d
HTeleportation	include/youprop.h	215;"	d
HUNGER	include/prop.h	49;"	d
HUNGRY	src/attrib.c	367;"	d	file:
HUNGRY	src/eat.c	50;"	d	file:
HUNGRY	src/pray.c	130;"	d	file:
HUNGRY	src/shk.c	2868;"	d	file:
HUP	src/files.c	696;"	d	file:
HUP	src/save.c	32;"	d	file:
HUP	src/save.c	34;"	d	file:
HUP	src/topten.c	307;"	d	file:
HUnchanging	include/youprop.h	314;"	d
HUndead_warning	include/youprop.h	159;"	d
HVY_ENCUMBER	include/hack.h	29;"	d
HWALL	include/rm.h	35;"	d
HWarn_of_mon	include/youprop.h	155;"	d
HWarning	include/youprop.h	150;"	d
HWounded_legs	include/youprop.h	125;"	d
H_LEFT	src/sp_lev.c	45;"	d	file:
H_RIGHT	src/sp_lev.c	47;"	d	file:
Half_physical_damage	include/youprop.h	283;"	d
Half_spell_damage	include/youprop.h	279;"	d
Halluc_resistance	include/youprop.h	116;"	d
Hallucination	include/youprop.h	118;"	d
Has_contents	include/obj.h	271;"	d
Healer	src/u_init.c	/^static struct trobj Healer[] = {$/;"	v	typeref:struct:trobj	file:
Hear_again	src/eat.c	/^int Hear_again(void) {$/;"	f
Hello	src/role.c	/^Hello (struct monst *mtmp) {$/;"	f
Helmet_off	src/do_wear.c	/^int Helmet_off(void) {$/;"	f
Helmet_on	src/do_wear.c	/^int Helmet_on(void) {$/;"	f
Hunger	include/youprop.h	135;"	d
IBM_r_oc_syms	src/drawing.c	/^static const uchar IBM_r_oc_syms[MAXOCLASSES] = {	\/* a la EPYX Rogue *\/$/;"	v	file:
ICE	include/rm.h	66;"	d
ICED_MOAT	include/rm.h	339;"	d
ICED_POOL	include/rm.h	338;"	d
IFBURIED	src/cmd.c	2418;"	d	file:
ILLOBJ_CLASS	include/objclass.h	130;"	d
ILLOBJ_SYM	include/objclass.h	165;"	d
IMMEDIATE	include/objclass.h	36;"	d
INFRAVISION	include/prop.h	73;"	d
INITIAL	build-linux/src/dgn_lex.c	675;"	d	file:
INITIAL	build-linux/src/lev_lex.c	978;"	d	file:
INSHOP	src/shk.c	3138;"	d	file:
INSHOP	src/shk.c	3197;"	d	file:
INSIDE_GAS_CLOUD	src/region.c	50;"	d	file:
INSURANCE	include/config.h	109;"	d
INT16_MAX	build-linux/src/dgn_lex.c	72;"	d	file:
INT16_MAX	build-linux/src/lev_lex.c	72;"	d	file:
INT16_MIN	build-linux/src/dgn_lex.c	63;"	d	file:
INT16_MIN	build-linux/src/lev_lex.c	63;"	d	file:
INT32_MAX	build-linux/src/dgn_lex.c	75;"	d	file:
INT32_MAX	build-linux/src/lev_lex.c	75;"	d	file:
INT32_MIN	build-linux/src/dgn_lex.c	66;"	d	file:
INT32_MIN	build-linux/src/lev_lex.c	66;"	d	file:
INT8_MAX	build-linux/src/dgn_lex.c	69;"	d	file:
INT8_MAX	build-linux/src/lev_lex.c	69;"	d	file:
INT8_MIN	build-linux/src/dgn_lex.c	60;"	d	file:
INT8_MIN	build-linux/src/lev_lex.c	60;"	d	file:
INTEGER	build-linux/include/dgn_comp.h	/^    INTEGER = 258,$/;"	e	enum:yytokentype
INTEGER	build-linux/include/lev_comp.h	/^    INTEGER = 259,$/;"	e	enum:yytokentype
INTEGER	build-linux/src/dgn_yacc.c	/^    INTEGER = 258,$/;"	e	enum:yytokentype	file:
INTEGER	build-linux/src/lev_yacc.c	/^    INTEGER = 259,$/;"	e	enum:yytokentype	file:
INTERJECTION_TYPES	include/ntconf.h	46;"	d
INTERJECT_PANIC	include/ntconf.h	45;"	d
INTRINSIC	include/prop.h	119;"	d
INVALID_TYPE	include/rm.h	72;"	d
INVERT	win/curses/cursdial.c	/^    INVERT$/;"	e	enum:menu_op_type	file:
INVIS	include/prop.h	22;"	d
INVIS_BEAM	include/hack.h	102;"	d
INVORDER_SORT	include/hack.h	143;"	d
INVPOS_DISTANCE	src/mkmaze.c	630;"	d	file:
INVPOS_DISTANCE	src/mkmaze.c	654;"	d	file:
INVPOS_X_MARGIN	src/mkmaze.c	628;"	d	file:
INVPOS_X_MARGIN	src/mkmaze.c	652;"	d	file:
INVPOS_Y_MARGIN	src/mkmaze.c	629;"	d	file:
INVPOS_Y_MARGIN	src/mkmaze.c	653;"	d	file:
INVULNERABLE	include/prop.h	64;"	d
INV_WIN	include/wincurs.h	37;"	d
IN_SIGHT	include/vision.h	15;"	d
IRON	include/objclass.h	55;"	d
IRONBARS	include/rm.h	54;"	d
ISCTRL	src/cmd.c	2257;"	d	file:
ISMETA	src/cmd.c	2249;"	d	file:
IS_7BIT	sys/share/unixtty.c	111;"	d	file:
IS_7BIT	sys/share/unixtty.c	63;"	d	file:
IS_AIR	include/rm.h	99;"	d
IS_ALTAR	include/rm.h	96;"	d
IS_CHAIN_ROCK	src/ball.c	381;"	d	file:
IS_CHAIN_ROCK	src/ball.c	534;"	d	file:
IS_CMAP_DOOR	win/proxy/glyphmap.c	283;"	d	file:
IS_CMAP_EFFECT	win/proxy/glyphmap.c	286;"	d	file:
IS_CMAP_SWALLOW	win/proxy/glyphmap.c	288;"	d	file:
IS_CMAP_TRAP	win/proxy/glyphmap.c	284;"	d	file:
IS_CMAP_WALL	win/proxy/glyphmap.c	282;"	d	file:
IS_DOOR	include/rm.h	82;"	d
IS_DRAWBRIDGE	include/rm.h	97;"	d
IS_FOUNTAIN	include/rm.h	92;"	d
IS_FURNITURE	include/rm.h	98;"	d
IS_GRAVE	include/rm.h	88;"	d
IS_GRAVE	include/rm.h	95;"	d
IS_LAST_ROOM_PTR	include/mkroom.h	117;"	d
IS_LAST_SUBROOM_PTR	include/mkroom.h	118;"	d
IS_POOL	include/rm.h	90;"	d
IS_ROCK	include/rm.h	81;"	d
IS_ROOM	include/rm.h	86;"	d
IS_ROOM_INDEX	include/mkroom.h	111;"	d
IS_ROOM_PTR	include/mkroom.h	110;"	d
IS_SHOP	src/hack.c	16;"	d	file:
IS_SHOP	src/shk.c	20;"	d	file:
IS_SINK	include/rm.h	93;"	d
IS_SOFT	include/rm.h	100;"	d
IS_STWALL	include/rm.h	80;"	d
IS_SUBROOM_INDEX	include/mkroom.h	114;"	d
IS_SUBROOM_PTR	include/mkroom.h	112;"	d
IS_THRONE	include/rm.h	91;"	d
IS_TOILET	include/rm.h	94;"	d
IS_TREE	include/rm.h	83;"	d
IS_WALL	include/rm.h	79;"	d
I_BOOK	src/u_init.c	92;"	d	file:
I_SPECIAL	include/prop.h	121;"	d
Ice_Mage	src/u_init.c	/^static struct trobj Ice_Mage[] = {$/;"	v	typeref:struct:trobj	file:
Icebox	src/pickup.c	1919;"	d	file:
Icebox	src/pickup.c	55;"	d	file:
In_V_tower	src/dungeon.c	/^boolean In_V_tower(d_level *lev) {$/;"	f
In_W_tower	src/dungeon.c	/^boolean In_W_tower(int x, int y, d_level *lev) {$/;"	f
In_endgame	include/dungeon.h	144;"	d
In_hell	src/dungeon.c	/^boolean In_hell(d_level *lev) {$/;"	f
In_mines	src/dungeon.c	/^boolean In_mines(d_level *lev) {$/;"	f
In_quest	src/dungeon.c	/^boolean In_quest(d_level *lev) {$/;"	f
In_sokoban	include/dungeon.h	142;"	d
In_spiders	src/dungeon.c	/^boolean In_spiders(d_level *lev) {$/;"	f
Infravision	include/youprop.h	174;"	d
Inhell	include/dungeon.h	143;"	d
InitMAPI	sys/winnt/mapimail.c	/^int InitMAPI()$/;"	f
Instant_Death	src/hack.c	/^int Instant_Death = 0;$/;"	v
Instrument	src/u_init.c	/^static struct trobj Instrument[] = {$/;"	v	typeref:struct:trobj	file:
Invis	include/youprop.h	188;"	d
Invisible	include/youprop.h	190;"	d
Invocation_lev	src/dungeon.c	/^boolean Invocation_lev(d_level *lev) {$/;"	f
Invulnerable	include/youprop.h	70;"	d
Is_IceBox	src/restore.c	51;"	d	file:
Is_airlevel	include/dungeon.h	105;"	d
Is_aligned_quest	include/dungeon.h	129;"	d
Is_asmo_level	include/dungeon.h	110;"	d
Is_astralevel	include/dungeon.h	101;"	d
Is_baal_level	include/dungeon.h	111;"	d
Is_bigroom	include/dungeon.h	119;"	d
Is_blackmarket	include/dungeon.h	140;"	d
Is_botlevel	src/dungeon.c	/^boolean Is_botlevel(d_level *lev) {$/;"	f
Is_box	include/obj.h	275;"	d
Is_branchlev	src/dungeon.c	/^branch *Is_branchlev(d_level *lev) {$/;"	f
Is_candle	include/obj.h	320;"	d
Is_chaotic_quest	include/dungeon.h	128;"	d
Is_container	include/obj.h	273;"	d
Is_demogorgon_level	include/dungeon.h	121;"	d
Is_dispater_level	include/dungeon.h	124;"	d
Is_dragon_armor	include/obj.h	286;"	d
Is_dragon_mail	include/obj.h	284;"	d
Is_dragon_scales	include/obj.h	282;"	d
Is_earthlevel	include/dungeon.h	102;"	d
Is_firelevel	include/dungeon.h	104;"	d
Is_geryon_level	include/dungeon.h	123;"	d
Is_juiblex_level	include/dungeon.h	109;"	d
Is_knox	include/dungeon.h	135;"	d
Is_lawful_quest	include/dungeon.h	126;"	d
Is_mbag	include/obj.h	276;"	d
Is_medusa_level	include/dungeon.h	106;"	d
Is_mineend_level	include/dungeon.h	137;"	d
Is_nemesis	include/dungeon.h	134;"	d
Is_neutral_quest	include/dungeon.h	127;"	d
Is_oracle_level	include/dungeon.h	107;"	d
Is_portal_level	include/dungeon.h	116;"	d
Is_qlocate	include/dungeon.h	133;"	d
Is_qstart	include/dungeon.h	132;"	d
Is_rogue_level	include/dungeon.h	117;"	d
Is_sanctum	include/dungeon.h	115;"	d
Is_sokoend_level	include/dungeon.h	138;"	d
Is_special	src/dungeon.c	/^s_level *Is_special(d_level *lev) {$/;"	f
Is_stronghold	include/dungeon.h	118;"	d
Is_valley	include/dungeon.h	108;"	d
Is_waterlevel	include/dungeon.h	103;"	d
Is_wiz1_level	include/dungeon.h	112;"	d
Is_wiz2_level	include/dungeon.h	113;"	d
Is_wiz3_level	include/dungeon.h	114;"	d
Is_yeenoghu_level	include/dungeon.h	122;"	d
Izchak_speaks	src/shk.c	/^const char *Izchak_speaks[]= {$/;"	v
JUMPING	include/prop.h	47;"	d
Japanese_item_name	src/objnam.c	/^static const char * Japanese_item_name(int i) {$/;"	f	file:
Japanese_items	src/objnam.c	/^static struct Jitem Japanese_items[] = {$/;"	v	typeref:struct:Jitem	file:
Jitem	src/objnam.c	/^struct Jitem {$/;"	s	file:
Jumping	include/youprop.h	213;"	d
KDMKTONE	src/music.c	687;"	d	file:
KE	win/tty/termcap.c	/^static char *KS = NULL, *KE = NULL;	\/* keypad sequences *\/$/;"	v	file:
KEEN	src/spell.c	17;"	d	file:
KEEPTRAITS	src/mon.c	184;"	d	file:
KEYHANDLERNAME	sys/winnt/nttty.c	/^typedef int (__stdcall * KEYHANDLERNAME)($/;"	t	file:
KEYPADHI	sys/winnt/nh340key.c	48;"	d	file:
KEYPADHI	sys/winnt/nhdefkey.c	54;"	d	file:
KEYPADHI	sys/winnt/nhraykey.c	206;"	d	file:
KEYPADLO	sys/winnt/nh340key.c	47;"	d	file:
KEYPADLO	sys/winnt/nhdefkey.c	53;"	d	file:
KEYPADLO	sys/winnt/nhraykey.c	205;"	d	file:
KEY_ESC	include/wincurs.h	25;"	d
KICKED_WEAPON	include/hack.h	100;"	d
KILLED_BY	include/decl.h	186;"	d
KILLED_BY_AN	include/decl.h	185;"	d
KIOC	src/music.c	686;"	d	file:
KS	win/tty/termcap.c	/^static char *KS = NULL, *KE = NULL;	\/* keypad sequences *\/$/;"	v	file:
KeyState	sys/winnt/nhdefkey.c	/^static BYTE KeyState[256];$/;"	v	file:
Knight	src/u_init.c	/^static struct trobj Knight[] = {$/;"	v	typeref:struct:trobj	file:
LADDER	include/rm.h	59;"	d
LADDER_ID	build-linux/include/lev_comp.h	/^    LADDER_ID = 282,$/;"	e	enum:yytokentype
LADDER_ID	build-linux/src/lev_yacc.c	/^    LADDER_ID = 282,$/;"	e	enum:yytokentype	file:
LANDMINE	include/trap.h	58;"	d
LAN_FEATURES	include/ntconf.h	15;"	d
LAN_RO_PLAYGROUND	include/ntconf.h	129;"	d
LAN_SHARED_BONES	include/ntconf.h	130;"	d
LARGEST_INT	include/global.h	74;"	d
LAST_AMULET	src/end.c	15;"	d	file:
LAST_GEM	src/objects.c	/^	LAST_GEM = JADE,$/;"	e	enum:__anon12	file:
LAST_PROP	include/prop.h	76;"	d
LAST_SPELL	src/objects.c	/^	LAST_SPELL = SPE_BOOK_OF_THE_DEAD,$/;"	e	enum:__anon12	file:
LAUNCH_KNOWN	include/hack.h	203;"	d
LAUNCH_UNSEEN	include/hack.h	202;"	d
LAVAPOOL	include/rm.h	53;"	d
LA_DOWN	include/rm.h	333;"	d
LA_UP	include/rm.h	332;"	d
LB_BASE1	src/tech.c	234;"	d	file:
LB_BASE2	src/tech.c	235;"	d	file:
LB_CYCLE	src/tech.c	233;"	d	file:
LB_HPMOD	src/tech.c	238;"	d	file:
LB_STRIP	src/tech.c	236;"	d	file:
LDIOC	sys/share/unixtty.c	299;"	d	file:
LEATHER	include/objclass.h	51;"	d
LEFT	include/wincurs.h	/^	LEFT,$/;"	e	enum:orient_type
LEFT	src/extralev.c	20;"	d	file:
LEFT	src/sp_lev.c	44;"	d	file:
LEFTBUTTON	include/ntconf.h	151;"	d
LEFT_OR_RIGHT	build-linux/include/lev_comp.h	/^    LEFT_OR_RIGHT = 311,$/;"	e	enum:yytokentype
LEFT_OR_RIGHT	build-linux/src/lev_yacc.c	/^    LEFT_OR_RIGHT = 311,$/;"	e	enum:yytokentype	file:
LEFT_RING	include/prop.h	125;"	d
LEFT_SIDE	include/prop.h	127;"	d
LEG	include/hack.h	225;"	d
LEMUREPIT	include/mkroom.h	74;"	d
LEPREHALL	include/mkroom.h	69;"	d
LETHE	include/sp_lev.h	26;"	d
LEV	build-linux/include/lev_comp.h	/^    LEV = 290,$/;"	e	enum:yytokentype
LEV	build-linux/src/lev_yacc.c	/^    LEV = 290,$/;"	e	enum:yytokentype	file:
LEVALIGN	build-linux/include/dgn_comp.h	/^    LEVALIGN = 272,$/;"	e	enum:yytokentype
LEVALIGN	build-linux/src/dgn_yacc.c	/^    LEVALIGN = 272,$/;"	e	enum:yytokentype	file:
LEVEL	build-linux/include/dgn_comp.h	/^    LEVEL = 262,$/;"	e	enum:yytokentype
LEVEL	build-linux/src/dgn_yacc.c	/^    LEVEL = 262,$/;"	e	enum:yytokentype	file:
LEVELDESC	build-linux/include/dgn_comp.h	/^    LEVELDESC = 270,$/;"	e	enum:yytokentype
LEVELDESC	build-linux/src/dgn_yacc.c	/^    LEVELDESC = 270,$/;"	e	enum:yytokentype	file:
LEVELPREFIX	include/decl.h	431;"	d
LEVEL_COMPILER	build-linux/src/lev_yacc.c	80;"	d	file:
LEVEL_COMPILER	util/lev_main.c	10;"	d	file:
LEVEL_ID	build-linux/include/lev_comp.h	/^    LEVEL_ID = 264,$/;"	e	enum:yytokentype
LEVEL_ID	build-linux/src/lev_yacc.c	/^    LEVEL_ID = 264,$/;"	e	enum:yytokentype	file:
LEVEL_SPECIFIC_NOCORPSE	src/mon.c	22;"	d	file:
LEVEL_TELEP	include/trap.h	68;"	d
LEVITATION	include/prop.h	27;"	d
LEV_EXT	include/global.h	30;"	d
LEV_H	include/lev.h	8;"	d
LEV_INIT_ID	build-linux/include/lev_comp.h	/^    LEV_INIT_ID = 265,$/;"	e	enum:yytokentype
LEV_INIT_ID	build-linux/src/lev_yacc.c	/^    LEV_INIT_ID = 265,$/;"	e	enum:yytokentype	file:
LEV_LEX_C	build-linux/src/lev_lex.c	871;"	d	file:
LEV_LIMIT	include/dgn_file.h	73;"	d
LEV_TELE	include/artifact.h	61;"	d
LFILE_EXISTS	include/dungeon.h	170;"	d
LI	include/decl.h	395;"	d
LI	include/tcap.h	19;"	d
LIBLISTFILE	util/dlb_main.c	22;"	d	file:
LICENSE_SLOT	src/pager.c	/^	LICENSE_SLOT=9,$/;"	e	enum:__anon16	file:
LIFESAVED	include/prop.h	52;"	d
LIGHT_AREA	include/artifact.h	67;"	d
LIGHT_HEADED	include/hack.h	226;"	d
LIGHT_SRC_SPELL	include/config.h	193;"	d
LIGHT_STATE	build-linux/include/lev_comp.h	/^    LIGHT_STATE = 301,$/;"	e	enum:yytokentype
LIGHT_STATE	build-linux/src/lev_yacc.c	/^    LIGHT_STATE = 301,$/;"	e	enum:yytokentype	file:
LINUX	include/unixconf.h	41;"	d
LIQUID	include/objclass.h	45;"	d
LOCKPREFIX	include/decl.h	436;"	d
LOOK_ONCE	src/pager.c	464;"	d	file:
LOOK_QUICK	src/pager.c	463;"	d	file:
LOOK_TRADITIONAL	src/pager.c	462;"	d	file:
LOOK_VERBOSE	src/pager.c	465;"	d	file:
LOW_PM	include/permonst.h	74;"	d
LR_BRANCH	include/dungeon.h	41;"	d
LR_DOWNSTAIR	include/dungeon.h	38;"	d
LR_DOWNTELE	include/dungeon.h	44;"	d
LR_PORTAL	include/dungeon.h	40;"	d
LR_TELE	include/dungeon.h	42;"	d
LR_UPSTAIR	include/dungeon.h	39;"	d
LR_UPTELE	include/dungeon.h	43;"	d
LSF_FLOATING	src/light.c	45;"	d	file:
LSF_NEEDS_FIXUP	src/light.c	44;"	d	file:
LSF_SHOW	src/light.c	43;"	d	file:
LS_MONSTER	include/vision.h	22;"	d
LS_OBJECT	include/vision.h	21;"	d
LS_TEMP	include/vision.h	28;"	d
LUCKADD	include/you.h	329;"	d
LUCKMAX	include/you.h	330;"	d
LUCKMIN	include/you.h	331;"	d
LUNG	include/hack.h	232;"	d
LVL	src/monst.c	52;"	d	file:
Lamp	src/u_init.c	/^static struct trobj Lamp[] = {$/;"	v	typeref:struct:trobj	file:
Leash	src/u_init.c	/^static struct trobj Leash[] = {$/;"	v	typeref:struct:trobj	file:
Lev_at_will	include/youprop.h	230;"	d
Levitation	include/youprop.h	227;"	d
Lifesaved	include/youprop.h	334;"	d
Luck	include/you.h	328;"	d
M	include/ntconf.h	95;"	d
M	src/cmd.c	2246;"	d	file:
M	win/curses/cursmisc.c	24;"	d	file:
M1_ACID	include/monflag.h	122;"	d
M1_AMORPHOUS	include/monflag.h	97;"	d
M1_AMPHIBIOUS	include/monflag.h	104;"	d
M1_ANIMAL	include/monflag.h	113;"	d
M1_BREATHLESS	include/monflag.h	105;"	d
M1_CARNIVORE	include/monflag.h	124;"	d
M1_CLING	include/monflag.h	99;"	d
M1_CONCEAL	include/monflag.h	102;"	d
M1_FLY	include/monflag.h	95;"	d
M1_HERBIVORE	include/monflag.h	125;"	d
M1_HIDE	include/monflag.h	103;"	d
M1_HUMANOID	include/monflag.h	112;"	d
M1_MARSUPIAL	src/monst.c	1864;"	d	file:
M1_METALLIVORE	include/monflag.h	127;"	d
M1_MINDLESS	include/monflag.h	111;"	d
M1_NEEDPICK	include/monflag.h	101;"	d
M1_NOEYES	include/monflag.h	107;"	d
M1_NOHANDS	include/monflag.h	108;"	d
M1_NOHEAD	include/monflag.h	110;"	d
M1_NOLIMBS	include/monflag.h	109;"	d
M1_NOTAKE	include/monflag.h	106;"	d
M1_OMNIVORE	include/monflag.h	126;"	d
M1_OVIPAROUS	include/monflag.h	117;"	d
M1_POIS	include/monflag.h	123;"	d
M1_REGEN	include/monflag.h	118;"	d
M1_SEE_INVIS	include/monflag.h	119;"	d
M1_SLITHY	include/monflag.h	114;"	d
M1_SWIM	include/monflag.h	96;"	d
M1_THICK_HIDE	include/monflag.h	116;"	d
M1_TPORT	include/monflag.h	120;"	d
M1_TPORT_CNTRL	include/monflag.h	121;"	d
M1_TUNNEL	include/monflag.h	100;"	d
M1_UNSOLID	include/monflag.h	115;"	d
M1_WALLWALK	include/monflag.h	98;"	d
M2_COLLECT	include/monflag.h	159;"	d
M2_DEMON	include/monflag.h	144;"	d
M2_DOMESTIC	include/monflag.h	151;"	d
M2_DWARF	include/monflag.h	134;"	d
M2_ELF	include/monflag.h	133;"	d
M2_FEMALE	include/monflag.h	146;"	d
M2_GIANT	include/monflag.h	143;"	d
M2_GNOME	include/monflag.h	135;"	d
M2_GREEDY	include/monflag.h	157;"	d
M2_HOBBIT	include/monflag.h	137;"	d
M2_HOSTILE	include/monflag.h	149;"	d
M2_HUMAN	include/monflag.h	132;"	d
M2_JEWELS	include/monflag.h	158;"	d
M2_LORD	include/monflag.h	140;"	d
M2_MAGIC	include/monflag.h	160;"	d
M2_MALE	include/monflag.h	145;"	d
M2_MERC	include/monflag.h	131;"	d
M2_MINION	include/monflag.h	142;"	d
M2_NASTY	include/monflag.h	154;"	d
M2_NEUTER	include/monflag.h	147;"	d
M2_NOPOLY	include/monflag.h	129;"	d
M2_ORC	include/monflag.h	136;"	d
M2_PEACEFUL	include/monflag.h	150;"	d
M2_PNAME	include/monflag.h	148;"	d
M2_PRINCE	include/monflag.h	141;"	d
M2_ROCKTHROW	include/monflag.h	156;"	d
M2_STALK	include/monflag.h	153;"	d
M2_STRONG	include/monflag.h	155;"	d
M2_UNDEAD	include/monflag.h	130;"	d
M2_VAMPIRE	include/monflag.h	139;"	d
M2_WANDER	include/monflag.h	152;"	d
M2_WERE	include/monflag.h	138;"	d
M3_CLOSE	include/monflag.h	169;"	d
M3_COVETOUS	include/monflag.h	171;"	d
M3_INFRAVISIBLE	include/monflag.h	176;"	d
M3_INFRAVISION	include/monflag.h	175;"	d
M3_NOTAME	include/monflag.h	180;"	d
M3_TRAITOR	include/monflag.h	179;"	d
M3_WAITFORU	include/monflag.h	168;"	d
M3_WAITMASK	include/monflag.h	172;"	d
M3_WANTSALL	include/monflag.h	167;"	d
M3_WANTSAMUL	include/monflag.h	162;"	d
M3_WANTSARTI	include/monflag.h	166;"	d
M3_WANTSBELL	include/monflag.h	163;"	d
M3_WANTSBOOK	include/monflag.h	164;"	d
M3_WANTSCAND	include/monflag.h	165;"	d
MAC	util/dgn_main.c	17;"	d	file:
MAGICAL_BREATHING	include/prop.h	58;"	d
MAGIC_COOKIE	src/zap.c	12;"	d	file:
MAGIC_PORTAL	include/trap.h	69;"	d
MAGIC_TRAP	include/trap.h	72;"	d
MAIL	include/nhlan.h	18;"	d
MAILCKFREQ	include/nhlan.h	20;"	d
MAILCKFREQ	include/nhlan.h	30;"	d
MAILCKFREQ	include/unixconf.h	172;"	d
MAILPATH	src/mail.c	68;"	d	file:
MAILPATH	src/mail.c	71;"	d	file:
MAILPATH	src/mail.c	74;"	d	file:
MAILPATH	src/mail.c	77;"	d	file:
MAILPATH	src/mail.c	80;"	d	file:
MAILTHREADFREQ	include/nhlan.h	31;"	d
MAIL_H	include/mail.h	7;"	d
MANFOOD	include/edog.h	13;"	d
MAPC	build-linux/src/lev_lex.c	979;"	d	file:
MAPIDEBUGFILENAME	sys/winnt/mapimail.c	26;"	d	file:
MAPIMessage	sys/winnt/mapimail.c	/^lpMapiMessage MAPIMessage;              \/* Ptr to message from prov  *\/$/;"	v
MAPIMessageID	sys/winnt/mapimail.c	/^char MAPIMessageID[MAPI_MSGID_SIZE];    \/* Msg ID from provider      *\/$/;"	v
MAPISession	sys/winnt/mapimail.c	/^LHANDLE MAPISession;                    \/* Handle for MAPI session   *\/$/;"	v
MAPI_FUNC_FAIL	sys/winnt/mapimail.c	17;"	d	file:
MAPI_LIB_FAIL	sys/winnt/mapimail.c	16;"	d	file:
MAPI_MSGID_SIZE	sys/winnt/mapimail.c	15;"	d	file:
MAPI_mail_abort	sys/winnt/mapimail.c	/^MAPI_mail_abort(reason)$/;"	f	file:
MAPI_mail_check	sys/winnt/mapimail.c	/^MAPI_mail_check(mID)$/;"	f	file:
MAPI_mail_context	sys/winnt/mapimail.c	/^MAPI_mail_context(mcount)$/;"	f	file:
MAPI_mail_fetch	sys/winnt/mapimail.c	/^MAPI_mail_fetch(mID)$/;"	f	file:
MAPI_mail_finish	sys/winnt/mapimail.c	/^MAPI_mail_finish()$/;"	f	file:
MAPI_mail_init	sys/winnt/mapimail.c	/^MAPI_mail_init(uname)$/;"	f	file:
MAPI_username	sys/winnt/mapimail.c	/^char MAPI_username[120];$/;"	v
MAP_ID	build-linux/include/lev_comp.h	/^    MAP_ID = 329$/;"	e	enum:yytokentype
MAP_ID	build-linux/src/lev_yacc.c	/^    MAP_ID = 329$/;"	e	enum:yytokentype	file:
MAP_MODE_ASCII10x18	include/winprocs.h	208;"	d
MAP_MODE_ASCII12x16	include/winprocs.h	207;"	d
MAP_MODE_ASCII16x12	include/winprocs.h	206;"	d
MAP_MODE_ASCII16x8	include/winprocs.h	203;"	d
MAP_MODE_ASCII4x6	include/winprocs.h	200;"	d
MAP_MODE_ASCII6x8	include/winprocs.h	201;"	d
MAP_MODE_ASCII7x12	include/winprocs.h	204;"	d
MAP_MODE_ASCII8x12	include/winprocs.h	205;"	d
MAP_MODE_ASCII8x8	include/winprocs.h	202;"	d
MAP_MODE_ASCII_FIT_TO_SCREEN	include/winprocs.h	209;"	d
MAP_MODE_TILES	include/winprocs.h	199;"	d
MAP_MODE_TILES_FIT_TO_SCREEN	include/winprocs.h	210;"	d
MAP_SCROLLBARS	include/wincurs.h	41;"	d
MAP_WIN	include/wincurs.h	36;"	d
MAP_X_LIM	include/sp_lev.h	16;"	d
MAP_Y_LIM	include/sp_lev.h	17;"	d
MARK	include/engrave.h	18;"	d
MARM	src/monst.c	18;"	d	file:
MATCH_WARN_OF_MON	include/hack.h	104;"	d
MAX	src/extralev.c	31;"	d	file:
MAXCO	include/global.h	181;"	d
MAXCO	include/global.h	183;"	d
MAXDCHARS	include/rm.h	227;"	d
MAXDUNGEON	include/global.h	201;"	d
MAXECHARS	include/rm.h	229;"	d
MAXEXPCHARS	include/rm.h	230;"	d
MAXLEASHED	src/apply.c	368;"	d	file:
MAXLEVEL	include/global.h	202;"	d
MAXLINFO	include/decl.h	149;"	d
MAXMCLASSES	include/monsym.h	77;"	d
MAXMONNO	include/global.h	208;"	d
MAXNOTILESETS	include/decl.h	404;"	d
MAXNROFROOMS	include/global.h	186;"	d
MAXOCLASSES	include/objclass.h	147;"	d
MAXPCHARS	include/rm.h	226;"	d
MAXRECT	src/rect.c	16;"	d	file:
MAXRTYPE	include/mkroom.h	93;"	d
MAXSPELL	include/onames.h	6;"	d
MAXSTAIRS	include/global.h	203;"	d
MAXTCHARS	include/rm.h	228;"	d
MAXTECH	include/tech.h	92;"	d
MAXULEV	include/global.h	206;"	d
MAXVALUE	src/pray.c	1237;"	d	file:
MAXWARNINGS	include/rm.h	231;"	d
MAXWIN	include/wintty.h	68;"	d
MAX_ALTKEYHANDLER	include/flag.h	265;"	d
MAX_BLITZ	src/tech.c	1822;"	d	file:
MAX_BODY_SIZE	include/nhlan.h	35;"	d
MAX_BODY_SIZE	sys/winnt/mapimail.c	6;"	d	file:
MAX_BODY_SIZE	sys/winnt/mapimail.c	7;"	d	file:
MAX_CAN_STUDY	src/spell.c	20;"	d	file:
MAX_CARR_CAP	include/hack.h	22;"	d
MAX_CHAIN	src/tech.c	1824;"	d	file:
MAX_DLB_FILES	util/dlb_main.c	47;"	d	file:
MAX_DLLNAME	sys/winnt/nttty.c	912;"	d	file:
MAX_EGG_HATCH_TIME	include/obj.h	260;"	d
MAX_ERODE	include/obj.h	75;"	d
MAX_ERRORS	util/dgn_main.c	33;"	d	file:
MAX_ERRORS	util/lev_main.c	60;"	d	file:
MAX_EXT_CMD	src/cmd.c	308;"	d	file:
MAX_GLYPH	include/display.h	282;"	d
MAX_GOOD	src/teleport.c	111;"	d	file:
MAX_KNOW	src/spell.c	19;"	d	file:
MAX_LAN_USERNAME	include/ntconf.h	128;"	d
MAX_LIBS	src/dlb.c	53;"	d	file:
MAX_MENU_MAPPED_CMDS	src/options.c	462;"	d	file:
MAX_NUM_WORMS	include/monst.h	118;"	d
MAX_OF_TYPE	build-linux/src/lev_yacc.c	104;"	d	file:
MAX_OIL_IN_FLASK	include/obj.h	324;"	d
MAX_OVERRIDES	sys/winnt/nttty.c	140;"	d	file:
MAX_QT	include/qtext.h	66;"	d
MAX_QUEST_TRIES	include/quest.h	36;"	d
MAX_RADIUS	include/vision.h	58;"	d
MAX_REGISTERS	build-linux/src/lev_yacc.c	98;"	d	file:
MAX_REGISTERS	util/lev_main.c	53;"	d	file:
MAX_SPELL_STUDY	src/spell.c	23;"	d	file:
MAX_STUDY_TIME	src/spell.c	22;"	d	file:
MAX_SUBROOMS	include/global.h	187;"	d
MAX_TYPE	include/rm.h	71;"	d
MAX_TYPES	sys/share/random.c	121;"	d	file:
MAY_DESTROY	include/hack.h	196;"	d
MAY_FRACTURE	include/hack.h	197;"	d
MAY_HIT	include/hack.h	195;"	d
MAY_HITMON	include/hack.h	193;"	d
MAY_HITYOU	include/hack.h	194;"	d
MAZELIKE	include/dgn_file.h	60;"	d
MAZEWALK_ID	build-linux/include/lev_comp.h	/^    MAZEWALK_ID = 274,$/;"	e	enum:yytokentype
MAZEWALK_ID	build-linux/src/lev_yacc.c	/^    MAZEWALK_ID = 274,$/;"	e	enum:yytokentype	file:
MAZE_ID	build-linux/include/lev_comp.h	/^    MAZE_ID = 263,$/;"	e	enum:yytokentype
MAZE_ID	build-linux/src/lev_yacc.c	/^    MAZE_ID = 263,$/;"	e	enum:yytokentype	file:
MB_INDEX_CANCEL	src/artifact.c	801;"	d	file:
MB_INDEX_PROBE	src/artifact.c	798;"	d	file:
MB_INDEX_SCARE	src/artifact.c	800;"	d	file:
MB_INDEX_STUN	src/artifact.c	799;"	d	file:
MB_MAX_DIEROLL	src/artifact.c	793;"	d	file:
MCURR	include/attrib.h	26;"	d
MD	win/tty/termcap.c	/^static char *MD;$/;"	v	file:
ME	win/tty/termcap.c	/^static char *ME;$/;"	v	file:
MENUTYPELEN	include/hack.h	237;"	d
MENU_COMBINATION	include/hack.h	239;"	d
MENU_FIRST_PAGE	include/wintype.h	58;"	d
MENU_FULL	include/hack.h	241;"	d
MENU_INVERT_ALL	include/wintype.h	64;"	d
MENU_INVERT_PAGE	include/wintype.h	67;"	d
MENU_LAST_PAGE	include/wintype.h	59;"	d
MENU_NEXT_PAGE	include/wintype.h	60;"	d
MENU_PARTIAL	include/hack.h	240;"	d
MENU_PREVIOUS_PAGE	include/wintype.h	61;"	d
MENU_SEARCH	include/wintype.h	68;"	d
MENU_SELECTED	include/hack.h	243;"	d
MENU_SELECT_ALL	include/wintype.h	62;"	d
MENU_SELECT_PAGE	include/wintype.h	65;"	d
MENU_TRADITIONAL	include/hack.h	238;"	d
MENU_UNSELECTED	include/hack.h	244;"	d
MENU_UNSELECT_ALL	include/wintype.h	63;"	d
MENU_UNSELECT_PAGE	include/wintype.h	66;"	d
MESG_HISTORY_MAX	include/wincurs.h	39;"	d
MESSAGE_ID	build-linux/include/lev_comp.h	/^    MESSAGE_ID = 262,$/;"	e	enum:yytokentype
MESSAGE_ID	build-linux/src/lev_yacc.c	/^    MESSAGE_ID = 262,$/;"	e	enum:yytokentype	file:
MESSAGE_WIN	include/wincurs.h	34;"	d
METAL	include/objclass.h	56;"	d
MFAST	include/monst.h	184;"	d
MFNDPOS_H	include/mfndpos.h	6;"	d
MGC_AGGRAVATION	src/mcastu.c	16;"	d	file:
MGC_CALL_UNDEAD	src/mcastu.c	21;"	d	file:
MGC_CLONE_WIZ	src/mcastu.c	18;"	d	file:
MGC_CREATE_POOL	src/mcastu.c	20;"	d	file:
MGC_CURE_SELF	src/mcastu.c	9;"	d	file:
MGC_CURSE_ITEMS	src/mcastu.c	15;"	d	file:
MGC_DEATH_TOUCH	src/mcastu.c	19;"	d	file:
MGC_DESTRY_ARMR	src/mcastu.c	14;"	d	file:
MGC_DISAPPEAR	src/mcastu.c	12;"	d	file:
MGC_HASTE_SELF	src/mcastu.c	10;"	d	file:
MGC_PSI_BOLT	src/mcastu.c	8;"	d	file:
MGC_STUN_YOU	src/mcastu.c	11;"	d	file:
MGC_SUMMON_MONS	src/mcastu.c	17;"	d	file:
MGC_WEAKEN_YOU	src/mcastu.c	13;"	d	file:
MG_CORPSE	include/hack.h	49;"	d
MG_DETECT	include/hack.h	51;"	d
MG_INVIS	include/hack.h	50;"	d
MG_OBJPILE	include/hack.h	55;"	d
MG_PET	include/hack.h	52;"	d
MG_RIDDEN	include/hack.h	53;"	d
MG_STAIRS	include/hack.h	54;"	d
MHPMAX	include/global.h	209;"	d
MH_DWARF	include/monflag.h	196;"	d
MH_ELF	include/monflag.h	195;"	d
MH_GNOME	include/monflag.h	197;"	d
MH_HOBBIT	include/monflag.h	199;"	d
MH_HUMAN	include/monflag.h	194;"	d
MH_ORC	include/monflag.h	198;"	d
MH_VAMPIRE	include/monflag.h	201;"	d
MH_WERE	include/monflag.h	200;"	d
MIDBUTTON	include/ntconf.h	153;"	d
MIGOHIVE	include/mkroom.h	75;"	d
MIGR_APPROX_XY	include/dungeon.h	154;"	d
MIGR_EXACT_XY	include/dungeon.h	155;"	d
MIGR_LADDER_DOWN	include/dungeon.h	159;"	d
MIGR_LADDER_UP	include/dungeon.h	158;"	d
MIGR_NEAR_PLAYER	include/dungeon.h	162;"	d
MIGR_NOWHERE	include/dungeon.h	152;"	d
MIGR_PORTAL	include/dungeon.h	161;"	d
MIGR_RANDOM	include/dungeon.h	153;"	d
MIGR_SSTAIRS	include/dungeon.h	160;"	d
MIGR_STAIRS_DOWN	include/dungeon.h	157;"	d
MIGR_STAIRS_UP	include/dungeon.h	156;"	d
MIN	src/extralev.c	34;"	d	file:
MINERAL	include/objclass.h	65;"	d
MINV_ALL	include/monst.h	34;"	d
MINV_NOLET	include/monst.h	33;"	d
MIN_CHAIN	src/tech.c	1823;"	d	file:
MIN_QUEST_ALIGN	include/quest.h	37;"	d
MIN_QUEST_LEVEL	include/quest.h	39;"	d
MISCMCLASSES	include/monsym.h	78;"	d
MISC_CMD_COUNT	include/decl.h	240;"	d
MITHRIL	include/objclass.h	61;"	d
MKC_ULIMIT	include/monflag.h	226;"	d
MKROOM_H	include/mkroom.h	6;"	d
MMAX	include/attrib.h	28;"	d
MM_ADJACENTOK	include/hack.h	131;"	d
MM_AGR_DIED	include/attk.h	152;"	d
MM_AGR_DIED	include/monattk.h	102;"	d
MM_ANGRY	include/hack.h	127;"	d
MM_DEF_DIED	include/attk.h	151;"	d
MM_DEF_DIED	include/monattk.h	101;"	d
MM_EDOG	include/hack.h	125;"	d
MM_EMIN	include/hack.h	126;"	d
MM_HIT	include/attk.h	150;"	d
MM_HIT	include/monattk.h	100;"	d
MM_IGNOREWATER	include/hack.h	130;"	d
MM_MISS	include/attk.h	149;"	d
MM_MISS	include/monattk.h	99;"	d
MM_NOCOUNTBIRTH	include/hack.h	129;"	d
MM_NONAME	include/hack.h	128;"	d
MM_NOWAIT	include/hack.h	124;"	d
MOAT	include/rm.h	50;"	d
MOD_ENCUMBER	include/hack.h	28;"	d
MOLDY_CHANCE	src/mkobj.c	723;"	d	file:
MOLDY_CORPSE	include/timeout.h	27;"	d
MOLD_REVIVE_CHANCE	src/mkobj.c	722;"	d	file:
MOLTEN	src/sp_lev.c	160;"	d	file:
MON	src/monst.c	49;"	d	file:
MON	src/monst.c	64;"	d	file:
MONATTK_H	include/monattk.h	6;"	d
MONDATA_H	include/mondata.h	6;"	d
MONFLAG_H	include/monflag.h	6;"	d
MONSTER_ID	build-linux/include/lev_comp.h	/^    MONSTER_ID = 270,$/;"	e	enum:yytokentype
MONSTER_ID	build-linux/src/lev_yacc.c	/^    MONSTER_ID = 270,$/;"	e	enum:yytokentype	file:
MONST_H	include/monst.h	6;"	d
MONST_INC	include/region.h	57;"	d
MONSYM_H	include/monsym.h	6;"	d
MONTE_COST	src/gypsy.c	412;"	d	file:
MONTE_MAX	src/gypsy.c	413;"	d	file:
MON_ALERTNESS	build-linux/include/lev_comp.h	/^    MON_ALERTNESS = 321,$/;"	e	enum:yytokentype
MON_ALERTNESS	build-linux/src/lev_yacc.c	/^    MON_ALERTNESS = 321,$/;"	e	enum:yytokentype	file:
MON_APPEARANCE	build-linux/include/lev_comp.h	/^    MON_APPEARANCE = 322,$/;"	e	enum:yytokentype
MON_APPEARANCE	build-linux/src/lev_yacc.c	/^    MON_APPEARANCE = 322,$/;"	e	enum:yytokentype	file:
MON_AT	include/rm.h	529;"	d
MON_ATTITUDE	build-linux/include/lev_comp.h	/^    MON_ATTITUDE = 320,$/;"	e	enum:yytokentype
MON_ATTITUDE	build-linux/src/lev_yacc.c	/^    MON_ATTITUDE = 320,$/;"	e	enum:yytokentype	file:
MON_BURIED_AT	include/rm.h	531;"	d
MON_EXPLODE	include/objclass.h	156;"	d
MON_NOWEP	include/monst.h	189;"	d
MON_WEP	include/monst.h	188;"	d
MOREACC	src/do_wear.c	1190;"	d	file:
MOREARM	src/do_wear.c	1134;"	d	file:
MORECOLOR	include/wincurs.h	31;"	d
MORGUE	include/mkroom.h	61;"	d
MOUSEMASK	include/ntconf.h	154;"	d
MOUSE_MOVED	sys/winnt/nttty.c	29;"	d	file:
MOUSE_WHEELED	sys/winnt/nttty.c	31;"	d	file:
MPWTOOL	util/dgn_main.c	21;"	d	file:
MPWTOOL	util/lev_main.c	24;"	d	file:
MR	win/tty/termcap.c	/^static char *MR;$/;"	v	file:
MR2_DISPLACED	include/monflag.h	73;"	d
MR2_FUMBLING	include/monflag.h	75;"	d
MR2_LEVITATE	include/monflag.h	70;"	d
MR2_MAGBREATH	include/monflag.h	72;"	d
MR2_SEE_INVIS	include/monflag.h	69;"	d
MR2_STRENGTH	include/monflag.h	74;"	d
MR2_WATERWALK	include/monflag.h	71;"	d
MR_ACID	include/monflag.h	62;"	d
MR_COLD	include/monflag.h	57;"	d
MR_DEATH	include/monflag.h	78;"	d
MR_DISINT	include/monflag.h	59;"	d
MR_DRAIN	include/monflag.h	79;"	d
MR_ELEC	include/monflag.h	60;"	d
MR_FIRE	include/monflag.h	56;"	d
MR_HITASFOUR	include/monflag.h	90;"	d
MR_HITASONE	include/monflag.h	87;"	d
MR_HITASTHREE	include/monflag.h	89;"	d
MR_HITASTWO	include/monflag.h	88;"	d
MR_PLUSFOUR	include/monflag.h	84;"	d
MR_PLUSONE	include/monflag.h	81;"	d
MR_PLUSTHREE	include/monflag.h	83;"	d
MR_PLUSTWO	include/monflag.h	82;"	d
MR_POISON	include/monflag.h	61;"	d
MR_SLEEP	include/monflag.h	58;"	d
MR_STONE	include/monflag.h	63;"	d
MR_TYPEMASK	include/monflag.h	92;"	d
MSGTYP_NOREP	include/decl.h	503;"	d
MSGTYP_NORMAL	include/decl.h	502;"	d
MSGTYP_NOSHOW	include/decl.h	504;"	d
MSGTYP_STOP	include/decl.h	505;"	d
MSG_CALL	include/mail.h	11;"	d
MSG_MAIL	include/mail.h	10;"	d
MSG_OTHER	include/mail.h	9;"	d
MSLOW	include/monst.h	183;"	d
MS_ANIMAL	include/monflag.h	22;"	d
MS_ARREST	include/monflag.h	30;"	d
MS_BARK	include/monflag.h	9;"	d
MS_BOAST	include/monflag.h	48;"	d
MS_BONES	include/monflag.h	24;"	d
MS_BRIBE	include/monflag.h	37;"	d
MS_BURBLE	include/monflag.h	21;"	d
MS_BUZZ	include/monflag.h	16;"	d
MS_CHICKEN	include/monflag.h	51;"	d
MS_COW	include/monflag.h	52;"	d
MS_CUSS	include/monflag.h	38;"	d
MS_DJINNI	include/monflag.h	33;"	d
MS_GROWL	include/monflag.h	12;"	d
MS_GRUNT	include/monflag.h	17;"	d
MS_GUARD	include/monflag.h	32;"	d
MS_GUARDIAN	include/monflag.h	42;"	d
MS_GURGLE	include/monflag.h	20;"	d
MS_GYPSY	include/monflag.h	49;"	d
MS_HISS	include/monflag.h	15;"	d
MS_HUMANOID	include/monflag.h	29;"	d
MS_IMITATE	include/monflag.h	27;"	d
MS_LAUGH	include/monflag.h	25;"	d
MS_LEADER	include/monflag.h	40;"	d
MS_MEW	include/monflag.h	10;"	d
MS_MUMBLE	include/monflag.h	26;"	d
MS_NEIGH	include/monflag.h	18;"	d
MS_NEMESIS	include/monflag.h	41;"	d
MS_NURSE	include/monflag.h	34;"	d
MS_ORACLE	include/monflag.h	44;"	d
MS_ORC	include/monflag.h	28;"	d
MS_PARROT	include/monflag.h	53;"	d
MS_PRIEST	include/monflag.h	45;"	d
MS_RIDER	include/monflag.h	39;"	d
MS_ROAR	include/monflag.h	11;"	d
MS_SEDUCE	include/monflag.h	35;"	d
MS_SELL	include/monflag.h	43;"	d
MS_SHEEP	include/monflag.h	50;"	d
MS_SHRIEK	include/monflag.h	23;"	d
MS_SILENT	include/monflag.h	8;"	d
MS_SOLDIER	include/monflag.h	31;"	d
MS_SPELL	include/monflag.h	46;"	d
MS_SQAWK	include/monflag.h	14;"	d
MS_SQEEK	include/monflag.h	13;"	d
MS_VAMPIRE	include/monflag.h	36;"	d
MS_WAIL	include/monflag.h	19;"	d
MS_WERE	include/monflag.h	47;"	d
MTSZ	include/monst.h	51;"	d
MUSE_BUGLE	src/muse.c	218;"	d	file:
MUSE_BULLWHIP	src/muse.c	1700;"	d	file:
MUSE_DN_LADDER	src/muse.c	215;"	d	file:
MUSE_DOWNSTAIRS	src/muse.c	211;"	d	file:
MUSE_FIRE_HORN	src/muse.c	1024;"	d	file:
MUSE_FROST_HORN	src/muse.c	1023;"	d	file:
MUSE_LIZARD_CORPSE	src/muse.c	221;"	d	file:
MUSE_POLY_TRAP	src/muse.c	1696;"	d	file:
MUSE_POT_ACID	src/muse.c	1022;"	d	file:
MUSE_POT_AMNESIA	src/muse.c	1028;"	d	file:
MUSE_POT_BLINDNESS	src/muse.c	1019;"	d	file:
MUSE_POT_CONFUSION	src/muse.c	1020;"	d	file:
MUSE_POT_EXTRA_HEALING	src/muse.c	206;"	d	file:
MUSE_POT_FULL_HEALING	src/muse.c	220;"	d	file:
MUSE_POT_GAIN_LEVEL	src/muse.c	1693;"	d	file:
MUSE_POT_HEALING	src/muse.c	205;"	d	file:
MUSE_POT_INVISIBILITY	src/muse.c	1695;"	d	file:
MUSE_POT_PARALYSIS	src/muse.c	1018;"	d	file:
MUSE_POT_POLYMORPH	src/muse.c	1701;"	d	file:
MUSE_POT_SLEEPING	src/muse.c	1021;"	d	file:
MUSE_POT_SPEED	src/muse.c	1698;"	d	file:
MUSE_POT_VAMPIRE_BLOOD	src/muse.c	226;"	d	file:
MUSE_SCR_CREATE_MONSTER	src/muse.c	213;"	d	file:
MUSE_SCR_EARTH	src/muse.c	1027;"	d	file:
MUSE_SCR_FIRE	src/muse.c	1017;"	d	file:
MUSE_SCR_TELEPORTATION	src/muse.c	203;"	d	file:
MUSE_SSTAIRS	src/muse.c	216;"	d	file:
MUSE_TELEPORT_TRAP	src/muse.c	209;"	d	file:
MUSE_TRAPDOOR	src/muse.c	208;"	d	file:
MUSE_UNICORN_HORN	src/muse.c	219;"	d	file:
MUSE_UPSTAIRS	src/muse.c	210;"	d	file:
MUSE_UP_LADDER	src/muse.c	214;"	d	file:
MUSE_WAN_CANCELLATION	src/muse.c	1029;"	d	file:
MUSE_WAN_COLD	src/muse.c	1013;"	d	file:
MUSE_WAN_CREATE_HORDE	src/muse.c	225;"	d	file:
MUSE_WAN_CREATE_MONSTER	src/muse.c	212;"	d	file:
MUSE_WAN_DEATH	src/muse.c	1009;"	d	file:
MUSE_WAN_DIGGING	src/muse.c	207;"	d	file:
MUSE_WAN_DRAINING	src/muse.c	1025;"	d	file:
MUSE_WAN_EXTRA_HEALING	src/muse.c	224;"	d	file:
MUSE_WAN_FIRE	src/muse.c	1012;"	d	file:
MUSE_WAN_FIREBALL	src/muse.c	1011;"	d	file:
MUSE_WAN_HEALING	src/muse.c	223;"	d	file:
MUSE_WAN_LIGHTNING	src/muse.c	1014;"	d	file:
MUSE_WAN_MAGIC_MISSILE	src/muse.c	1015;"	d	file:
MUSE_WAN_MAKE_INVISIBLE	src/muse.c	1694;"	d	file:
MUSE_WAN_POLYMORPH	src/muse.c	1697;"	d	file:
MUSE_WAN_SLEEP	src/muse.c	1010;"	d	file:
MUSE_WAN_SPEED_MONSTER	src/muse.c	1699;"	d	file:
MUSE_WAN_STRIKING	src/muse.c	1016;"	d	file:
MUSE_WAN_TELEPORTATION	src/muse.c	217;"	d	file:
MUSE_WAN_TELEPORTATION_SELF	src/muse.c	204;"	d	file:
MV_KNOWS_EGG	include/monflag.h	222;"	d
MZ_GIGANTIC	include/monflag.h	189;"	d
MZ_HUGE	include/monflag.h	188;"	d
MZ_HUMAN	include/monflag.h	186;"	d
MZ_LARGE	include/monflag.h	187;"	d
MZ_MEDIUM	include/monflag.h	185;"	d
MZ_SMALL	include/monflag.h	184;"	d
MZ_TINY	include/monflag.h	183;"	d
M_AP_FURNITURE	include/monst.h	59;"	d
M_AP_MONSTER	include/monst.h	61;"	d
M_AP_NOTHING	include/monst.h	57;"	d
M_AP_OBJECT	include/monst.h	60;"	d
M_BOOK	src/u_init.c	117;"	d	file:
M_REGISTER	build-linux/include/lev_comp.h	/^    M_REGISTER = 307,$/;"	e	enum:yytokentype
M_REGISTER	build-linux/src/lev_yacc.c	/^    M_REGISTER = 307,$/;"	e	enum:yytokentype	file:
M_Wants	src/wizard.c	120;"	d	file:
Magicmarker	src/u_init.c	/^static struct trobj Magicmarker[] = {$/;"	v	typeref:struct:trobj	file:
Map	src/sp_lev.c	/^static char Map[COLNO][ROWNO];$/;"	v	file:
Map_point	util/lev_main.c	538;"	d	file:
Mb_hit	src/artifact.c	/^static boolean Mb_hit($/;"	f	file:
Moloch	src/pray.c	/^static const char	*Moloch = "Moloch";$/;"	v	file:
Money	src/u_init.c	/^static struct trobj Money[] = {$/;"	v	typeref:struct:trobj	file:
Monk	src/u_init.c	/^static struct trobj Monk[] = {$/;"	v	typeref:struct:trobj	file:
Monnam	src/do_name.c	/^char *Monnam(struct monst *mtmp) {$/;"	f
NAME	include/monst.h	186;"	d
NAME_ID	build-linux/include/lev_comp.h	/^    NAME_ID = 317,$/;"	e	enum:yytokentype
NAME_ID	build-linux/src/lev_yacc.c	/^    NAME_ID = 317,$/;"	e	enum:yytokentype	file:
NAME_LINE	src/rip.c	63;"	d	file:
NAMSZ	src/topten.c	13;"	d	file:
NATTK	include/permonst.h	28;"	d
NCURSES_MOUSE_VERSION	include/wincurs.h	45;"	d
NCURSES_WIDECHAR	win/curses/curswins.c	3;"	d	file:
NECK	include/hack.h	227;"	d
NEED_AXE	include/monst.h	23;"	d
NEED_HTH_WEAPON	include/monst.h	21;"	d
NEED_PICK_AXE	include/monst.h	22;"	d
NEED_PICK_OR_AXE	include/monst.h	24;"	d
NEED_RANGED_WEAPON	include/monst.h	20;"	d
NEED_UPDATE	src/shk.c	3136;"	d	file:
NEED_UPDATE	src/shk.c	3195;"	d	file:
NEED_WEAPON	include/monst.h	19;"	d
NETHACK_ENV_OPTIONS	include/filename.h	23;"	d
NETWORK	include/unixconf.h	38;"	d
NEWAUTOCOMP	win/tty/getline.c	10;"	d	file:
NEWS	include/config.h	93;"	d
NEW_MOON	include/flag.h	88;"	d
NHKBHIT	sys/winnt/nttty.c	/^typedef int (__stdcall * NHKBHIT)($/;"	t	file:
NHLAN_H	include/nhlan.h	6;"	d
NHWIN_MAX	include/wincurs.h	38;"	d
NHW_BASE	include/wintty.h	72;"	d
NHW_BASE	include/wintty.h	74;"	d
NHW_END	include/wincurs.h	21;"	d
NHW_MAP	include/wintype.h	38;"	d
NHW_MENU	include/wintype.h	39;"	d
NHW_MESSAGE	include/wintype.h	36;"	d
NHW_STATUS	include/wintype.h	37;"	d
NHW_TEXT	include/wintype.h	40;"	d
NH_AMBER	include/decl.h	375;"	d
NH_BLACK	include/decl.h	374;"	d
NH_BLUE	include/decl.h	381;"	d
NH_CMDHELPFILE	include/global.h	24;"	d
NH_CONFIG_FILE	include/filename.h	12;"	d
NH_CONFIG_FILE	include/filename.h	15;"	d
NH_CONFIG_FILE	include/filename.h	17;"	d
NH_CONFIG_FILE	include/filename.h	9;"	d
NH_DATAFILE	include/global.h	23;"	d
NH_DEBUGHELP	include/global.h	19;"	d
NH_GOLDEN	include/decl.h	376;"	d
NH_GREEN	include/decl.h	379;"	d
NH_GUIDEBOOK	include/global.h	28;"	d
NH_HELP	include/global.h	17;"	d
NH_HISTORY	include/global.h	25;"	d
NH_LICENSE	include/global.h	26;"	d
NH_LIGHT_BLUE	include/decl.h	377;"	d
NH_OPTIONFILE	include/global.h	27;"	d
NH_ORACLEFILE	include/global.h	22;"	d
NH_PURPLE	include/decl.h	382;"	d
NH_RECORD	include/global.h	16;"	d
NH_RED	include/decl.h	378;"	d
NH_RUMORFILE_FAL	include/global.h	21;"	d
NH_RUMORFILE_TRU	include/global.h	20;"	d
NH_SHELP	include/global.h	18;"	d
NH_SILVER	include/decl.h	380;"	d
NH_WHITE	include/decl.h	383;"	d
NH_abort	src/end.c	65;"	d	file:
NH_abort	src/end.c	68;"	d	file:
NH_abort	src/end.c	70;"	d	file:
NINETYNINE_COST	src/gypsy.c	486;"	d	file:
NINETYNINE_GOAL	src/gypsy.c	488;"	d	file:
NINETYNINE_HAND	src/gypsy.c	487;"	d	file:
NOBJ_STATES	include/obj.h	60;"	d
NOBOUND	src/shk.c	67;"	d	file:
NOCWD_ASSUMPTIONS	include/ntconf.h	32;"	d
NODIR	include/objclass.h	35;"	d
NOGARLIC	include/mfndpos.h	23;"	d
NOINVSYM	src/invent.c	7;"	d	file:
NOMAP_ID	build-linux/include/lev_comp.h	/^    NOMAP_ID = 267,$/;"	e	enum:yytokentype
NOMAP_ID	build-linux/src/lev_yacc.c	/^    NOMAP_ID = 267,$/;"	e	enum:yytokentype	file:
NOMMAP	include/sp_lev.h	22;"	d
NONE	build-linux/include/lev_comp.h	/^    NONE = 298,$/;"	e	enum:yytokentype
NONE	build-linux/src/lev_yacc.c	/^    NONE = 298,$/;"	e	enum:yytokentype	file:
NONE	include/wincurs.h	24;"	d
NON_DIGGABLE_ID	build-linux/include/lev_comp.h	/^    NON_DIGGABLE_ID = 284,$/;"	e	enum:yytokentype
NON_DIGGABLE_ID	build-linux/src/lev_yacc.c	/^    NON_DIGGABLE_ID = 284,$/;"	e	enum:yytokentype	file:
NON_PASSWALL_ID	build-linux/include/lev_comp.h	/^    NON_PASSWALL_ID = 285,$/;"	e	enum:yytokentype
NON_PASSWALL_ID	build-linux/src/lev_yacc.c	/^    NON_PASSWALL_ID = 285,$/;"	e	enum:yytokentype	file:
NON_PM	include/permonst.h	73;"	d
NORMAL_SPEED	include/permonst.h	69;"	d
NOSE	include/hack.h	233;"	d
NOTANGRY	include/eshk.h	48;"	d
NOTELEPORT	include/sp_lev.h	20;"	d
NOTELL	include/hack.h	18;"	d
NOTIFY_NETHACK_BUGS	src/end.c	303;"	d	file:
NOTONL	include/mfndpos.h	13;"	d
NOT_HUNGRY	src/attrib.c	366;"	d	file:
NOT_HUNGRY	src/eat.c	49;"	d	file:
NOT_HUNGRY	src/pray.c	129;"	d	file:
NOT_WEAPON	src/wield.c	468;"	d	file:
NOWEBMSG	include/hack.h	174;"	d
NO_ATTK	include/artilist.h	13;"	d
NO_ATTK	include/artilist.h	421;"	d
NO_ATTK	src/monst.c	23;"	d	file:
NO_CALLBACK	src/region.c	18;"	d	file:
NO_CARY	include/artilist.h	15;"	d
NO_COLOR	include/color.h	28;"	d
NO_COLOR	include/color.h	30;"	d
NO_DFNS	include/artilist.h	14;"	d
NO_DFNS	include/artilist.h	422;"	d
NO_DOWN	build-linux/include/dgn_comp.h	/^    NO_DOWN = 276,$/;"	e	enum:yytokentype
NO_DOWN	build-linux/src/dgn_yacc.c	/^    NO_DOWN = 276,$/;"	e	enum:yytokentype	file:
NO_GLYPH	include/display.h	284;"	d
NO_KILLER_PREFIX	include/decl.h	187;"	d
NO_MINVENT	include/hack.h	123;"	d
NO_MM_FLAGS	include/hack.h	122;"	d
NO_ROOM	include/mkroom.h	99;"	d
NO_SIGNAL	include/ntconf.h	78;"	d
NO_SPELL	include/hack.h	119;"	d
NO_TECH	include/tech.h	49;"	d
NO_TRAP	include/trap.h	52;"	d
NO_UP	build-linux/include/dgn_comp.h	/^    NO_UP = 275,$/;"	e	enum:yytokentype
NO_UP	build-linux/src/dgn_yacc.c	/^    NO_UP = 275,$/;"	e	enum:yytokentype	file:
NO_WEAPON_WANTED	include/monst.h	18;"	d
NR_OF_EOFS	src/cmd.c	16;"	d	file:
NSTYPES	src/mkroom.c	802;"	d	file:
NTCONF_H	include/ntconf.h	6;"	d
NULL	sys/share/uudecode.c	213;"	d	file:
NULL_SLOT	src/pager.c	/^	NULL_SLOT$/;"	e	enum:__anon16	file:
NUMOBUF	src/objnam.c	11;"	d	file:
NUM_BP	src/role.c	1359;"	d	file:
NUM_BP	src/role.c	1591;"	d	file:
NUM_DISCLOSURE_OPTIONS	include/flag.h	135;"	d
NUM_MENU_CMDS	src/options.c	443;"	d	file:
NUM_ROLES	include/hack.h	307;"	d
NUM_TIME_FUNCS	include/timeout.h	35;"	d
NUM_ZAP	include/display.h	268;"	d
N_BOOK	src/u_init.c	133;"	d	file:
N_ENGRAVE	include/engrave.h	21;"	d
N_P1_ITER	src/mkmap.c	392;"	d	file:
N_P2_ITER	src/mkmap.c	393;"	d	file:
N_P3_ITER	src/mkmap.c	394;"	d	file:
N_PER_BUCKET	src/restore.c	30;"	d	file:
Necromancer	src/u_init.c	/^static struct trobj Necromancer[] = {$/;"	v	typeref:struct:trobj	file:
New	build-linux/src/lev_yacc.c	106;"	d	file:
New	src/sp_lev.c	60;"	d	file:
NewTab	build-linux/src/lev_yacc.c	108;"	d	file:
NewTab	src/sp_lev.c	61;"	d	file:
NewTab	util/lev_main.c	56;"	d	file:
NhRect	include/rect.h	/^} NhRect;$/;"	t	typeref:struct:nhrect
NhRegion	include/region.h	/^} NhRegion;$/;"	t	typeref:struct:__anon29
Nibble_Death	src/hack.c	/^int Nibble_Death = 0;$/;"	v
Norep	src/pline.c	/^void Norep(const char *line, ...) {$/;"	f
Noreps	include/extern.h	1482;"	d
Not_firsttime	src/quest.c	12;"	d	file:
OATTACHED_MONST	include/obj.h	94;"	d
OATTACHED_M_ID	include/obj.h	95;"	d
OATTACHED_NOTHING	include/obj.h	93;"	d
OATTACHED_UNUSED3	include/obj.h	96;"	d
OBJCLASS_H	include/objclass.h	6;"	d
OBJECT	src/objects.c	/^	OBJECT(ACID_VENOM, "acid venom", "splash of venom",$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(AMULET_OF_YENDOR, "Amulet of Yendor",	\/* note: description == name *\/$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(BANDAGE, "bandage", NULL,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(BELL_OF_OPENING, "Bell of Opening", "silver bell",$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(BLINDING_VENOM, "blinding venom", "splash of venom",$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(BOULDER, "boulder",NULL, BITS(1,0,0,0,0,0,0,0,1,0,0,P_NONE,MINERAL), 0,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(CANDELABRUM_OF_INVOCATION, "Candelabrum of Invocation", "candelabrum",$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(FAKE_AMULET_OF_YENDOR, "cheap plastic imitation of the Amulet of Yendor",$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(HEAVY_IRON_BALL, "heavy iron ball", NULL, BITS(1,0,0,0,0,0,0,0,0,0,WHACK,P_NONE,IRON), 0,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(IRON_CHAIN, "iron chain", NULL, BITS(1,0,0,0,0,0,0,0,0,0,WHACK,P_NONE,IRON), 0,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(MEAT_RING, "meat ring", NULL,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(NUM_OBJECTS, NULL,NULL, BITS(0,0,0,0,0,0,0,0,0,0,0,P_NONE,0), 0,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(PHIAL, "phial", NULL,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(SPE_BOOK_OF_THE_DEAD, "Book of the Dead", "papyrus",$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(STATUE, "statue", NULL, BITS(1,0,0,1,0,0,0,0,0,0,0,P_NONE,MINERAL), 0,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(STRANGE_OBJECT, "strange object",NULL, BITS(1,0,0,0,0,0,0,0,0,0,0,0,0),$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	/^	OBJECT(TORCH, "torch", NULL,$/;"	e	enum:__anon12	file:
OBJECT	src/objects.c	34;"	d	file:
OBJECT	src/objects.c	6;"	d	file:
OBJECT_ID	build-linux/include/lev_comp.h	/^    OBJECT_ID = 268,$/;"	e	enum:yytokentype
OBJECT_ID	build-linux/src/lev_yacc.c	/^    OBJECT_ID = 268,$/;"	e	enum:yytokentype	file:
OBJFLAGS_ID	build-linux/include/lev_comp.h	/^    OBJFLAGS_ID = 325,$/;"	e	enum:yytokentype
OBJFLAGS_ID	build-linux/src/lev_yacc.c	/^    OBJFLAGS_ID = 325,$/;"	e	enum:yytokentype	file:
OBJFLAG_TYPE	build-linux/include/lev_comp.h	/^    OBJFLAG_TYPE = 324,$/;"	e	enum:yytokentype
OBJFLAG_TYPE	build-linux/src/lev_yacc.c	/^    OBJFLAG_TYPE = 324,$/;"	e	enum:yytokentype	file:
OBJF_BURIED	include/sp_lev.h	34;"	d
OBJF_LIT	include/sp_lev.h	33;"	d
OBJ_AT	include/rm.h	525;"	d
OBJ_BURIED	include/obj.h	58;"	d
OBJ_CONTAINED	include/obj.h	54;"	d
OBJ_DESCR	include/objclass.h	192;"	d
OBJ_DETECTION	include/artifact.h	71;"	d
OBJ_FLOOR	include/obj.h	53;"	d
OBJ_FREE	include/obj.h	52;"	d
OBJ_H	include/obj.h	6;"	d
OBJ_INVENT	include/obj.h	55;"	d
OBJ_MIGRATING	include/obj.h	57;"	d
OBJ_MINVENT	include/obj.h	56;"	d
OBJ_NAME	include/objclass.h	191;"	d
OBJ_ONBILL	include/obj.h	59;"	d
OFF	include/hack.h	20;"	d
OFF	include/wincurs.h	22;"	d
OMASK	util/lev_main.c	48;"	d	file:
OMASK	util/lev_main.c	50;"	d	file:
ON	include/hack.h	19;"	d
ON	include/wincurs.h	23;"	d
ONAME	include/obj.h	132;"	d
ONAMES_H	include/onames.h	2;"	d
ONTHRONE	src/read.c	1834;"	d	file:
ON_ICE	src/mkobj.c	1169;"	d	file:
ON_ICE	src/mkobj.c	1284;"	d	file:
OPEN	src/shk.c	3137;"	d	file:
OPEN	src/shk.c	3196;"	d	file:
OPENDOOR	include/mfndpos.h	14;"	d
OPENFAILURE	src/files.c	819;"	d	file:
OPTIONS_HEADING	src/options.c	2917;"	d	file:
OPTIONS_HEADING	src/options.c	2919;"	d	file:
OROOM	include/mkroom.h	56;"	d
OSPEED	sys/share/unixtty.c	113;"	d	file:
OSPEED	sys/share/unixtty.c	56;"	d	file:
OSPEED	sys/share/unixtty.c	61;"	d	file:
OSX	include/config1.h	14;"	d
OUTSIDE_LEVEL	include/tech.h	26;"	d
OVERLOADED	include/hack.h	31;"	d
O_BINARY	src/files.c	52;"	d	file:
O_BINARY	util/dlb_main.c	44;"	d	file:
O_BINARY	util/lev_main.c	44;"	d	file:
O_REGISTER	build-linux/include/lev_comp.h	/^    O_REGISTER = 306,$/;"	e	enum:yytokentype
O_REGISTER	build-linux/src/lev_yacc.c	/^    O_REGISTER = 306,$/;"	e	enum:yytokentype	file:
On_W_tower_level	src/dungeon.c	/^boolean On_W_tower_level(d_level *lev) {$/;"	f
On_stairs	src/dungeon.c	/^boolean On_stairs(xchar x, xchar y) {$/;"	f
Oselect	src/weapon.c	393;"	d	file:
P	src/objects.c	376;"	d	file:
P	src/objects.c	78;"	d	file:
PADKEYS	sys/winnt/nh340key.c	50;"	d	file:
PADKEYS	sys/winnt/nhdefkey.c	56;"	d	file:
PADKEYS	sys/winnt/nhraykey.c	208;"	d	file:
PANICKED	include/hack.h	79;"	d
PANICLOG	include/config.h	94;"	d
PAPER	include/objclass.h	49;"	d
PASSES_WALLS	include/prop.h	71;"	d
PATCHLEVEL	include/patchlevel.h	16;"	d
PATHLEN	include/ntconf.h	65;"	d
PATHLEN	include/ntconf.h	70;"	d
PATHLEN	include/ntconf.h	72;"	d
PATH_SEPARATOR	sys/share/pcmain.c	477;"	d	file:
PATH_SEPARATOR	sys/share/pcmain.c	479;"	d	file:
PATH_SEPARATOR	util/recover.c	290;"	d	file:
PATH_SEPARATOR	util/recover.c	292;"	d	file:
PAY_BROKE	src/shk.c	14;"	d	file:
PAY_BUY	src/shk.c	11;"	d	file:
PAY_CANT	src/shk.c	12;"	d	file:
PAY_SKIP	src/shk.c	13;"	d	file:
PAY_SOME	src/shk.c	10;"	d	file:
PC	sys/share/tclib.c	/^char  PC;$/;"	v
PC	win/tty/termcap.c	/^static char PC = '\\0';$/;"	v	file:
PC_LOCKING	include/ntconf.h	18;"	d
PERCENT	build-linux/include/lev_comp.h	/^    PERCENT = 261,$/;"	e	enum:yytokentype
PERCENT	build-linux/src/lev_yacc.c	/^    PERCENT = 261,$/;"	e	enum:yytokentype	file:
PERMONST_H	include/permonst.h	6;"	d
PERSMAX	src/topten.c	16;"	d	file:
PERS_IS_UID	src/topten.c	21;"	d	file:
PETSHOP	include/mkroom.h	87;"	d
PHYS	include/artilist.h	18;"	d
PHYS	include/artilist.h	424;"	d
PHYSICALLY_SEEN	src/display.c	322;"	d	file:
PICK_ANY	include/wintype.h	32;"	d
PICK_NONE	include/wintype.h	30;"	d
PICK_ONE	include/wintype.h	31;"	d
PICK_RANDOM	include/hack.h	170;"	d
PICK_RIGID	include/hack.h	171;"	d
PIERCE	include/objclass.h	39;"	d
PIOUS	src/pray.c	63;"	d	file:
PIT	include/trap.h	63;"	d
PLASTIC	include/objclass.h	62;"	d
PLATINUM	include/objclass.h	60;"	d
PLAYER	src/read.c	1833;"	d	file:
PL_CSIZ	include/global.h	196;"	d
PL_FSIZ	include/global.h	197;"	d
PL_NSIZ	include/global.h	195;"	d
PL_PSIZ	include/global.h	198;"	d
PM_H	include/pm.h	2;"	d
PM_PLAYERMON	include/pm.h	5;"	d
PN_ATTACK_SPELL	src/weapon.c	23;"	d	file:
PN_BARE_HANDED	src/weapon.c	30;"	d	file:
PN_BODY_SPELL	src/weapon.c	28;"	d	file:
PN_DIVINATION_SPELL	src/weapon.c	25;"	d	file:
PN_ENCHANTMENT_SPELL	src/weapon.c	26;"	d	file:
PN_FIREARMS	src/weapon.c	22;"	d	file:
PN_HAMMER	src/weapon.c	19;"	d	file:
PN_HEALING_SPELL	src/weapon.c	24;"	d	file:
PN_LIGHTSABER	src/weapon.c	34;"	d	file:
PN_MARTIAL_ARTS	src/weapon.c	31;"	d	file:
PN_MATTER_SPELL	src/weapon.c	29;"	d	file:
PN_PADDLE	src/weapon.c	21;"	d	file:
PN_POLEARMS	src/weapon.c	17;"	d	file:
PN_PROTECTION_SPELL	src/weapon.c	27;"	d	file:
PN_RIDING	src/weapon.c	32;"	d	file:
PN_SABER	src/weapon.c	18;"	d	file:
PN_TWO_WEAPONS	src/weapon.c	33;"	d	file:
PN_WHIP	src/weapon.c	20;"	d	file:
POINTSMIN	src/topten.c	17;"	d	file:
POISON	include/edog.h	15;"	d
POISONING	include/hack.h	70;"	d
POISON_RES	include/prop.h	14;"	d
POLE_LIM	src/mhitm.c	12;"	d	file:
POLE_LIM	src/mthrowu.c	11;"	d	file:
POLYMORPH	include/prop.h	25;"	d
POLYMORPH_CONTROL	include/prop.h	26;"	d
POLY_TRAP	include/trap.h	74;"	d
POOL	include/rm.h	49;"	d
POOL_ID	build-linux/include/lev_comp.h	/^    POOL_ID = 296,$/;"	e	enum:yytokentype
POOL_ID	build-linux/src/lev_yacc.c	/^    POOL_ID = 296,$/;"	e	enum:yytokentype	file:
PORTAL	build-linux/include/dgn_comp.h	/^    PORTAL = 277,$/;"	e	enum:yytokentype
PORTAL	build-linux/src/dgn_yacc.c	/^    PORTAL = 277,$/;"	e	enum:yytokentype	file:
PORTAL_ID	build-linux/include/lev_comp.h	/^    PORTAL_ID = 287,$/;"	e	enum:yytokentype
PORTAL_ID	build-linux/src/lev_yacc.c	/^    PORTAL_ID = 287,$/;"	e	enum:yytokentype	file:
PORT_DEBUG	include/ntconf.h	41;"	d
PORT_HELP	include/ntconf.h	38;"	d
PORT_HELP_ID	src/pager.c	/^	PORT_HELP_ID,$/;"	e	enum:__anon16	file:
PORT_ID	include/global.h	108;"	d
PORT_ID	include/global.h	111;"	d
PORT_ID	include/global.h	96;"	d
PORT_SUB_ID	include/global.h	113;"	d
POSIX_JOB_CONTROL	include/unixconf.h	205;"	d
POSIX_JOB_CONTROL	include/unixconf.h	225;"	d
POSIX_JOB_CONTROL	include/unixconf.h	57;"	d
POSIX_REGEX	include/unixconf.h	301;"	d
POSIX_TYPES	include/unixconf.h	202;"	d
POSIX_TYPES	include/unixconf.h	59;"	d
POSIX_TYPES	sys/share/ioctl.c	58;"	d	file:
POTION	src/objects.c	/^	POTION(ACID, "acid", "white",                 0, 0,          20, 250, CLR_WHITE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(AMNESIA, "amnesia", "sparkling",          1, 0,          16, 100, CLR_CYAN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(BLINDNESS, "blindness", "yellow",           1, BLINDED,    38, 150, CLR_YELLOW),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(BLOOD, "blood", "blood-red",            0, 0,           0,  50, CLR_RED),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(BOOZE, "booze", "brown",                0, 0,          40,  50, CLR_BROWN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(CLAIRVOYANCE, "clairvoyance","luminescent",    1, 0,          20, 100, CLR_WHITE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(CONFUSION, "confusion", "orange",           1, CONFUSION,  40, 100, CLR_ORANGE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(ENLIGHTENMENT, "enlightenment", "swirly",       1, 0,          20, 200, CLR_BROWN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(ESP, "ESP", "muddy",                  1, TELEPAT,    20, 150, CLR_BROWN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(EXTRA_HEALING, "extra healing", "puce",         1, 0,          45, 100, CLR_RED),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(FRUIT_JUICE, "fruit juice", "dark",           0, 0,          40,  50, CLR_BLACK),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(FULL_HEALING, "full healing",  "black",        1, 0,          20, 200, CLR_BLACK),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(GAIN_ABILITY, "gain ability", "ruby",          1, 0,          38, 300, CLR_RED),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(GAIN_ENERGY, "gain energy", "cloudy",         1, 0,          40, 150, CLR_WHITE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(GAIN_LEVEL, "gain level", "milky",           1, 0,          20, 300, CLR_WHITE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(HALLUCINATION, "hallucination", "sky blue",     1, HALLUC,     40, 100, CLR_CYAN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(HEALING, "healing", "purple-red",         1, 0,          55, 100, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(INVISIBILITY, "invisibility", "brilliant blue",1, INVIS,      40, 150, CLR_BRIGHT_BLUE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(INVULNERABILITY, "invulnerability", "icy",        1, 0,           5, 300, CLR_BRIGHT_BLUE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(LEVITATION, "levitation", "cyan",            1, LEVITATION, 38, 200, CLR_CYAN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(MONSTER_DETECTION, "monster detection", "bubbly",   1, 0,          38, 150, CLR_WHITE),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(OBJECT_DETECTION, "object detection", "smoky",     1, 0,          38, 150, CLR_GRAY),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(OIL, "oil", "murky",                  0, 0,          30, 250, CLR_BROWN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(PARALYSIS, "paralysis", "emerald",          1, 0,          38, 300, CLR_BRIGHT_GREEN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(POLYMORPH, "polymorph", "golden",           1, 0,          10, 200, CLR_YELLOW),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(RESTORE_ABILITY, "restore ability", "pink",       1, 0,          40, 100, CLR_BRIGHT_MAGENTA),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(SEE_INVISIBLE, "see invisible", "magenta",      1, SEE_INVIS,  38,  50, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(SICKNESS, "sickness", "fizzy",             0, 0,          40,  50, CLR_CYAN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(SLEEPING, "sleeping",  "effervescent",     1, 0,          40, 100, CLR_GRAY),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(SPEED, "speed", "dark green",           1, FAST,       38, 200, CLR_GREEN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(VAMPIRE_BLOOD, "vampire blood", "blood-red",    1, 0,           0, 350, CLR_RED),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	/^	POTION(WATER, "water", "clear",                0, 0,          55, 100, CLR_CYAN),$/;"	e	enum:__anon12	file:
POTION	src/objects.c	920;"	d	file:
POTION	src/objects.c	955;"	d	file:
POTIONSHOP	include/mkroom.h	81;"	d
POTION_CLASS	include/objclass.h	137;"	d
POTION_OCCUPANT_CHANCE	src/muse.c	67;"	d	file:
POTION_OCCUPANT_CHANCE	src/potion.c	326;"	d	file:
POTION_SYM	include/objclass.h	172;"	d
PREFER_TILED	src/options.c	15;"	d	file:
PREFER_TILED	src/options.c	17;"	d	file:
PREFIX	src/objnam.c	9;"	d	file:
PREFIX	util/dgn_main.c	25;"	d	file:
PREFIX	util/lev_main.c	28;"	d	file:
PREFIXES_IN_USE	include/decl.h	449;"	d
PREFIX_COUNT	include/decl.h	439;"	d
PRINTF_F	include/system.h	43;"	d
PRINTF_F	include/system.h	45;"	d
PROCESS_KEYSTROKE	sys/winnt/nttty.c	/^typedef int (__stdcall * PROCESS_KEYSTROKE)($/;"	t	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(ARROW, "arrow", NULL,$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(CROSSBOW_BOLT, "crossbow bolt", NULL,$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(DARK_ELVEN_ARROW, "dark elven arrow", "black runed arrow",$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(ELVEN_ARROW, "elven arrow", "runed arrow",$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(ORCISH_ARROW, "orcish arrow", "crude arrow",$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(SILVER_ARROW, "silver arrow", NULL,$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	/^	PROJECTILE(YA, "ya", "bamboo arrow",$/;"	e	enum:__anon12	file:
PROJECTILE	src/objects.c	382;"	d	file:
PROJECTILE	src/objects.c	54;"	d	file:
PROJECTILE	src/uhitm.c	48;"	d	file:
PROP_COUNT	src/apply.c	1632;"	d	file:
PROP_COUNT	src/apply.c	1788;"	d	file:
PROP_H	include/prop.h	6;"	d
PROTECTION	include/prop.h	31;"	d
PROTOFILE	build-linux/include/dgn_comp.h	/^    PROTOFILE = 267,$/;"	e	enum:yytokentype
PROTOFILE	build-linux/src/dgn_yacc.c	/^    PROTOFILE = 267,$/;"	e	enum:yytokentype	file:
PROT_FROM_SHAPE_CHANGERS	include/prop.h	32;"	d
PROT_POLY	include/artifact.h	68;"	d
P_ADVANCE	include/skills.h	108;"	d
P_ATTACK_SPELL	include/skills.h	57;"	d
P_AXE	include/skills.h	22;"	d
P_BARE_HANDED_COMBAT	include/skills.h	68;"	d
P_BASIC	include/skills.h	87;"	d
P_BODY_SPELL	include/skills.h	62;"	d
P_BOOK	src/u_init.c	150;"	d	file:
P_BOOMERANG	include/skills.h	48;"	d
P_BOW	include/skills.h	42;"	d
P_BROAD_SWORD	include/skills.h	25;"	d
P_CLUB	include/skills.h	30;"	d
P_CROSSBOW	include/skills.h	45;"	d
P_DAGGER	include/skills.h	20;"	d
P_DART	include/skills.h	46;"	d
P_DIVINATION_SPELL	include/skills.h	59;"	d
P_ENCHANTMENT_SPELL	include/skills.h	60;"	d
P_EXPERT	include/skills.h	89;"	d
P_FIREARM	include/skills.h	44;"	d
P_FIRST_H_TO_H	include/skills.h	73;"	d
P_FIRST_SPELL	include/skills.h	64;"	d
P_FIRST_WEAPON	include/skills.h	53;"	d
P_FLAIL	include/skills.h	34;"	d
P_GRAND_MASTER	include/skills.h	91;"	d
P_HAMMER	include/skills.h	35;"	d
P_HEALING_SPELL	include/skills.h	58;"	d
P_ISRESTRICTED	include/skills.h	85;"	d
P_JAVELIN	include/skills.h	39;"	d
P_KNIFE	include/skills.h	21;"	d
P_LANCE	include/skills.h	41;"	d
P_LAST_H_TO_H	include/skills.h	72;"	d
P_LAST_SPELL	include/skills.h	65;"	d
P_LAST_WEAPON	include/skills.h	54;"	d
P_LIGHTSABER	include/skills.h	51;"	d
P_LIMIT	include/skills.h	92;"	d
P_LONG_SWORD	include/skills.h	26;"	d
P_MACE	include/skills.h	32;"	d
P_MARTIAL_ARTS	include/skills.h	69;"	d
P_MASTER	include/skills.h	90;"	d
P_MATTER_SPELL	include/skills.h	63;"	d
P_MAX_SKILL	include/skills.h	107;"	d
P_MORNING_STAR	include/skills.h	33;"	d
P_NAME	src/weapon.c	115;"	d	file:
P_NONE	include/skills.h	11;"	d
P_NUM_SKILLS	include/skills.h	75;"	d
P_PADDLE	include/skills.h	31;"	d
P_PICK_AXE	include/skills.h	23;"	d
P_POLEARMS	include/skills.h	37;"	d
P_PROTECTION_SPELL	include/skills.h	61;"	d
P_QUARTERSTAFF	include/skills.h	36;"	d
P_REGISTER	build-linux/include/lev_comp.h	/^    P_REGISTER = 308,$/;"	e	enum:yytokentype
P_REGISTER	build-linux/src/lev_yacc.c	/^    P_REGISTER = 308,$/;"	e	enum:yytokentype	file:
P_RESTRICTED	include/skills.h	109;"	d
P_RIDING	include/skills.h	71;"	d
P_SABER	include/skills.h	29;"	d
P_SCIMITAR	include/skills.h	28;"	d
P_SHORT_SWORD	include/skills.h	24;"	d
P_SHURIKEN	include/skills.h	47;"	d
P_SKILL	include/skills.h	106;"	d
P_SKILLED	include/skills.h	88;"	d
P_SKILL_LIMIT	include/skills.h	111;"	d
P_SLING	include/skills.h	43;"	d
P_SPEAR	include/skills.h	38;"	d
P_TRIDENT	include/skills.h	40;"	d
P_TWO_HANDED_SWORD	include/skills.h	27;"	d
P_TWO_WEAPON_COMBAT	include/skills.h	70;"	d
P_UNICORN_HORN	include/skills.h	50;"	d
P_UNSKILLED	include/skills.h	86;"	d
P_WHIP	include/skills.h	49;"	d
Passes_walls	include/youprop.h	268;"	d
Poison_resistance	include/youprop.h	56;"	d
Polymorph	include/youprop.h	308;"	d
Polymorph_control	include/youprop.h	312;"	d
Priest	src/u_init.c	/^static struct trobj Priest[] = {$/;"	v	typeref:struct:trobj	file:
Protection	include/youprop.h	296;"	d
Protection_from_shape_changers	include/youprop.h	302;"	d
Punished	include/youprop.h	86;"	d
QBUFSZ	include/global.h	191;"	d
QTEXT_FILE	src/questpgr.c	12;"	d	file:
QTEXT_H	include/qtext.h	6;"	d
QTN_ANGELIC	include/qtext.h	57;"	d
QTN_DEMONIC	include/qtext.h	60;"	d
QT_ANGELIC	include/qtext.h	56;"	d
QT_ASSIGNQUEST	include/qtext.h	25;"	d
QT_BADALIGN	include/qtext.h	24;"	d
QT_BADLEVEL	include/qtext.h	23;"	d
QT_BANISHED	include/qtext.h	62;"	d
QT_DEMONIC	include/qtext.h	59;"	d
QT_DISCOURAGE	include/qtext.h	40;"	d
QT_ENCOURAGE	include/qtext.h	27;"	d
QT_FIRSTGOAL	include/qtext.h	32;"	d
QT_FIRSTLEADER	include/qtext.h	19;"	d
QT_FIRSTLOCATE	include/qtext.h	29;"	d
QT_FIRSTNEMESIS	include/qtext.h	35;"	d
QT_FIRSTTIME	include/qtext.h	12;"	d
QT_GOTIT	include/qtext.h	42;"	d
QT_GUARDTALK	include/qtext.h	16;"	d
QT_GUARDTALK2	include/qtext.h	17;"	d
QT_GYPSY	include/qtext.h	64;"	d
QT_HASAMULET	include/qtext.h	49;"	d
QT_KILLEDNEM	include/qtext.h	44;"	d
QT_LASTLEADER	include/qtext.h	22;"	d
QT_NEMWANTSIT	include/qtext.h	38;"	d
QT_NEXTGOAL	include/qtext.h	33;"	d
QT_NEXTLEADER	include/qtext.h	20;"	d
QT_NEXTLOCATE	include/qtext.h	30;"	d
QT_NEXTNEMESIS	include/qtext.h	36;"	d
QT_NEXTTIME	include/qtext.h	13;"	d
QT_OFFEREDIT	include/qtext.h	45;"	d
QT_OFFEREDIT2	include/qtext.h	46;"	d
QT_OTHERLEADER	include/qtext.h	21;"	d
QT_OTHERNEMESIS	include/qtext.h	37;"	d
QT_OTHERTIME	include/qtext.h	14;"	d
QT_POSTHANKS	include/qtext.h	48;"	d
QUEST_H	include/quest.h	6;"	d
QUIT	include/hack.h	81;"	d
Qstat	src/quest.c	13;"	d	file:
Quick_Death	src/hack.c	/^int Quick_Death = 0;$/;"	v
RACE_EXCEPTION	src/worn.c	362;"	d	file:
RACE_EXCEPTION	src/worn.c	500;"	d	file:
RANDOM	include/ntconf.h	10;"	d
RANDOMREGION_ID	build-linux/include/lev_comp.h	/^    RANDOMREGION_ID = 326,$/;"	e	enum:yytokentype
RANDOMREGION_ID	build-linux/src/lev_yacc.c	/^    RANDOMREGION_ID = 326,$/;"	e	enum:yytokentype	file:
RANDOM_CLASS	include/objclass.h	129;"	d
RANDOM_MONSTERS_ID	build-linux/include/lev_comp.h	/^    RANDOM_MONSTERS_ID = 279,$/;"	e	enum:yytokentype
RANDOM_MONSTERS_ID	build-linux/src/lev_yacc.c	/^    RANDOM_MONSTERS_ID = 279,$/;"	e	enum:yytokentype	file:
RANDOM_OBJECTS_ID	build-linux/include/lev_comp.h	/^    RANDOM_OBJECTS_ID = 278,$/;"	e	enum:yytokentype
RANDOM_OBJECTS_ID	build-linux/src/lev_yacc.c	/^    RANDOM_OBJECTS_ID = 278,$/;"	e	enum:yytokentype	file:
RANDOM_PLACES_ID	build-linux/include/lev_comp.h	/^    RANDOM_PLACES_ID = 280,$/;"	e	enum:yytokentype
RANDOM_PLACES_ID	build-linux/src/lev_yacc.c	/^    RANDOM_PLACES_ID = 280,$/;"	e	enum:yytokentype	file:
RANDOM_TYPE	build-linux/include/lev_comp.h	/^    RANDOM_TYPE = 305,$/;"	e	enum:yytokentype
RANDOM_TYPE	build-linux/src/lev_yacc.c	/^    RANDOM_TYPE = 305,$/;"	e	enum:yytokentype	file:
RAND_CORRIDOR_ID	build-linux/include/lev_comp.h	/^    RAND_CORRIDOR_ID = 299,$/;"	e	enum:yytokentype
RAND_CORRIDOR_ID	build-linux/src/lev_yacc.c	/^    RAND_CORRIDOR_ID = 299,$/;"	e	enum:yytokentype	file:
RANGE_GLOBAL	include/timeout.h	19;"	d
RANGE_LEVEL	include/timeout.h	18;"	d
RAN_BOW	src/u_init.c	163;"	d	file:
RAN_TWO_ARROWS	src/u_init.c	164;"	d	file:
RAN_ZERO_ARROWS	src/u_init.c	165;"	d	file:
RAW_STAT_BLIND	include/hack.h	302;"	d
RAW_STAT_CONFUSION	include/hack.h	299;"	d
RAW_STAT_FOODPOIS	include/hack.h	300;"	d
RAW_STAT_HALLUCINATION	include/hack.h	304;"	d
RAW_STAT_ILL	include/hack.h	301;"	d
RAW_STAT_LEVITATION	include/hack.h	298;"	d
RAW_STAT_SLIMED	include/hack.h	305;"	d
RAW_STAT_STUNNED	include/hack.h	303;"	d
RAY	include/objclass.h	37;"	d
RDBMODE	include/dlb.h	125;"	d
RDBMODE	include/dlb.h	128;"	d
RDTMODE	include/dlb.h	118;"	d
REALLY	src/read.c	1832;"	d	file:
REALTIME_ON_BOTL	include/config.h	170;"	d
REALZOO	include/mkroom.h	67;"	d
RECT_H	include/rect.h	6;"	d
RECURSIVETRAP	include/hack.h	176;"	d
REFLECTING	include/prop.h	51;"	d
REGENERATION	include/prop.h	19;"	d
REGION_H	include/region.h	6;"	d
REGION_ID	build-linux/include/lev_comp.h	/^    REGION_ID = 276,$/;"	e	enum:yytokentype
REGION_ID	build-linux/src/lev_yacc.c	/^    REGION_ID = 276,$/;"	e	enum:yytokentype	file:
REG_HERO_INSIDE	include/region.h	24;"	d
REG_NOT_HEROS	include/region.h	25;"	d
REJECT	build-linux/src/dgn_lex.c	558;"	d	file:
REJECT	build-linux/src/lev_lex.c	860;"	d	file:
REPAIR_DELAY	include/eshk.h	8;"	d
REVIVE_CTHULHU	src/region.c	54;"	d	file:
REVIVE_MON	include/timeout.h	28;"	d
RGB	win/proxy/glyphmap.c	20;"	d	file:
RGB_TRANSPARENT	win/proxy/glyphmap.c	24;"	d	file:
RIGHT	include/wincurs.h	/^	RIGHT,$/;"	e	enum:orient_type
RIGHT	src/extralev.c	21;"	d	file:
RIGHT	src/sp_lev.c	48;"	d	file:
RIGHTBUTTON	include/ntconf.h	152;"	d
RIGHTMOST_BUTTON_PRESSED	sys/winnt/nttty.c	24;"	d	file:
RIGHT_RING	include/prop.h	126;"	d
RIGHT_SIDE	include/prop.h	128;"	d
RING	src/objects.c	/^	RING(ADORNMENT, "adornment", ADORNED, "wooden",        100, 1, 1, 2, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(AGGRAVATE_MONSTER, "aggravate monster", AGGRAVATE_MONSTER, "sapphire",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(COLD_RESISTANCE, "cold resistance", COLD_RES, "brass",  150, 1, 0, 4, COPPER, HI_COPPER),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(CONFLICT, "conflict",   CONFLICT, "ruby",        300, 1, 0, 9, GEMSTONE, CLR_RED),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(FIRE_RESISTANCE, "fire resistance", FIRE_RES, "iron",   200, 1, 0, 5, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(FREE_ACTION, "free action",     FREE_ACTION, "twisted",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(GAIN_CONSTITUTION, "gain constitution", 0,   "opal",      150, 1, 1, 7, MINERAL,  HI_MINERAL),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(GAIN_DEXTERITY, "gain dexterity",  0,     "obsidian",  150, 1, 1, 7, GEMSTONE, CLR_BLACK),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(GAIN_INTELLIGENCE, "gain intelligence", 0,   "plain",     150, 1, 1, 7, MINERAL,  HI_MINERAL),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(GAIN_STRENGTH, "gain strength", 0,       "granite",   150, 1, 1, 7, MINERAL, HI_MINERAL),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(GAIN_WISDOM, "gain wisdom",     0,     "glass",     150, 1, 1, 7, MINERAL,  CLR_CYAN),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(HUNGER, "hunger",     HUNGER,     "topaz",     100, 1, 0, 8, GEMSTONE, CLR_CYAN),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(INCREASE_ACCURACY, "increase accuracy", 0,   "clay",      150, 1, 1, 4, MINERAL, CLR_RED),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(INCREASE_DAMAGE, "increase damage", 0,     "coral",     150, 1, 1, 4, MINERAL, CLR_ORANGE),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(INVISIBILITY, "invisibility", INVIS,    "wire",      150, 1, 0, 5, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(LEVITATION, "levitation", LEVITATION, "agate",     200, 1, 0, 7, GEMSTONE, CLR_RED),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(MOOD, "mood",       0,          "ridged",    100, 1, 0, 8, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(POISON_RESISTANCE, "poison resistance", POISON_RES, "pearl",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(POLYMORPH, "polymorph", POLYMORPH, "ivory",       300, 1, 0, 4, BONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(POLYMORPH_CONTROL, "polymorph control", POLYMORPH_CONTROL, "emerald",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(PROTECTION, "protection", PROTECTION, "black onyx",100, 1, 1, 7, MINERAL, CLR_BLACK),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(PROTECTION_FROM_SHAPE_CHANGERS, "protection from shape changers", PROT_FROM_SHAPE_CHANGERS, "shiny",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(REGENERATION, "regeneration", REGENERATION, "moonstone",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(SEARCHING, "searching",  SEARCHING,  "tiger eye", 200, 1, 0, 6, GEMSTONE, CLR_BROWN),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(SEE_INVISIBLE, "see invisible", SEE_INVIS, "engagement",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(SHOCK_RESISTANCE, "shock resistance", SHOCK_RES, "copper",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(SLEEPING, "sleeping",   SLEEPING,   "wedding",   100, 1, 0, 7, GEMSTONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(SLOW_DIGESTION, "slow digestion",  SLOW_DIGESTION, "steel",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(STEALTH, "stealth", STEALTH, "jade",            100, 1, 0, 6, GEMSTONE, CLR_GREEN),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(SUSTAIN_ABILITY, "sustain ability", FIXED_ABIL, "bronze",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(TELEPORTATION, "teleportation", TELEPORT, "silver",   200, 1, 0, 3, SILVER, HI_SILVER),$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(TELEPORT_CONTROL, "teleport control", TELEPORT_CONTROL, "gold",$/;"	e	enum:__anon12	file:
RING	src/objects.c	/^	RING(WARNING, "warning",    WARNING,    "diamond",   100, 1, 0,10, GEMSTONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
RING	src/objects.c	624;"	d	file:
RING	src/objects.c	674;"	d	file:
RINGSHOP	include/mkroom.h	84;"	d
RING_CLASS	include/objclass.h	133;"	d
RING_SYM	include/objclass.h	168;"	d
RM_H	include/rm.h	6;"	d
RND	src/rnd.c	11;"	d	file:
RND	src/rnd.c	8;"	d	file:
RNDCHLEVEL	build-linux/include/dgn_comp.h	/^    RNDCHLEVEL = 265,$/;"	e	enum:yytokentype
RNDCHLEVEL	build-linux/src/dgn_yacc.c	/^    RNDCHLEVEL = 265,$/;"	e	enum:yytokentype	file:
RNDLEVEL	build-linux/include/dgn_comp.h	/^    RNDLEVEL = 263,$/;"	e	enum:yytokentype
RNDLEVEL	build-linux/src/dgn_yacc.c	/^    RNDLEVEL = 263,$/;"	e	enum:yytokentype	file:
ROCK	src/objects.c	/^	ROCK(FLINT, "flint", "gray",		0, 10,  10,  1, 6, 6, 0, 10, 7, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	/^	ROCK(HEALTHSTONE, "healthstone", "gray",	0,  8,  10, 60, 3, 3, 1, 10, 7, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	/^	ROCK(LOADSTONE, "loadstone", "gray",	0, 10, 500,  1, 3, 3, 1, 10, 6, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	/^	ROCK(LUCKSTONE, "luckstone", "gray",	0, 10,  10, 60, 3, 3, 1, 10, 7, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	/^	ROCK(ROCK, "rock", NULL,		1,100,  10,  0, 3, 3, 0, 10, 7, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	/^	ROCK(TOUCHSTONE, "touchstone", "gray",	0,  4,  10, 45, 3, 3, 1, 10, 6, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	/^	ROCK(WHETSTONE, "whetstone", "gray",	0,  3,  10, 45, 3, 3, 1, 10, 7, MINERAL, CLR_GRAY),$/;"	e	enum:__anon12	file:
ROCK	src/objects.c	1147;"	d	file:
ROCK	src/objects.c	1199;"	d	file:
ROCKTRAP	include/trap.h	55;"	d
ROCK_CLASS	include/objclass.h	143;"	d
ROCK_SYM	include/objclass.h	178;"	d
ROGUELIKE	include/dgn_file.h	61;"	d
ROLESZ	src/topten.c	15;"	d	file:
ROLE_ALIGNMASK	include/you.h	109;"	d
ROLE_ALIGNS	include/you.h	230;"	d
ROLE_CHAOTIC	include/you.h	112;"	d
ROLE_FEMALE	include/you.h	107;"	d
ROLE_GENDERS	include/you.h	210;"	d
ROLE_GENDMASK	include/you.h	105;"	d
ROLE_LAWFUL	include/you.h	110;"	d
ROLE_MALE	include/you.h	106;"	d
ROLE_NEUTER	include/you.h	108;"	d
ROLE_NEUTRAL	include/you.h	111;"	d
ROLE_NONE	include/you.h	151;"	d
ROLE_RACEMASK	include/you.h	104;"	d
ROLE_RANDOM	include/you.h	152;"	d
ROLL	include/hack.h	200;"	d
ROLLING_BOULDER_TRAP	include/trap.h	59;"	d
ROOM	include/rm.h	57;"	d
ROOMOFFSET	include/mkroom.h	104;"	d
ROOM_ID	build-linux/include/lev_comp.h	/^    ROOM_ID = 286,$/;"	e	enum:yytokentype
ROOM_ID	build-linux/src/lev_yacc.c	/^    ROOM_ID = 286,$/;"	e	enum:yytokentype	file:
ROOM_INDEX	include/mkroom.h	115;"	d
ROTTEN_TIN	src/eat.c	131;"	d	file:
ROT_AGE	src/mkobj.c	724;"	d	file:
ROT_CORPSE	include/timeout.h	26;"	d
ROT_ICE_ADJUSTMENT	src/mkobj.c	1170;"	d	file:
ROT_ICE_ADJUSTMENT	src/mkobj.c	1285;"	d	file:
ROT_ORGANIC	include/timeout.h	25;"	d
ROWNO	include/global.h	169;"	d
RUN_CRAWL	include/flag.h	291;"	d
RUN_LEAP	include/flag.h	289;"	d
RUN_STEP	include/flag.h	290;"	d
RUN_TPORT	include/flag.h	288;"	d
RUST_TRAP	include/trap.h	61;"	d
R_DAGGERS	src/u_init.c	175;"	d	file:
R_DARTS	src/u_init.c	176;"	d	file:
R_REGISTER	build-linux/include/lev_comp.h	/^    R_REGISTER = 327,$/;"	e	enum:yytokentype
R_REGISTER	build-linux/src/lev_yacc.c	/^    R_REGISTER = 327,$/;"	e	enum:yytokentype	file:
Race	include/you.h	/^struct Race {$/;"	s
Race_if	include/you.h	198;"	d
Race_switch	include/you.h	199;"	d
Rand	include/ntconf.h	85;"	d
Rand	include/ntconf.h	87;"	d
Rand	include/unixconf.h	276;"	d
Rand	include/unixconf.h	278;"	d
Ranger	src/u_init.c	/^static struct trobj Ranger[] = {$/;"	v	typeref:struct:trobj	file:
Reflecting	include/youprop.h	324;"	d
Regeneration	include/youprop.h	287;"	d
Ring_gone	src/do_wear.c	/^void Ring_gone(struct obj *obj) {$/;"	f
Ring_off	src/do_wear.c	/^void Ring_off(struct obj *obj) {$/;"	f
Ring_off_or_gone	src/do_wear.c	/^static void Ring_off_or_gone(struct obj *obj, boolean gone) {$/;"	f	file:
Ring_on	src/do_wear.c	/^void Ring_on(struct obj *obj) {$/;"	f
Rogue	src/u_init.c	/^static struct trobj Rogue[] = {$/;"	v	typeref:struct:trobj	file:
Role	include/you.h	/^struct Role {$/;"	s
RoleAdvance	include/you.h	/^struct RoleAdvance {$/;"	s
RoleName	include/you.h	/^struct RoleName {$/;"	s
Role_if	include/you.h	146;"	d
Role_switch	include/you.h	147;"	d
S	src/objects.c	377;"	d	file:
S	src/objects.c	79;"	d	file:
SATIATED	src/attrib.c	365;"	d	file:
SATIATED	src/eat.c	48;"	d	file:
SATIATED	src/pray.c	128;"	d	file:
SAVEF	src/files.c	/^char SAVEF[SAVESIZE];	\/* holds relative path of save file from playground *\/$/;"	v
SAVEF	util/lev_main.c	/^char SAVEF[ARBITRARY_SIZE];$/;"	v
SAVEP	util/lev_main.c	/^char SAVEP[ARBITRARY_SIZE];$/;"	v
SAVEPREFIX	include/decl.h	432;"	d
SAVESIZE	src/files.c	69;"	d	file:
SAVESIZE	src/files.c	72;"	d	file:
SAVESIZE	src/files.c	74;"	d	file:
SAVESIZE	util/recover.c	26;"	d	file:
SAVESIZE	util/recover.c	29;"	d	file:
SAVESIZE	util/recover.c	31;"	d	file:
SCHAR_LIM	src/objnam.c	10;"	d	file:
SCOREPREFIX	include/decl.h	435;"	d
SCORR	include/rm.h	48;"	d
SCROLL	src/objects.c	/^	SCROLL(AMNESIA, "amnesia",               "DUAM XNAHT",           P_NONE, 1,  35, 200),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(BLANK_PAPER, "blank paper",           "unlabeled",            P_NONE, 0,  28,  60),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(CHARGING, "charging",              "HACKEM MUCHE",         P_NONE, 1,  15, 300),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(CONFUSE_MONSTER, "confuse monster",       "NR 9",                 P_ENCHANTMENT_SPELL,  1,  43, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(CREATE_MONSTER, "create monster",        "LEP GEX VEN ZEA",      P_ATTACK_SPELL, 1,  45, 200),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(DESTROY_ARMOR, "destroy armor",         "JUYED AWK YACC",       P_NONE, 1,  45, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(EARTH, "earth",                 "KIRJE",                P_MATTER_SPELL, 1,  20, 200),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(ENCHANT_ARMOR, "enchant armor",         "ZELGO MER",            P_ENCHANTMENT_SPELL,  1,  63,  80),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(ENCHANT_WEAPON, "enchant weapon",        "DAIYEN FOOELS",        P_ENCHANTMENT_SPELL,  1,  80,  60),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(FIRE, "fire",                  "ANDOVA BEGARIN",       P_MATTER_SPELL, 1,  33, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(FOOD_DETECTION, "food detection",        "YUM YUM",              P_DIVINATION_SPELL, 1,  25, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(GENOCIDE, "genocide",              "ELBIB YLOH",           P_NONE, 1,  15, 300),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(GOLD_DETECTION, "gold detection",        "THARR",                P_DIVINATION_SPELL, 1,  33, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(IDENTIFY, "identify",              "KERNOD WEL",           P_DIVINATION_SPELL, 1, 185,  20),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(LIGHT, "light",                 "VERR YED HORRE",       P_DIVINATION_SPELL, 1,  90,  50),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(MAGIC_MAPPING, "magic mapping",         "ELAM EBOW",            P_DIVINATION_SPELL, 1,  45, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(MAIL, "mail",                  "stamped",              P_NONE, 0,   0,   0),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(PUNISHMENT, "punishment",            "VE FORBRYDERNE",       P_NONE, 1,  15, 300),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(REMOVE_CURSE, "remove curse",          "PRATYAVAYAH",          P_PROTECTION_SPELL, 1,  65,  80),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(SCARE_MONSTER, "scare monster",         "XIXAXA XOXAXA XUXAXA", P_ENCHANTMENT_SPELL,  1,  35, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(STINKING_CLOUD, "stinking cloud",	"VELOX NEB",            P_NONE, 1,  15, 300),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(TAMING, "taming",                "PRIRUTSENIE",          P_ENCHANTMENT_SPELL, 1,  15, 200),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(TELEPORTATION, "teleportation",         "VENZAR BORGAVVE",      P_BODY_SPELL, 1,  55, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(_OBJECT_DUMMY1, NULL,		"FOOBIE BLETCH",        P_NONE, 1,   0, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(_OBJECT_DUMMY2, NULL,		"TEMOV",                P_NONE, 1,   0, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(_OBJECT_DUMMY3, NULL,		"GARVEN DEH",           P_NONE, 1,   0, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	/^	SCROLL(_OBJECT_DUMMY4, NULL,		"READ ME",              P_NONE, 1,   0, 100),$/;"	e	enum:__anon12	file:
SCROLL	src/objects.c	958;"	d	file:
SCROLL	src/objects.c	999;"	d	file:
SCROLLBAR_BACK_COLOR	include/wincurs.h	29;"	d
SCROLLBAR_COLOR	include/wincurs.h	28;"	d
SCROLLSHOP	include/mkroom.h	80;"	d
SCROLL_CLASS	include/objclass.h	138;"	d
SCROLL_SYM	include/objclass.h	173;"	d
SDOOR	include/rm.h	47;"	d
SE	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
SEARCHING	include/prop.h	20;"	d
SEDUCTION_ATTACKS	src/monst.c	4036;"	d	file:
SEDUCTION_ATTACKS	src/monst.c	4053;"	d	file:
SEEK_CUR	include/dlb.h	112;"	d
SEEK_END	include/dlb.h	115;"	d
SEEK_SET	include/dlb.h	109;"	d
SEE_INVIS	include/prop.h	21;"	d
SELECT	win/curses/cursdial.c	/^    SELECT,$/;"	e	enum:menu_op_type	file:
SELF_RECOVER	include/ntconf.h	23;"	d
SELL_DELIBERATE	include/hack.h	59;"	d
SELL_DONTSELL	include/hack.h	60;"	d
SELL_NORMAL	include/hack.h	58;"	d
SEP	src/topten.c	200;"	d	file:
SEP	src/topten.c	271;"	d	file:
SEP_0	sys/share/random.c	93;"	d	file:
SEP_1	sys/share/random.c	98;"	d	file:
SEP_2	sys/share/random.c	103;"	d	file:
SEP_3	sys/share/random.c	108;"	d	file:
SEP_4	sys/share/random.c	113;"	d	file:
SET_FILE	win/proxy/callback.c	118;"	d	file:
SET_FILE	win/proxy/callback.c	18;"	d	file:
SET_FOUNTAIN_LOOTED	include/rm.h	286;"	d
SET_FOUNTAIN_WARNED	include/rm.h	285;"	d
SET_IN_FILE	include/hack.h	251;"	d
SET_IN_GAME	include/hack.h	254;"	d
SET_VIA_PROG	include/hack.h	252;"	d
SG	win/tty/termcap.c	/^static int SG;$/;"	v	file:
SHARED	include/mkroom.h	100;"	d
SHARED_PLUS	include/mkroom.h	101;"	d
SHELL	include/ntconf.h	8;"	d
SHELL	include/unixconf.h	244;"	d
SHIELD	src/objects.c	/^	SHIELD(DWARVISH_ROUNDSHIELD, "dwarvish roundshield", "large round shield",$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	/^	SHIELD(ELVEN_SHIELD, "elven shield", "blue and green shield",$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	/^	SHIELD(LARGE_SHIELD, "large shield", NULL,$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	/^	SHIELD(ORCISH_SHIELD, "orcish shield", "red-eyed shield",$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	/^	SHIELD(SHIELD_OF_REFLECTION, "shield of reflection", "polished silver shield",$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	/^	SHIELD(SMALL_SHIELD, "small shield", NULL,$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	/^	SHIELD(URUK_HAI_SHIELD, "Uruk-hai shield", "white-handed shield",$/;"	e	enum:__anon12	file:
SHIELD	src/objects.c	404;"	d	file:
SHIELD	src/objects.c	617;"	d	file:
SHIELD_COUNT	include/display.h	197;"	d
SHK_APPRAISE	include/eshk.h	40;"	d
SHK_GENERAL	include/eshk.h	53;"	d
SHK_ID_BASIC	include/eshk.h	37;"	d
SHK_ID_PREMIUM	include/eshk.h	38;"	d
SHK_MATCH	include/eshk.h	52;"	d
SHK_NOMATCH	include/eshk.h	51;"	d
SHK_SPECIAL_A	include/eshk.h	41;"	d
SHK_SPECIAL_B	include/eshk.h	42;"	d
SHK_SPECIAL_C	include/eshk.h	43;"	d
SHK_UNCURSE	include/eshk.h	39;"	d
SHOCK_RES	include/prop.h	13;"	d
SHOPBASE	include/mkroom.h	78;"	d
SHORTSIGHTED	include/sp_lev.h	23;"	d
SICK	include/prop.h	38;"	d
SICK_ALL	include/you.h	275;"	d
SICK_NONVOMITABLE	include/you.h	274;"	d
SICK_RES	include/prop.h	61;"	d
SICK_VOMITABLE	include/you.h	273;"	d
SIGNAL_CANCEL	include/hack.h	146;"	d
SIGNAL_NOMENU	include/hack.h	144;"	d
SIG_RET_TYPE	include/system.h	17;"	d
SIG_RET_TYPE	include/system.h	19;"	d
SILVER	include/objclass.h	58;"	d
SINK	include/rm.h	62;"	d
SINK_ID	build-linux/include/lev_comp.h	/^    SINK_ID = 297,$/;"	e	enum:yytokentype
SINK_ID	build-linux/src/lev_yacc.c	/^    SINK_ID = 297,$/;"	e	enum:yytokentype	file:
SIZ	src/monst.c	53;"	d	file:
SIZE	include/global.h	66;"	d
SIZE_MAX	build-linux/src/dgn_lex.c	88;"	d	file:
SIZE_MAX	build-linux/src/lev_lex.c	88;"	d	file:
SKILLS_H	include/skills.h	6;"	d
SKIP	win/proxy/callback.c	185;"	d	file:
SKIP	win/proxy/callback.c	245;"	d	file:
SKIP_ERRNO	src/files.c	29;"	d	file:
SKIP_TO_DRAG	src/ball.c	390;"	d	file:
SKIP_TO_DRAG	src/ball.c	533;"	d	file:
SLASH	include/objclass.h	40;"	d
SLEEPING	include/prop.h	40;"	d
SLEEP_RES	include/prop.h	11;"	d
SLIMED	include/prop.h	67;"	d
SLOW_DIGESTION	include/prop.h	72;"	d
SLOW_SPEED	include/permonst.h	68;"	d
SLP_GAS_TRAP	include/trap.h	60;"	d
SLT_ENCUMBER	include/hack.h	27;"	d
SO	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
SOURCEAUTHOR	sys/winnt/nttty.c	/^typedef int (__stdcall * SOURCEAUTHOR)($/;"	t	file:
SOURCEWHERE	sys/winnt/nttty.c	/^typedef int (__stdcall * SOURCEWHERE)($/;"	t	file:
SPACE_POS	include/rm.h	89;"	d
SPBOOK_CLASS	include/objclass.h	139;"	d
SPBOOK_SYM	include/objclass.h	174;"	d
SPECIAL_PM	include/permonst.h	75;"	d
SPELL	src/objects.c	/^	SPELL(ACID_STREAM, "acid stream",     "colorful",    P_MATTER_SPELL,  5,  7, 4, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(BLANK_PAPER, "blank paper",	 "plain",		P_NONE, 20,  0, 0, 0, 0,         HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CANCELLATION, "cancellation",    "shining",     P_MATTER_SPELL, 15,  8, 7, 1, IMMEDIATE, CLR_WHITE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CAUSE_FEAR, "cause fear",      "light blue",  P_ENCHANTMENT_SPELL, 20,  3, 3, 1, NODIR,     CLR_BRIGHT_BLUE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CHARM_MONSTER, "charm monster",   "magenta",     P_ENCHANTMENT_SPELL, 20,  3, 3, 1, IMMEDIATE, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CLAIRVOYANCE, "clairvoyance",    "dark blue",   P_DIVINATION_SPELL, 15,  3, 3, 1, NODIR,     CLR_BLUE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(COMMAND_UNDEAD, "command undead",  "dark",        P_ATTACK_SPELL, 10,  7, 5, 1, IMMEDIATE, CLR_BLACK),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CONE_OF_COLD, "cone of cold",    "dog eared",   P_MATTER_SPELL, 15,  8, 5, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CONFUSE_MONSTER, "confuse monster", "orange",      P_ENCHANTMENT_SPELL, 25,  2, 2, 1, IMMEDIATE, CLR_ORANGE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CREATE_FAMILIAR, "create familiar", "glittering",  P_HEALING_SPELL, 10,  7, 6, 1, NODIR,     CLR_WHITE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CREATE_MONSTER, "create monster",  "turquoise",   P_ATTACK_SPELL, 25,  3, 2, 1, NODIR,     CLR_BRIGHT_CYAN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CURE_BLINDNESS, "cure blindness",  "yellow",      P_HEALING_SPELL, 20,  2, 2, 1, IMMEDIATE, CLR_YELLOW),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(CURE_SICKNESS, "cure sickness",   "indigo",      P_HEALING_SPELL, 20,  3, 3, 1, NODIR,     CLR_BLUE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(DETECT_FOOD, "detect food",     "cyan",        P_DIVINATION_SPELL, 15,  3, 2, 1, NODIR,     CLR_CYAN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(DETECT_MONSTERS, "detect monsters", "leather",     P_DIVINATION_SPELL, 20,  1, 1, 1, NODIR,     HI_LEATHER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(DETECT_TREASURE, "detect treasure", "gray",        P_DIVINATION_SPELL, 25,  5, 4, 1, NODIR,     CLR_GRAY),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(DETECT_UNSEEN, "detect unseen",   "violet",      P_DIVINATION_SPELL, 15,  4, 3, 1, NODIR,     CLR_MAGENTA),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(DIG, "dig",             "parchment",   P_MATTER_SPELL, 20,  6, 5, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(DRAIN_LIFE, "drain life",      "velvet",      P_ATTACK_SPELL, 10,  4, 3, 1, IMMEDIATE, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(ENCHANT_ARMOR, "enchant armor",   "thin",        P_ENCHANTMENT_SPELL,  5,  8, 7, 1, NODIR,     CLR_WHITE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(ENCHANT_WEAPON, "enchant weapon",  "dull",        P_ENCHANTMENT_SPELL,  5,  8, 7, 1, NODIR,     CLR_WHITE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(ENDURE_COLD, "endure cold",     "deep",        P_PROTECTION_SPELL, 15,  3, 2, 1, NODIR,     HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(ENDURE_HEAT, "endure heat",     "spotted",     P_PROTECTION_SPELL, 15,  3, 2, 1, NODIR,     HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(ENLIGHTEN, "enlighten",       "faded",       P_BODY_SPELL, 15,  5, 4, 1, NODIR,     CLR_GRAY),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(EXTRA_HEALING, "extra healing",   "plaid",       P_HEALING_SPELL, 15,  5, 3, 1, IMMEDIATE, CLR_GREEN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(FINGER_OF_DEATH, "finger of death", "stained",     P_ATTACK_SPELL,  5, 10, 7, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(FIREBALL, "fireball",        "ragged",      P_MATTER_SPELL, 15,  6, 4, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(FLAME_SPHERE, "flame sphere",    "canvas",      P_MATTER_SPELL, 20,  2, 1, 1, NODIR, CLR_BROWN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(FORCE_BOLT = FIRST_SPELL, "force bolt",      "red",         P_ATTACK_SPELL, 25,  2, 1, 1, IMMEDIATE, CLR_RED),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(FREEZE_SPHERE, "freeze sphere",   "hardcover",   P_MATTER_SPELL, 20,  2, 1, 1, NODIR, CLR_BROWN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(HASTE_SELF, "haste self",      "purple",      P_BODY_SPELL, 20,  4, 3, 1, NODIR,     CLR_MAGENTA),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(HEALING, "healing",         "white",       P_HEALING_SPELL, 30,  2, 1, 1, IMMEDIATE, CLR_WHITE),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(IDENTIFY, "identify",        "bronze",      P_DIVINATION_SPELL, 30,  8, 5, 1, NODIR,     HI_COPPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(INSULATE, "insulate",        "long",        P_PROTECTION_SPELL, 15,  3, 2, 1, NODIR,     HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(INVISIBILITY, "invisibility",    "dark brown",  P_BODY_SPELL, 20,  5, 4, 1, NODIR,     CLR_BROWN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(JUMPING, "jumping",         "torn",        P_BODY_SPELL, 15,  3, 1, 1, IMMEDIATE, HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(KNOCK, "knock",           "pink",        P_MATTER_SPELL, 25,  1, 1, 1, IMMEDIATE, CLR_BRIGHT_MAGENTA),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(LEVITATION, "levitation",      "tan",         P_BODY_SPELL, 15,  4, 4, 1, NODIR,     CLR_BROWN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(LIGHT, "light",           "cloth",       P_DIVINATION_SPELL, 30,  1, 1, 1, NODIR,     HI_CLOTH),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(LIGHTNING, "lightning",       "rainbow",     P_MATTER_SPELL, 10,  7, 4, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(MAGIC_MAPPING, "magic mapping",   "dusty",       P_DIVINATION_SPELL, 15,  7, 5, 1, NODIR,     HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(MAGIC_MISSILE, "magic missile",   "vellum",      P_ATTACK_SPELL, 40,  3, 2, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(PASSWALL, "passwall",        "ochre",       P_BODY_SPELL,  5,  7, 6, 1, NODIR,     CLR_YELLOW),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(POISON_BLAST, "poison blast",    "tattered",    P_ATTACK_SPELL,  5,  7, 4, 1, RAY,       HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(POLYMORPH, "polymorph",       "silver",      P_BODY_SPELL, 15,  8, 6, 1, IMMEDIATE, HI_SILVER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(PROTECTION, "protection",      "wide",        P_PROTECTION_SPELL,  5,  3, 1, 1, NODIR,     HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(REMOVE_CURSE, "remove curse",    "wrinkled",    P_PROTECTION_SPELL, 25,  5, 5, 1, NODIR,     HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(RESIST_POISON, "resist poison",   "big",         P_PROTECTION_SPELL, 20,  2, 1, 1, NODIR,     CLR_GRAY),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(RESIST_SLEEP, "resist sleep",    "fuzzy",       P_PROTECTION_SPELL, 20,  2, 1, 1, NODIR,     CLR_BROWN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(RESTORE_ABILITY, "restore ability", "light brown", P_HEALING_SPELL, 15,  5, 4, 1, NODIR,     CLR_BROWN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(SLEEP, "sleep",           "mottled",     P_ENCHANTMENT_SPELL, 35,  1, 1, 1, RAY,  HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(SLOW_MONSTER, "slow monster",    "light green", P_ENCHANTMENT_SPELL, 25,  2, 2, 1, IMMEDIATE, CLR_BRIGHT_GREEN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(STONE_TO_FLESH, "stone to flesh",	 "thick",       P_HEALING_SPELL, 15,  1, 3, 1, IMMEDIATE, HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(SUMMON_UNDEAD, "summon undead",   "black",       P_ATTACK_SPELL, 10,  7, 5, 1, IMMEDIATE, CLR_BLACK),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(TELEPORT_AWAY, "teleport away",   "gold",        P_BODY_SPELL, 15,  6, 6, 1, IMMEDIATE, HI_GOLD),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(TURN_UNDEAD, "turn undead",     "copper",      P_PROTECTION_SPELL, 15,  8, 6, 1, IMMEDIATE, HI_COPPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(WIZARD_LOCK, "wizard lock",     "dark green",  P_MATTER_SPELL, 30,  3, 2, 1, IMMEDIATE, CLR_GREEN),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(_DUMMY_SPELL_END, NULL,		 "stapled",     P_NONE,  0,  0, 0, 1, 0,         HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(_DUMMY_SPELL_START, NULL,		 "tartan",      P_NONE,  0,  0, 0, 1, 0,         CLR_RED),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(_OBJECT_DUMMY6, NULL,		 "stylish",     P_NONE,  0,  0, 0, 1, 0,         HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(_OBJECT_DUMMY7, NULL,		 "psychedelic", P_NONE,  0,  0, 0, 1, 0,         CLR_BRIGHT_MAGENTA),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(_OBJECT_DUMMY8, NULL,		 "spiral-bound",P_NONE,  0,  0, 0, 1, 0,         HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	/^	SPELL(_OBJECT_DUMMY9, NULL,		 "left-handed", P_NONE,  0,  0, 0, 1, 0,         HI_PAPER),$/;"	e	enum:__anon12	file:
SPELL	src/objects.c	1002;"	d	file:
SPELL	src/objects.c	1090;"	d	file:
SPELLMENU_CAST	src/spell.c	14;"	d	file:
SPELLMENU_VIEW	src/spell.c	15;"	d	file:
SPELL_H	include/spell.h	6;"	d
SPFX_ATTK	include/artifact.h	15;"	d
SPFX_BEHEAD	include/artifact.h	19;"	d
SPFX_DALIGN	include/artifact.h	33;"	d
SPFX_DBONUS	include/artifact.h	37;"	d
SPFX_DCLAS	include/artifact.h	30;"	d
SPFX_DEFN	include/artifact.h	16;"	d
SPFX_DFLAG1	include/artifact.h	31;"	d
SPFX_DFLAG2	include/artifact.h	32;"	d
SPFX_DMONS	include/artifact.h	29;"	d
SPFX_DRLI	include/artifact.h	17;"	d
SPFX_EREGEN	include/artifact.h	24;"	d
SPFX_ESP	include/artifact.h	21;"	d
SPFX_HALRES	include/artifact.h	20;"	d
SPFX_HPHDAM	include/artifact.h	26;"	d
SPFX_HSPDAM	include/artifact.h	25;"	d
SPFX_INTEL	include/artifact.h	11;"	d
SPFX_LUCK	include/artifact.h	28;"	d
SPFX_NOGEN	include/artifact.h	9;"	d
SPFX_NONE	include/artifact.h	8;"	d
SPFX_REFLECT	include/artifact.h	35;"	d
SPFX_REGEN	include/artifact.h	23;"	d
SPFX_RESTR	include/artifact.h	10;"	d
SPFX_SEARCH	include/artifact.h	18;"	d
SPFX_SEEK	include/artifact.h	13;"	d
SPFX_SPEAK	include/artifact.h	12;"	d
SPFX_STLTH	include/artifact.h	22;"	d
SPFX_TCTRL	include/artifact.h	27;"	d
SPFX_WARN	include/artifact.h	14;"	d
SPFX_XRAY	include/artifact.h	34;"	d
SPIKED_PIT	include/trap.h	64;"	d
SPINACH	src/objnam.c	1848;"	d	file:
SPINE	include/hack.h	228;"	d
SPOOKY	include/sp_lev.h	25;"	d
SP_LEV_H	include/sp_lev.h	6;"	d
SP_LEV_MAZE	include/sp_lev.h	30;"	d
SP_LEV_ROOMS	include/sp_lev.h	29;"	d
SQKY_BOARD	include/trap.h	56;"	d
SQSRCHRADIUS	src/dogmove.c	420;"	d	file:
SQSRCHRADIUS	src/monmove.c	776;"	d	file:
STAIR	build-linux/include/dgn_comp.h	/^    STAIR = 274,$/;"	e	enum:yytokentype
STAIR	build-linux/src/dgn_yacc.c	/^    STAIR = 274,$/;"	e	enum:yytokentype	file:
STAIRS	include/rm.h	58;"	d
STAIR_ID	build-linux/include/lev_comp.h	/^    STAIR_ID = 283,$/;"	e	enum:yytokentype
STAIR_ID	build-linux/src/lev_yacc.c	/^    STAIR_ID = 283,$/;"	e	enum:yytokentype	file:
STARVED	src/attrib.c	371;"	d	file:
STARVED	src/eat.c	54;"	d	file:
STARVED	src/pray.c	134;"	d	file:
STARVING	include/hack.h	71;"	d
STATUE_FEMALE	include/obj.h	41;"	d
STATUE_HISTORIC	include/obj.h	39;"	d
STATUE_MALE	include/obj.h	40;"	d
STATUE_TRAP	include/trap.h	71;"	d
STATUS_WIN	include/wincurs.h	35;"	d
STAT_AC	win/curses/cursstat.h	11;"	d
STAT_DOWN_COLOR	include/wincurs.h	33;"	d
STAT_GOLD	win/curses/cursstat.h	10;"	d
STAT_OTHER	win/curses/cursstat.h	8;"	d
STAT_STR	win/curses/cursstat.h	9;"	d
STAT_TIME	win/curses/cursstat.h	12;"	d
STAT_TROUBLE	win/curses/cursstat.h	13;"	d
STAT_UP_COLOR	include/wincurs.h	32;"	d
STEALTH	include/prop.h	28;"	d
STOMACH	include/hack.h	234;"	d
STONE	include/rm.h	33;"	d
STONED	include/prop.h	42;"	d
STONE_LINE_CENT	src/rip.c	37;"	d	file:
STONE_LINE_CENT	src/rip.c	58;"	d	file:
STONE_LINE_LEN	src/rip.c	60;"	d	file:
STONE_RES	include/prop.h	16;"	d
STONING	include/hack.h	76;"	d
STR18	include/attrib.h	34;"	d
STR19	include/attrib.h	35;"	d
STRANGLED	include/prop.h	43;"	d
STRAT	src/wizard.c	118;"	d	file:
STRAT_ARRIVE	include/monst.h	121;"	d
STRAT_CLOSE	include/monst.h	123;"	d
STRAT_GOAL	include/monst.h	133;"	d
STRAT_GOALX	include/monst.h	134;"	d
STRAT_GOALY	include/monst.h	135;"	d
STRAT_GROUND	include/monst.h	126;"	d
STRAT_HEAL	include/monst.h	125;"	d
STRAT_MONSTR	include/monst.h	127;"	d
STRAT_NONE	include/monst.h	129;"	d
STRAT_PLAYER	include/monst.h	128;"	d
STRAT_STRATMASK	include/monst.h	130;"	d
STRAT_WAITFORU	include/monst.h	122;"	d
STRAT_WAITMASK	include/monst.h	124;"	d
STRAT_XMASK	include/monst.h	131;"	d
STRAT_YMASK	include/monst.h	132;"	d
STRIDENT	src/pray.c	66;"	d	file:
STRIDENT	src/read.c	10;"	d	file:
STRING	build-linux/include/dgn_comp.h	/^    STRING = 278$/;"	e	enum:yytokentype
STRING	build-linux/include/lev_comp.h	/^    STRING = 328,$/;"	e	enum:yytokentype
STRING	build-linux/src/dgn_yacc.c	/^    STRING = 278$/;"	e	enum:yytokentype	file:
STRING	build-linux/src/lev_yacc.c	/^    STRING = 328,$/;"	e	enum:yytokentype	file:
STRIPHI	sys/share/unixtty.c	112;"	d	file:
STRIPHI	sys/share/unixtty.c	65;"	d	file:
STRNCMPI	include/config1.h	27;"	d
STTY	sys/share/unixtty.c	116;"	d	file:
STTY	sys/share/unixtty.c	119;"	d	file:
STTY	sys/share/unixtty.c	68;"	d	file:
STTY	sys/share/unixtty.c	72;"	d	file:
STTY	sys/share/unixtty.c	75;"	d	file:
STTY2	sys/share/unixtty.c	122;"	d	file:
STTY2	sys/share/unixtty.c	79;"	d	file:
STUN	include/artilist.h	23;"	d
STUN	include/artilist.h	429;"	d
STUNNED	include/prop.h	36;"	d
SUBROOM_ID	build-linux/include/lev_comp.h	/^    SUBROOM_ID = 316,$/;"	e	enum:yytokentype
SUBROOM_ID	build-linux/src/lev_yacc.c	/^    SUBROOM_ID = 316,$/;"	e	enum:yytokentype	file:
SUBROOM_INDEX	include/mkroom.h	116;"	d
SUMMON_FIRE_ELEMENTAL	include/artifact.h	69;"	d
SUMMON_UNDEAD	include/artifact.h	65;"	d
SUMMON_WATER_ELEMENTAL	include/artifact.h	70;"	d
SUPPRESS_HALLUCINATION	include/decl.h	349;"	d
SUPPRESS_INVISIBLE	include/decl.h	348;"	d
SUPPRESS_IT	include/decl.h	347;"	d
SUPPRESS_SADDLE	include/decl.h	350;"	d
SUSPEND	include/unixconf.h	230;"	d
SV0	include/rm.h	435;"	d
SV1	include/rm.h	436;"	d
SV2	include/rm.h	437;"	d
SV3	include/rm.h	438;"	d
SV4	include/rm.h	439;"	d
SV5	include/rm.h	440;"	d
SV6	include/rm.h	441;"	d
SV7	include/rm.h	442;"	d
SVALL	include/rm.h	443;"	d
SVR4	include/unixconf.h	36;"	d
SWAMP	include/mkroom.h	58;"	d
SWIMMING	include/prop.h	66;"	d
SYSTEM_H	include/system.h	6;"	d
SYSV	include/unixconf.h	29;"	d
S_ANGEL	include/monsym.h	40;"	d
S_ANT	include/monsym.h	13;"	d
S_ARROWS	src/u_init.c	189;"	d	file:
S_BAD_COINS	include/monsym.h	72;"	d
S_BAD_FOOD	include/monsym.h	71;"	d
S_BAT	include/monsym.h	41;"	d
S_BLOB	include/monsym.h	14;"	d
S_CENTAUR	include/monsym.h	42;"	d
S_COCKATRICE	include/monsym.h	15;"	d
S_DEMON	include/monsym.h	68;"	d
S_DOG	include/monsym.h	16;"	d
S_DRAGON	include/monsym.h	43;"	d
S_EEL	include/monsym.h	69;"	d
S_ELEMENTAL	include/monsym.h	44;"	d
S_EYE	include/monsym.h	17;"	d
S_FELINE	include/monsym.h	18;"	d
S_FUNGUS	include/monsym.h	45;"	d
S_GHOST	include/monsym.h	66;"	d
S_GIANT	include/monsym.h	47;"	d
S_GNOME	include/monsym.h	46;"	d
S_GOLEM	include/monsym.h	67;"	d
S_GREMLIN	include/monsym.h	19;"	d
S_HUMAN	include/monsym.h	65;"	d
S_HUMANOID	include/monsym.h	20;"	d
S_IMP	include/monsym.h	21;"	d
S_JABBERWOCK	include/monsym.h	48;"	d
S_JELLY	include/monsym.h	22;"	d
S_KOBOLD	include/monsym.h	23;"	d
S_KOP	include/monsym.h	49;"	d
S_LDWASHER	include/rm.h	301;"	d
S_LEPRECHAUN	include/monsym.h	24;"	d
S_LICH	include/monsym.h	50;"	d
S_LIGHT	include/monsym.h	37;"	d
S_LIZARD	include/monsym.h	70;"	d
S_LPUDDING	include/rm.h	300;"	d
S_LRING	include/rm.h	302;"	d
S_MIMIC	include/monsym.h	25;"	d
S_MIMIC_DEF	include/monsym.h	75;"	d
S_MUMMY	include/monsym.h	51;"	d
S_NAGA	include/monsym.h	52;"	d
S_NYMPH	include/monsym.h	26;"	d
S_OGRE	include/monsym.h	53;"	d
S_ORC	include/monsym.h	27;"	d
S_PIERCER	include/monsym.h	28;"	d
S_PUDDING	include/monsym.h	54;"	d
S_QUADRUPED	include/monsym.h	29;"	d
S_QUANTMECH	include/monsym.h	55;"	d
S_RODENT	include/monsym.h	30;"	d
S_RUSTMONST	include/monsym.h	56;"	d
S_SNAKE	include/monsym.h	57;"	d
S_SPIDER	include/monsym.h	31;"	d
S_TRAPPER	include/monsym.h	32;"	d
S_TROLL	include/monsym.h	58;"	d
S_UMBER	include/monsym.h	59;"	d
S_UNICORN	include/monsym.h	33;"	d
S_VAMPIRE	include/monsym.h	60;"	d
S_VORTEX	include/monsym.h	34;"	d
S_WORM	include/monsym.h	35;"	d
S_WORM_TAIL	include/monsym.h	74;"	d
S_WRAITH	include/monsym.h	61;"	d
S_XAN	include/monsym.h	36;"	d
S_XORN	include/monsym.h	62;"	d
S_YETI	include/monsym.h	63;"	d
S_ZOMBIE	include/monsym.h	64;"	d
S_ZOUTHERN	include/monsym.h	39;"	d
S_ZRUTY	include/monsym.h	38;"	d
S_air	include/rm.h	150;"	d
S_altar	include/rm.h	137;"	d
S_anti_magic_trap	include/rm.h	176;"	d
S_arrow_trap	include/rm.h	156;"	d
S_bars	include/rm.h	127;"	d
S_bear_trap	include/rm.h	160;"	d
S_blcorn	include/rm.h	115;"	d
S_boomleft	include/rm.h	187;"	d
S_boomright	include/rm.h	188;"	d
S_brcorn	include/rm.h	116;"	d
S_cloud	include/rm.h	151;"	d
S_corr	include/rm.h	131;"	d
S_crwall	include/rm.h	117;"	d
S_darkroom	include/rm.h	130;"	d
S_dart_trap	include/rm.h	157;"	d
S_digbeam	include/rm.h	185;"	d
S_dnladder	include/rm.h	136;"	d
S_dnstair	include/rm.h	134;"	d
S_explode1	include/rm.h	205;"	d
S_explode2	include/rm.h	206;"	d
S_explode3	include/rm.h	207;"	d
S_explode4	include/rm.h	208;"	d
S_explode5	include/rm.h	209;"	d
S_explode6	include/rm.h	210;"	d
S_explode7	include/rm.h	211;"	d
S_explode8	include/rm.h	212;"	d
S_explode9	include/rm.h	213;"	d
S_falling_rock_trap	include/rm.h	158;"	d
S_fire_trap	include/rm.h	165;"	d
S_flashbeam	include/rm.h	186;"	d
S_fountain	include/rm.h	142;"	d
S_grave	include/rm.h	138;"	d
S_hbeam	include/rm.h	182;"	d
S_hcdbridge	include/rm.h	149;"	d
S_hcdoor	include/rm.h	126;"	d
S_hodbridge	include/rm.h	147;"	d
S_hodoor	include/rm.h	124;"	d
S_hole	include/rm.h	168;"	d
S_hwall	include/rm.h	112;"	d
S_ice	include/rm.h	144;"	d
S_land_mine	include/rm.h	161;"	d
S_lava	include/rm.h	145;"	d
S_level_teleporter	include/rm.h	171;"	d
S_litcorr	include/rm.h	132;"	d
S_lslant	include/rm.h	183;"	d
S_magic_portal	include/rm.h	172;"	d
S_magic_trap	include/rm.h	175;"	d
S_ndoor	include/rm.h	122;"	d
S_pit	include/rm.h	166;"	d
S_polymorph_trap	include/rm.h	177;"	d
S_pool	include/rm.h	143;"	d
S_rolling_boulder_trap	include/rm.h	162;"	d
S_room	include/rm.h	129;"	d
S_rslant	include/rm.h	184;"	d
S_rust_trap	include/rm.h	164;"	d
S_sink	include/rm.h	140;"	d
S_sleeping_gas_trap	include/rm.h	163;"	d
S_spiked_pit	include/rm.h	167;"	d
S_squeaky_board	include/rm.h	159;"	d
S_ss1	include/rm.h	189;"	d
S_ss2	include/rm.h	190;"	d
S_ss3	include/rm.h	191;"	d
S_ss4	include/rm.h	192;"	d
S_statue_trap	include/rm.h	174;"	d
S_stone	include/rm.h	110;"	d
S_sw_bc	include/rm.h	202;"	d
S_sw_bl	include/rm.h	201;"	d
S_sw_br	include/rm.h	203;"	d
S_sw_ml	include/rm.h	199;"	d
S_sw_mr	include/rm.h	200;"	d
S_sw_tc	include/rm.h	197;"	d
S_sw_tl	include/rm.h	196;"	d
S_sw_tr	include/rm.h	198;"	d
S_tdwall	include/rm.h	119;"	d
S_teleportation_trap	include/rm.h	170;"	d
S_throne	include/rm.h	139;"	d
S_tlcorn	include/rm.h	113;"	d
S_tlwall	include/rm.h	120;"	d
S_toilet	include/rm.h	141;"	d
S_trap_door	include/rm.h	169;"	d
S_trcorn	include/rm.h	114;"	d
S_tree	include/rm.h	128;"	d
S_trwall	include/rm.h	121;"	d
S_tuwall	include/rm.h	118;"	d
S_upladder	include/rm.h	135;"	d
S_upstair	include/rm.h	133;"	d
S_vbeam	include/rm.h	181;"	d
S_vcdbridge	include/rm.h	148;"	d
S_vcdoor	include/rm.h	125;"	d
S_vodbridge	include/rm.h	146;"	d
S_vodoor	include/rm.h	123;"	d
S_vwall	include/rm.h	111;"	d
S_warn0	include/rm.h	217;"	d
S_warn1	include/rm.h	218;"	d
S_warn2	include/rm.h	219;"	d
S_warn3	include/rm.h	220;"	d
S_warn4	include/rm.h	221;"	d
S_warn5	include/rm.h	222;"	d
S_water	include/rm.h	152;"	d
S_web	include/rm.h	173;"	d
Samurai	src/u_init.c	/^static struct trobj Samurai[] = {$/;"	v	typeref:struct:trobj	file:
Searching	include/youprop.h	164;"	d
See_invisible	include/youprop.h	141;"	d
Shield_off	src/do_wear.c	/^int Shield_off(void) {$/;"	f
Shield_on	src/do_wear.c	/^int Shield_on(void) {$/;"	f
Shirt_off	src/do_wear.c	/^int Shirt_off(void) {$/;"	f
Shirt_on	src/do_wear.c	/^int Shirt_on(void) {$/;"	f
Shk_Your	src/shk.c	/^char * Shk_Your(char *buf, struct obj *obj) {$/;"	f
Shock_resistance	include/youprop.h	51;"	d
Sick	include/youprop.h	106;"	d
Sick_resistance	include/youprop.h	66;"	d
Skill_A	src/u_init.c	/^static const struct def_skill Skill_A[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_B	src/u_init.c	/^static const struct def_skill Skill_B[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_C	src/u_init.c	/^static const struct def_skill Skill_C[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_F	src/u_init.c	/^static const struct def_skill Skill_F[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_H	src/u_init.c	/^static const struct def_skill Skill_H[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_I	src/u_init.c	/^static const struct def_skill Skill_I[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_K	src/u_init.c	/^static const struct def_skill Skill_K[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_Mon	src/u_init.c	/^static const struct def_skill Skill_Mon[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_N	src/u_init.c	/^static const struct def_skill Skill_N[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_P	src/u_init.c	/^static struct def_skill Skill_P[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_R	src/u_init.c	/^static const struct def_skill Skill_R[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_Ran	src/u_init.c	/^static const struct def_skill Skill_Ran[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_S	src/u_init.c	/^static const struct def_skill Skill_S[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_T	src/u_init.c	/^static const struct def_skill Skill_T[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_U	src/u_init.c	/^static const struct def_skill Skill_U[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_V	src/u_init.c	/^static const struct def_skill Skill_V[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_W	src/u_init.c	/^static const struct def_skill Skill_W[] = {$/;"	v	typeref:struct:def_skill	file:
Skill_Y	src/u_init.c	/^static const struct def_skill Skill_Y[] = {$/;"	v	typeref:struct:def_skill	file:
Sleep_resistance	include/youprop.h	41;"	d
Sleeping	include/youprop.h	131;"	d
Slimed	include/youprop.h	111;"	d
Slow_digestion	include/youprop.h	275;"	d
SpinCursor	util/dgn_main.c	30;"	d	file:
SpinCursor	util/lev_main.c	34;"	d	file:
Stealth	include/youprop.h	199;"	d
Stone_resistance	include/youprop.h	81;"	d
Stoned	include/youprop.h	107;"	d
Str_or_Len	include/sp_lev.h	/^} Str_or_Len;$/;"	t	typeref:union:str_or_len
Strangled	include/youprop.h	108;"	d
Stunned	include/youprop.h	90;"	d
Swimming	include/youprop.h	247;"	d
TABSIZ	src/hacklib.c	293;"	d	file:
TABU	include/edog.h	17;"	d
TAINT_AGE	src/mkobj.c	720;"	d	file:
TAMING	include/artifact.h	56;"	d
TAROCCHI_COST	src/gypsy.c	684;"	d	file:
TAROCCHI_HAND	src/gypsy.c	685;"	d	file:
TBR_NO_DOWN	include/dgn_file.h	52;"	d
TBR_NO_UP	include/dgn_file.h	51;"	d
TBR_PORTAL	include/dgn_file.h	53;"	d
TBR_STAIR	include/dgn_file.h	50;"	d
TBUFSZ	include/global.h	192;"	d
TCAP_H	include/tcap.h	8;"	d
TCBUFSIZ	sys/share/tclib.c	13;"	d	file:
TDWALL	include/rm.h	42;"	d
TE	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
TECH_H	include/tech.h	7;"	d
TELEPAT	include/prop.h	34;"	d
TELEPORT	include/prop.h	23;"	d
TELEPORT_CONTROL	include/prop.h	24;"	d
TELEPRT_ID	build-linux/include/lev_comp.h	/^    TELEPRT_ID = 288,$/;"	e	enum:yytokentype
TELEPRT_ID	build-linux/src/lev_yacc.c	/^    TELEPRT_ID = 288,$/;"	e	enum:yytokentype	file:
TELEP_TRAP	include/trap.h	67;"	d
TELL	include/hack.h	17;"	d
TEMPLE	include/mkroom.h	65;"	d
TEMP_LIT	include/vision.h	16;"	d
TERMCAP	sys/share/tclib.c	10;"	d	file:
TERMINFO	include/unixconf.h	51;"	d
TERMLIB	include/tcap.h	10;"	d
TEST_MOVE	include/hack.h	180;"	d
TEST_TRAV	include/hack.h	181;"	d
TEXT_TOMBSTONE	src/rip.c	12;"	d	file:
THRONE	include/rm.h	61;"	d
THROWN_WEAPON	include/hack.h	99;"	d
THROW_USWAPWEP	src/dothrow.c	36;"	d	file:
THROW_UWEP	src/dothrow.c	35;"	d	file:
TI	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
TILESET_MAX_FILENAME	include/decl.h	406;"	d
TILESET_PSEUDO3D	include/decl.h	410;"	d
TILESET_TRANSPARENT	include/decl.h	409;"	d
TIMEOUT	include/prop.h	114;"	d
TIMEOUT_H	include/timeout.h	6;"	d
TIMER_GLOBAL	include/timeout.h	13;"	d
TIMER_LEVEL	include/timeout.h	12;"	d
TIMER_MONSTER	include/timeout.h	15;"	d
TIMER_OBJECT	include/timeout.h	14;"	d
TINSHOP	include/mkroom.h	88;"	d
TLCORNER	include/rm.h	36;"	d
TLWALL	include/rm.h	43;"	d
TOE	include/hack.h	229;"	d
TOILET	include/rm.h	63;"	d
TOOL	src/objects.c	/^	TOOL(BEARTRAP, "beartrap", NULL,     1, 0, 0, 0,   0,200,  60, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(BELL, "bell", NULL,         1, 0, 0, 0,   1, 30,  50, COPPER, HI_COPPER),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(BLINDFOLD, "blindfold", NULL,    1, 0, 0, 0,  50,  2,  20, CLOTH, CLR_BLACK),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(BRASS_LANTERN, "brass lantern", NULL,1, 0, 0, 0,  15, 30,  12, COPPER, CLR_YELLOW),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(BUGLE, "bugle", NULL,        1, 0, 0, 0,   2, 10,  15, COPPER, HI_COPPER),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(CAN_OF_GREASE, "can of grease", NULL,1, 0, 0, 1,  15, 15,  20, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(CREDIT_CARD, "credit card", NULL,  1, 0, 0, 0,  15,  1,  10, PLASTIC, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(CRYSTAL_BALL, "crystal ball", "glass orb", 0, 0, 1, 1,  10,150,  60, GLASS, HI_GLASS),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(DRUM_OF_EARTHQUAKE, "drum of earthquake", "drum",$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(EXPENSIVE_CAMERA, "expensive camera", NULL, 1, 0, 0, 1,  10, 12, 200, PLASTIC, CLR_BLACK),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(FIGURINE, "figurine", NULL,     1, 0, 1, 0,  25, 50,  80, MINERAL, HI_MINERAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(FIRE_HORN, "fire horn", "horn",       0, 0, 1, 1,   1, 18,  50, BONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(FROST_HORN, "frost horn", "horn",      0, 0, 1, 1,   1, 18,  50, BONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(HORN_OF_PLENTY, "horn of plenty", "horn",  0, 0, 1, 1,   1, 18,  50, BONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(LAND_MINE, "land mine",NULL,     1, 0, 0, 0,   0,300, 180, IRON, CLR_RED),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(LEASH, "leash", NULL,        1, 0, 0, 0,  65, 12,  20, LEATHER, HI_LEATHER),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(LEATHER_DRUM, "leather drum", "drum",    0, 0, 0, 0,   2, 25,  25, LEATHER, HI_LEATHER),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(LENSES, "lenses", NULL,	1, 0, 0, 0,   5,  3,  80, GLASS, HI_GLASS),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(LOCK_PICK, "lock pick", NULL,    1, 0, 0, 0,  60,  4,  20, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MAGIC_CANDLE, "magic candle",  "candle", 0, 1, 1, 0,   5,  2, 500, WAX, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MAGIC_FLUTE, "magic flute", "flute",    0, 0, 1, 1,   1,  5,  36, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MAGIC_HARP, "magic harp", "harp",      0, 0, 1, 1,   1, 30,  50, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MAGIC_LAMP, "magic lamp", "lamp",      0, 0, 1, 0,  10, 20,1000, COPPER, CLR_YELLOW),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MAGIC_MARKER, "magic marker", NULL, 1, 0, 1, 1,  15,  2,  50, PLASTIC, CLR_RED),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MAGIC_WHISTLE, "magic whistle", "whistle",0, 0, 1, 0,  25,  3,  10, METAL, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(MIRROR, "mirror", "looking glass", 0, 0, 0, 0,  40, 13,  10, GLASS, HI_SILVER),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(OIL_LAMP, "oil lamp", "lamp",        0, 0, 0, 0,  25, 20,  10, COPPER, CLR_YELLOW),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(SADDLE, "saddle", NULL,       1, 0, 0, 0,   5,100, 150, LEATHER, HI_LEATHER),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(SKELETON_KEY, "skeleton key", "key",     0, 0, 0, 0,  80,  3,  10, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(STETHOSCOPE, "stethoscope", NULL,  1, 0, 0, 0,  25,  4,  75, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(TALLOW_CANDLE, "tallow candle", "candle", 0, 1, 0, 0,  50,  2,   1, WAX, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(TINNING_KIT, "tinning kit", NULL,  1, 0, 0, 1,  15, 75,  30, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(TIN_OPENER, "tin opener", NULL,   1, 0, 0, 0,  25,  4,  30, IRON, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(TIN_WHISTLE, "tin whistle", "whistle",  0, 0, 0, 0,  63,  3,  10, METAL, HI_METAL),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(TOOLED_HORN, "tooled horn", "horn",     0, 0, 0, 0,   2, 18,  15, BONE, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(TOWEL, "towel", NULL,        1, 0, 0, 0,  50,  2,  50, CLOTH, CLR_MAGENTA),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(WAX_CANDLE, "wax candle", "candle",    0, 1, 0, 0,  40,  2,   2, WAX, CLR_WHITE),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(WOODEN_FLUTE, "wooden flute", "flute",   0, 0, 0, 0,   2,  5,  12, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	/^	TOOL(WOODEN_HARP, "wooden harp", "harp",     0, 0, 0, 0,   2, 30,  50, WOOD, HI_WOOD),$/;"	e	enum:__anon12	file:
TOOL	src/objects.c	702;"	d	file:
TOOL	src/objects.c	847;"	d	file:
TOOLSHOP	include/mkroom.h	86;"	d
TOOL_CLASS	include/objclass.h	135;"	d
TOOL_SYM	include/objclass.h	170;"	d
TOP	src/sp_lev.c	50;"	d	file:
TOP_OR_BOT	build-linux/include/lev_comp.h	/^    TOP_OR_BOT = 313,$/;"	e	enum:yytokentype
TOP_OR_BOT	build-linux/src/lev_yacc.c	/^    TOP_OR_BOT = 313,$/;"	e	enum:yytokentype	file:
TOWN	include/dgn_file.h	58;"	d
TRADITIONAL_GLYPHMAP	include/ntconf.h	13;"	d
TRAPDOOR	include/trap.h	66;"	d
TRAPNUM	include/trap.h	75;"	d
TRAP_H	include/trap.h	8;"	d
TRAP_ID	build-linux/include/lev_comp.h	/^    TRAP_ID = 271,$/;"	e	enum:yytokentype
TRAP_ID	build-linux/src/lev_yacc.c	/^    TRAP_ID = 271,$/;"	e	enum:yytokentype	file:
TRCORNER	include/rm.h	37;"	d
TREE	include/rm.h	46;"	d
TREE_LOOTED	include/rm.h	275;"	d
TREE_SWARM	include/rm.h	276;"	d
TRICKED	include/hack.h	80;"	d
TROLL_REVIVE_CHANCE	src/mkobj.c	721;"	d	file:
TROUBLEPREFIX	include/decl.h	438;"	d
TROUBLE_BLIND	src/pray.c	93;"	d	file:
TROUBLE_COLLAPSING	src/pray.c	83;"	d	file:
TROUBLE_CONFUSED	src/pray.c	98;"	d	file:
TROUBLE_CURSED_BLINDFOLD	src/pray.c	87;"	d	file:
TROUBLE_CURSED_ITEMS	src/pray.c	91;"	d	file:
TROUBLE_CURSED_LEVITATION	src/pray.c	85;"	d	file:
TROUBLE_FUMBLING	src/pray.c	90;"	d	file:
TROUBLE_HALLUCINATION	src/pray.c	99;"	d	file:
TROUBLE_HIT	src/pray.c	81;"	d	file:
TROUBLE_HUNGRY	src/pray.c	96;"	d	file:
TROUBLE_LAVA	src/pray.c	78;"	d	file:
TROUBLE_LOW_ENERGY	src/pray.c	100;"	d	file:
TROUBLE_LYCANTHROPE	src/pray.c	82;"	d	file:
TROUBLE_POISONED	src/pray.c	94;"	d	file:
TROUBLE_PUNISHED	src/pray.c	89;"	d	file:
TROUBLE_SADDLE	src/pray.c	92;"	d	file:
TROUBLE_SICK	src/pray.c	79;"	d	file:
TROUBLE_SLIMED	src/pray.c	76;"	d	file:
TROUBLE_STARVING	src/pray.c	80;"	d	file:
TROUBLE_STONED	src/pray.c	75;"	d	file:
TROUBLE_STRANGLED	src/pray.c	77;"	d	file:
TROUBLE_STUCK_IN_WALL	src/pray.c	84;"	d	file:
TROUBLE_STUNNED	src/pray.c	97;"	d	file:
TROUBLE_UNUSEABLE_HANDS	src/pray.c	86;"	d	file:
TROUBLE_WOUNDED_LEGS	src/pray.c	95;"	d	file:
TRWALL	include/rm.h	44;"	d
TTAB	src/timeout.c	1684;"	d	file:
TTAB	src/timeout.c	1686;"	d	file:
TTAB	src/timeout.c	1703;"	d	file:
TTFIELDS	src/topten.c	106;"	d	file:
TTFIELDS	src/topten.c	116;"	d	file:
TTSZ	src/eat.c	157;"	d	file:
TTYInitialized	sys/winnt/nttty.c	/^static int TTYInitialized = false;$/;"	v	file:
TTY_GRAPHICS	include/config.h	36;"	d
TT_BEARTRAP	include/you.h	252;"	d
TT_INFLOOR	include/you.h	256;"	d
TT_LAVA	include/you.h	255;"	d
TT_PIT	include/you.h	253;"	d
TT_WEB	include/you.h	254;"	d
TURNED_SLIME	include/hack.h	77;"	d
TUWALL	include/rm.h	41;"	d
TYPE_0	sys/share/random.c	90;"	d	file:
TYPE_1	sys/share/random.c	95;"	d	file:
TYPE_2	sys/share/random.c	100;"	d	file:
TYPE_3	sys/share/random.c	105;"	d	file:
TYPE_4	sys/share/random.c	110;"	d	file:
T_BERSERK	include/tech.h	50;"	d
T_BLESSING	include/tech.h	63;"	d
T_BLINK	include/tech.h	78;"	d
T_BLITZ	include/tech.h	84;"	d
T_CALM_STEED	include/tech.h	59;"	d
T_CHI_HEALING	include/tech.h	81;"	d
T_CHI_STRIKE	include/tech.h	79;"	d
T_CRIT_STRIKE	include/tech.h	67;"	d
T_CUTTHROAT	include/tech.h	62;"	d
T_DARTS	src/u_init.c	198;"	d	file:
T_DASH	include/tech.h	87;"	d
T_DAZZLE	include/tech.h	83;"	d
T_DISARM	include/tech.h	82;"	d
T_DRAW_BLOOD	include/tech.h	90;"	d
T_DRAW_ENERGY	include/tech.h	80;"	d
T_EVISCERATE	include/tech.h	57;"	d
T_E_FIST	include/tech.h	64;"	d
T_FLURRY	include/tech.h	55;"	d
T_G_SLAM	include/tech.h	86;"	d
T_HEAL_HANDS	include/tech.h	58;"	d
T_KIII	include/tech.h	51;"	d
T_LIQUID_LEAP	include/tech.h	66;"	d
T_LOOTED	include/rm.h	270;"	d
T_POWER_SURGE	include/tech.h	88;"	d
T_PRACTICE	include/tech.h	56;"	d
T_PRIMAL_ROAR	include/tech.h	65;"	d
T_PUMMEL	include/tech.h	85;"	d
T_RAGE	include/tech.h	77;"	d
T_RAISE_ZOMBIES	include/tech.h	71;"	d
T_REINFORCE	include/tech.h	54;"	d
T_RESEARCH	include/tech.h	52;"	d
T_REVIVE	include/tech.h	72;"	d
T_SIGIL_CONTROL	include/tech.h	68;"	d
T_SIGIL_DISCHARGE	include/tech.h	70;"	d
T_SIGIL_TEMPEST	include/tech.h	69;"	d
T_SPIRIT_BOMB	include/tech.h	89;"	d
T_SURGERY	include/tech.h	53;"	d
T_TINKER	include/tech.h	76;"	d
T_TURN_UNDEAD	include/tech.h	60;"	d
T_VANISH	include/tech.h	61;"	d
T_WARD_COLD	include/tech.h	74;"	d
T_WARD_ELEC	include/tech.h	75;"	d
T_WARD_FIRE	include/tech.h	73;"	d
T_d	src/display.c	2026;"	d	file:
T_hwall	src/display.c	2041;"	d	file:
T_l	src/display.c	2027;"	d	file:
T_r	src/display.c	2029;"	d	file:
T_stone	src/display.c	2038;"	d	file:
T_tdwall	src/display.c	2042;"	d	file:
T_tlcorn	src/display.c	2039;"	d	file:
T_trcorn	src/display.c	2040;"	d	file:
T_u	src/display.c	2028;"	d	file:
Teleport_control	include/youprop.h	222;"	d
Teleportation	include/youprop.h	217;"	d
Tgetstr	win/tty/termcap.c	14;"	d	file:
The	src/objnam.c	/^char * The (const char *str) {$/;"	f
Tinopener	src/u_init.c	/^static struct trobj Tinopener[] = {$/;"	v	typeref:struct:trobj	file:
Tobjnam	src/objnam.c	/^char * Tobjnam (struct obj *otmp, const char *verb) {$/;"	f
Torch	src/u_init.c	/^static struct trobj Torch[] = {$/;"	v	typeref:struct:trobj	file:
Tourist	src/u_init.c	/^static struct trobj Tourist[] = {$/;"	v	typeref:struct:trobj	file:
Towel	src/u_init.c	/^static struct trobj Towel[] = {$/;"	v	typeref:struct:trobj	file:
UAC_LIM	src/do_wear.c	1639;"	d	file:
UAC_MIN	src/do_wear.c	1638;"	d	file:
UINT16_MAX	build-linux/src/dgn_lex.c	81;"	d	file:
UINT16_MAX	build-linux/src/lev_lex.c	81;"	d	file:
UINT32_MAX	build-linux/src/dgn_lex.c	84;"	d	file:
UINT32_MAX	build-linux/src/lev_lex.c	84;"	d	file:
UINT8_MAX	build-linux/src/dgn_lex.c	78;"	d	file:
UINT8_MAX	build-linux/src/lev_lex.c	78;"	d	file:
UNCHANGING	include/prop.h	70;"	d
UNCTRL	src/cmd.c	2258;"	d	file:
UNDEF	include/edog.h	16;"	d
UNDEFINED	include/wincurs.h	/^	UNDEFINED$/;"	e	enum:orient_type
UNDEFINED	src/objnam.c	1846;"	d	file:
UNDEF_BLESS	src/u_init.c	22;"	d	file:
UNDEF_SPE	src/u_init.c	21;"	d	file:
UNDEF_TYP	src/u_init.c	20;"	d	file:
UNENCUMBERED	include/hack.h	26;"	d
UNIQUESHOP	include/mkroom.h	90;"	d
UNIX	include/config.h	17;"	d
UNIX	include/config1.h	10;"	d
UNIX	include/config1.h	26;"	d
UNIXCONF_H	include/unixconf.h	7;"	d
UNLOCKDOOR	include/mfndpos.h	15;"	d
UNMETA	src/cmd.c	2250;"	d	file:
UNPAID_TYPES	include/hack.h	150;"	d
UNPOLY_MON	include/timeout.h	32;"	d
UNPOLY_OBJ	include/timeout.h	34;"	d
UNTRAP	include/artifact.h	59;"	d
UP	include/wincurs.h	/^	UP,$/;"	e	enum:orient_type
UP	src/extralev.c	18;"	d	file:
UP	sys/share/tclib.c	/^char *BC, *UP;$/;"	v
UP	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
UP_OR_DOWN	build-linux/include/dgn_comp.h	/^    UP_OR_DOWN = 266,$/;"	e	enum:yytokentype
UP_OR_DOWN	build-linux/include/lev_comp.h	/^    UP_OR_DOWN = 315,$/;"	e	enum:yytokentype
UP_OR_DOWN	build-linux/src/dgn_yacc.c	/^    UP_OR_DOWN = 266,$/;"	e	enum:yytokentype	file:
UP_OR_DOWN	build-linux/src/lev_yacc.c	/^    UP_OR_DOWN = 315,$/;"	e	enum:yytokentype	file:
URETREATING	src/mthrowu.c	9;"	d	file:
USER_DUNGEONCOLOR	include/config.h	252;"	d
USES_CORPSENM	src/zap.c	1353;"	d	file:
USES_CORPSENM	src/zap.c	1356;"	d	file:
USE_FCNTL	include/unixconf.h	182;"	d
USE_INVLET	include/hack.h	142;"	d
USE_REGEX_MATCH	include/config.h	202;"	d
USE_STDARG	include/ntconf.h	82;"	d
USE_WIN_IOCTL	sys/share/ioctl.c	20;"	d	file:
USE_XPM	include/config.h	62;"	d
USG	sys/share/unixtty.c	20;"	d	file:
USWAPWEP_ROLL	src/uhitm.c	33;"	d	file:
UTF8COMPAT_GRAPHICS	include/rm.h	249;"	d
UTF8_GRAPHICS	include/rm.h	248;"	d
UTSZ	src/track.c	8;"	d	file:
UWEP_ROLL	src/uhitm.c	32;"	d	file:
U_ARMOR	src/u_init.c	214;"	d	file:
U_MINOR	src/u_init.c	210;"	d	file:
U_MISC	src/u_init.c	213;"	d	file:
U_RANGE	src/u_init.c	212;"	d	file:
Unblind_telepat	include/youprop.h	148;"	d
Unchanging	include/youprop.h	316;"	d
UndeadSlayer	src/u_init.c	/^static struct trobj UndeadSlayer[] = {$/;"	v	typeref:struct:trobj	file:
Undead_warning	include/youprop.h	160;"	d
Underwater	include/youprop.h	261;"	d
Upolyd	include/you.h	379;"	d
V7	sys/share/unixtty.c	18;"	d	file:
VAULT	include/mkroom.h	59;"	d
VAULT_H	include/vault.h	6;"	d
VA_ARGS	include/system.h	34;"	d
VA_END	include/system.h	36;"	d
VA_NEXT	include/system.h	33;"	d
VA_START	include/system.h	35;"	d
VE	win/tty/termcap.c	/^static char *VS, *VE;$/;"	v	file:
VEGGY	include/objclass.h	47;"	d
VENOM_CLASS	include/objclass.h	146;"	d
VENOM_SYM	include/objclass.h	181;"	d
VERBOSE_TIMER	src/timeout.c	1678;"	d	file:
VERSION_MAJOR	include/patchlevel.h	11;"	d
VERSION_MINOR	include/patchlevel.h	12;"	d
VERSION_NUMBER	include/patchlevel.h	26;"	d
VERSION_SANITY	include/patchlevel.h	32;"	d
VERY_FAST	include/permonst.h	71;"	d
VERY_SLOW	include/permonst.h	67;"	d
VIA_DIALOG	include/winprocs.h	195;"	d
VIA_PROMPTS	include/winprocs.h	196;"	d
VIDEOSHADES	include/unixconf.h	111;"	d
VISION_H	include/vision.h	6;"	d
VISITED	include/dungeon.h	168;"	d
VIS_EFFECTS	include/hack.h	192;"	d
VOIDYYPUT	build-linux/src/dgn_lex.c	603;"	d	file:
VOIDYYPUT	build-linux/src/dgn_lex.c	607;"	d	file:
VOIDYYPUT	build-linux/src/dgn_lex.c	612;"	d	file:
VOIDYYPUT	build-linux/src/dgn_lex.c	616;"	d	file:
VOIDYYPUT	build-linux/src/lev_lex.c	903;"	d	file:
VOIDYYPUT	build-linux/src/lev_lex.c	907;"	d	file:
VOIDYYPUT	build-linux/src/lev_lex.c	912;"	d	file:
VOIDYYPUT	build-linux/src/lev_lex.c	916;"	d	file:
VOMITING	include/prop.h	56;"	d
VS	win/tty/termcap.c	/^static char *VS, *VE;$/;"	v	file:
VWALL	include/rm.h	34;"	d
Valkyrie	src/u_init.c	/^static struct trobj Valkyrie[] = {$/;"	v	typeref:struct:trobj	file:
Very_fast	include/youprop.h	321;"	d
Vomiting	include/youprop.h	109;"	d
WALLIFY_ID	build-linux/include/lev_comp.h	/^    WALLIFY_ID = 275,$/;"	e	enum:yytokentype
WALLIFY_ID	build-linux/src/lev_yacc.c	/^    WALLIFY_ID = 275,$/;"	e	enum:yytokentype	file:
WAND	src/objects.c	/^	WAND(CANCELLATION, "cancellation",   "platinum", 45, 200, 1, IMMEDIATE, PLATINUM, CLR_WHITE),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(COLD, "cold",           "short",    30, 175, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(CREATE_HORDE, "create horde",   "black",     5, 300, 1, NODIR,     PLASTIC,  CLR_BLACK),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(CREATE_MONSTER, "create monster", "maple",    35, 200, 1, NODIR,     WOOD,     HI_WOOD),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(DEATH, "death",          "long",      5, 500, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(DIGGING, "digging",        "iron",     50, 150, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(DRAINING, "draining",       "ceramic",  15, 175, 1, IMMEDIATE, MINERAL,  HI_MINERAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(ENLIGHTENMENT, "enlightenment",  "crystal",  30, 150, 1, NODIR,     GLASS,    HI_GLASS),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(EXTRA_HEALING, "extra healing",  "bronze",   30, 300, 1, IMMEDIATE, COPPER,   CLR_YELLOW),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(FEAR, "fear",           "rusty",    25, 200, 1, IMMEDIATE, IRON,     CLR_RED),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(FIRE, "fire",           "hexagonal",25, 175, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(FIREBALL, "fireball",       "octagonal", 5, 300, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(HEALING, "healing",        "bamboo",   60, 150, 1, IMMEDIATE, WOOD,     CLR_YELLOW),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(LIGHT, "light",          "glass",    50, 100, 1, NODIR,     GLASS,    HI_GLASS),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(LIGHTNING, "lightning",      "curved",   20, 175, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(LOCKING, "locking",        "aluminum", 25, 150, 1, IMMEDIATE, METAL,    HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(MAGIC_MISSILE, "magic missile",  "steel",    50, 150, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(MAKE_INVISIBLE, "make invisible", "marble",   45, 150, 1, IMMEDIATE, MINERAL,  HI_MINERAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(NOTHING, "nothing",        "oak",      20, 100, 0, IMMEDIATE, WOOD,     HI_WOOD),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(OPENING, "opening",        "zinc",     25, 150, 1, IMMEDIATE, METAL,    HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(POLYMORPH, "polymorph",      "silver",   45, 200, 1, IMMEDIATE, SILVER,   HI_SILVER),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(PROBING, "probing",        "uranium",  30, 150, 1, IMMEDIATE, METAL,    HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(SECRET_DOOR_DETECTION, "secret door detection", "balsa",$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(SLEEP, "sleep",          "runed",    50, 175, 1, RAY,       IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(SLOW_MONSTER, "slow monster",   "tin",      45, 150, 1, IMMEDIATE, METAL,    HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(SPEED_MONSTER, "speed monster",  "brass",    45, 150, 1, IMMEDIATE, COPPER,   HI_COPPER),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(STRIKING, "striking",       "ebony",    65, 150, 1, IMMEDIATE, WOOD,     HI_WOOD),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(TELEPORTATION, "teleportation",  "iridium",  45, 200, 1, IMMEDIATE, METAL,    CLR_BRIGHT_CYAN),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(UNDEAD_TURNING, "undead turning", "copper",   45, 150, 1, IMMEDIATE, COPPER,   HI_COPPER),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(WISHING, "wishing",        "pine",      5, 500, 1, NODIR,     WOOD,     HI_WOOD),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(_OBJECT_DUMMY11, NULL,        "forked",    0, 150, 1, 0,         WOOD,     HI_WOOD),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(_OBJECT_DUMMY12, NULL,        "spiked",    0, 150, 1, 0,         IRON,     HI_METAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	/^	WAND(_OBJECT_DUMMY13, NULL,        "jeweled",   0, 150, 1, 0,         IRON,     HI_MINERAL),$/;"	e	enum:__anon12	file:
WAND	src/objects.c	1093;"	d	file:
WAND	src/objects.c	1133;"	d	file:
WANDSHOP	include/mkroom.h	85;"	d
WAND_CLASS	include/objclass.h	140;"	d
WAND_SYM	include/objclass.h	175;"	d
WARNING	include/prop.h	33;"	d
WARN_OF_MON	include/prop.h	74;"	d
WARN_UNDEAD	include/prop.h	63;"	d
WATER	include/rm.h	51;"	d
WAX	include/objclass.h	46;"	d
WC2_FULLSCREEN	include/winprocs.h	179;"	d
WC2_GUICOLOR	include/winprocs.h	186;"	d
WC2_PETATTR	include/winprocs.h	185;"	d
WC2_SOFTKEYBOARD	include/winprocs.h	180;"	d
WC2_TERM_COLS	include/winprocs.h	182;"	d
WC2_TERM_ROWS	include/winprocs.h	183;"	d
WC2_WINDOWBORDERS	include/winprocs.h	184;"	d
WC2_WRAPTEXT	include/winprocs.h	181;"	d
WC_ALIGN_MESSAGE	include/winprocs.h	155;"	d
WC_ALIGN_STATUS	include/winprocs.h	156;"	d
WC_ASCII_MAP	include/winprocs.h	148;"	d
WC_COLOR	include/winprocs.h	146;"	d
WC_FONTSIZ_MAP	include/winprocs.h	163;"	d
WC_FONTSIZ_MENU	include/winprocs.h	166;"	d
WC_FONTSIZ_MESSAGE	include/winprocs.h	164;"	d
WC_FONTSIZ_STATUS	include/winprocs.h	165;"	d
WC_FONTSIZ_TEXT	include/winprocs.h	167;"	d
WC_FONT_MAP	include/winprocs.h	158;"	d
WC_FONT_MENU	include/winprocs.h	161;"	d
WC_FONT_MESSAGE	include/winprocs.h	159;"	d
WC_FONT_STATUS	include/winprocs.h	160;"	d
WC_FONT_TEXT	include/winprocs.h	162;"	d
WC_HILITE_PET	include/winprocs.h	147;"	d
WC_INVERSE	include/winprocs.h	154;"	d
WC_MAP_MODE	include/winprocs.h	173;"	d
WC_MOUSE_SUPPORT	include/winprocs.h	176;"	d
WC_PERM_INVENT	include/winprocs.h	172;"	d
WC_PLAYER_SELECTION	include/winprocs.h	175;"	d
WC_POPUP_DIALOG	include/winprocs.h	170;"	d
WC_PRELOAD_TILES	include/winprocs.h	150;"	d
WC_SCROLL_AMOUNT	include/winprocs.h	171;"	d
WC_SCROLL_MARGIN	include/winprocs.h	168;"	d
WC_SPLASH_SCREEN	include/winprocs.h	169;"	d
WC_TILED_MAP	include/winprocs.h	149;"	d
WC_TILE_FILE	include/winprocs.h	153;"	d
WC_TILE_HEIGHT	include/winprocs.h	152;"	d
WC_TILE_WIDTH	include/winprocs.h	151;"	d
WC_VARY_MSGCOUNT	include/winprocs.h	157;"	d
WC_WINDOWCOLORS	include/winprocs.h	174;"	d
WEAK	src/apply.c	708;"	d	file:
WEAK	src/attrib.c	368;"	d	file:
WEAK	src/eat.c	51;"	d	file:
WEAK	src/pray.c	131;"	d	file:
WEAPON	src/objects.c	/^	WEAPON(AKLYS, "aklys", "thonged club",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ATHAME, "athame", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(AXE, "axe", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BARDICHE, "bardiche", "long poleaxe",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BASEBALL_BAT, "baseball bat", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BATTLE_AXE, "battle-axe", "double-headed axe", \/* "double-bitted" ? *\/$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BEC_DE_CORBIN, "bec de corbin", "beaked polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BILL_GUISARME, "bill-guisarme", "hooked polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BOOMERANG, "boomerang", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BROADSWORD, "broadsword", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(BULLWHIP, "bullwhip", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(CLUB, "club", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(CRYSKNIFE, "crysknife", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DAGGER, "dagger", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DARK_ELVEN_DAGGER, "dark elven dagger", "black runed dagger",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DARK_ELVEN_SHORT_SWORD, "dark elven short sword", "black runed short sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DART, "dart", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DWARVISH_MATTOCK, "dwarvish mattock", "broad pick",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DWARVISH_SHORT_SWORD, "dwarvish short sword", "broad short sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(DWARVISH_SPEAR, "dwarvish spear", "stout spear",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ELVEN_BROADSWORD, "elven broadsword", "runed broadsword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ELVEN_DAGGER, "elven dagger", "runed dagger",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ELVEN_SHORT_SWORD, "elven short sword", "runed short sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ELVEN_SPEAR, "elven spear", "runed spear",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(FAUCHARD, "fauchard", "pole sickle",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(FLAIL, "flail", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(FLY_SWATTER, "fly swatter", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(GLAIVE, "glaive", "single-edged polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(GREAT_DAGGER, "great dagger", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(GUISARME, "guisarme", "pruning hook",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(HALBERD, "halberd", "angled poleaxe",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(HEAVY_HAMMER, "heavy hammer", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(JAVELIN, "javelin", "throwing spear",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(KATANA, "katana", "samurai sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(KNIFE, "knife", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(LANCE, "lance", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(LONG_SWORD, "long sword", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(LUCERN_HAMMER, "lucern hammer", "pronged polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(MACE, "mace", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(MORNING_STAR, "morning star", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ORCISH_DAGGER, "orcish dagger", "crude dagger",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ORCISH_SHORT_SWORD, "orcish short sword", "crude short sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(ORCISH_SPEAR, "orcish spear", "crude spear",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(PARTISAN, "partisan", "vulgar polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(QUARTERSTAFF, "quarterstaff", "staff",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(RANSEUR, "ranseur", "hilted polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(RAPIER, "rapier", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(RUBBER_HOSE, "rubber hose", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(RUNESWORD, "runesword", "runed broadsword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SCALPEL, "scalpel", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SCIMITAR, "scimitar", "curved sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SHORT_SWORD, "short sword", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SHURIKEN, "shuriken", "throwing star",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SILVER_DAGGER, "silver dagger", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SILVER_LONG_SWORD, "silver long sword", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SILVER_MACE, "silver mace", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SILVER_SABER, "silver saber", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SILVER_SHORT_SWORD, "silver short sword", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SILVER_SPEAR, "silver spear", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SPEAR, "spear", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(SPETUM, "spetum", "forked polearm",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(STILETTO, "stiletto", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(TRIDENT, "trident", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(TSURUGI, "tsurugi", "long samurai sword",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(TWO_HANDED_SWORD, "two-handed sword", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(VOULGE, "voulge", "pole cleaver",$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(WAR_HAMMER, "war hammer", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(WOODEN_STAKE, "wooden stake", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	/^	WEAPON(WORM_TOOTH, "worm tooth", NULL,$/;"	e	enum:__anon12	file:
WEAPON	src/objects.c	381;"	d	file:
WEAPON	src/objects.c	49;"	d	file:
WEAPONSHOP	include/mkroom.h	82;"	d
WEAPON_CLASS	include/objclass.h	131;"	d
WEAPON_SYM	include/objclass.h	166;"	d
WEB	include/trap.h	70;"	d
WEPTOOL	src/objects.c	/^	WEPTOOL(BLUE_LIGHTSABER, "blue lightsaber",  "lightsaber",$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(FISHING_POLE, "fishing pole", NULL,$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(GRAPPLING_HOOK, "grappling hook", "iron hook",$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(GREEN_LIGHTSABER, "green lightsaber", "lightsaber",$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(PICK_AXE, "pick-axe", NULL,$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(RED_DOUBLE_LIGHTSABER, "red double lightsaber",  "double lightsaber",$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(RED_LIGHTSABER, "red lightsaber",  "lightsaber",$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(SPOON, "spoon", NULL,$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	/^	WEPTOOL(UNICORN_HORN, "unicorn horn", NULL,$/;"	e	enum:__anon12	file:
WEPTOOL	src/objects.c	712;"	d	file:
WEPTOOL	src/objects.c	849;"	d	file:
WET	src/sp_lev.c	159;"	d	file:
WHACK	include/objclass.h	42;"	d
WIDTH	src/mkmap.c	9;"	d	file:
WIN32	include/config1.h	22;"	d
WIN32	sys/share/uudecode.c	48;"	d	file:
WIN32_LEAN_AND_MEAN	sys/winnt/win32api.h	18;"	d
WINCURS_H	include/wincurs.h	2;"	d
WINDOW_STRUCTS	include/wintty.h	9;"	d
WINPROCS_H	include/winprocs.h	6;"	d
WINPROXY_H	include/winproxy.h	6;"	d
WINTTY_H	include/wintty.h	6;"	d
WINTYPELEN	src/options.c	12;"	d	file:
WINTYPE_H	include/wintype.h	6;"	d
WIN_CANCELLED	include/wintty.h	48;"	d
WIN_ERR	include/wintype.h	55;"	d
WIN_INVEN	src/decl.c	/^winid WIN_MAP = WIN_ERR, WIN_INVEN = WIN_ERR;$/;"	v
WIN_MAP	src/decl.c	/^winid WIN_MAP = WIN_ERR, WIN_INVEN = WIN_ERR;$/;"	v
WIN_MESSAGE	src/decl.c	/^winid WIN_MESSAGE = WIN_ERR, WIN_STATUS = WIN_ERR;$/;"	v
WIN_STATUS	src/decl.c	/^winid WIN_MESSAGE = WIN_ERR, WIN_STATUS = WIN_ERR;$/;"	v
WIN_STOP	include/wintty.h	49;"	d
WIZARD	include/config.h	89;"	d
WIZHLP_SLOT	src/pager.c	/^	WIZHLP_SLOT,$/;"	e	enum:__anon16	file:
WIZKIT_MAX	src/files.c	92;"	d	file:
WM_C_INNER	include/rm.h	411;"	d
WM_C_OUTER	include/rm.h	410;"	d
WM_MASK	include/rm.h	325;"	d
WM_T_BL	include/rm.h	413;"	d
WM_T_BR	include/rm.h	414;"	d
WM_T_LONG	include/rm.h	412;"	d
WM_W_BOTTOM	include/rm.h	408;"	d
WM_W_LEFT	include/rm.h	405;"	d
WM_W_RIGHT	include/rm.h	406;"	d
WM_W_TOP	include/rm.h	407;"	d
WM_X_BL	include/rm.h	418;"	d
WM_X_BLTR	include/rm.h	421;"	d
WM_X_BR	include/rm.h	419;"	d
WM_X_TL	include/rm.h	416;"	d
WM_X_TLBR	include/rm.h	420;"	d
WM_X_TR	include/rm.h	417;"	d
WOOD	include/objclass.h	52;"	d
WORN_AMUL	include/prop.h	136;"	d
WORN_ARMOR	include/prop.h	130;"	d
WORN_BLINDF	include/prop.h	137;"	d
WORN_BOOTS	include/prop.h	135;"	d
WORN_CLOAK	include/prop.h	131;"	d
WORN_GLOVES	include/prop.h	134;"	d
WORN_HELMET	include/prop.h	132;"	d
WORN_SHIELD	include/prop.h	133;"	d
WORN_SHIRT	include/prop.h	138;"	d
WORN_TYPES	include/hack.h	152;"	d
WOUNDED_LEGS	include/prop.h	41;"	d
WP_BULLET	include/objclass.h	111;"	d
WP_GENERIC	include/objclass.h	110;"	d
WP_GRENADE	include/objclass.h	114;"	d
WP_MODE_AUTO	include/obj.h	47;"	d
WP_MODE_BURST	include/obj.h	48;"	d
WP_MODE_SINGLE	include/obj.h	49;"	d
WP_ROCKET	include/objclass.h	113;"	d
WP_SHELL	include/objclass.h	112;"	d
WRBMODE	include/dlb.h	126;"	d
WRBMODE	include/dlb.h	129;"	d
WRITE_SAVE	include/lev.h	11;"	d
WRTMODE	include/dlb.h	120;"	d
WRTMODE	include/dlb.h	122;"	d
WT_DRAGON	src/monst.c	26;"	d	file:
WT_ELF	src/monst.c	25;"	d	file:
WT_HUMAN	include/permonst.h	33;"	d
WWALKING	include/prop.h	48;"	d
W_AMUL	include/prop.h	99;"	d
W_ANY	include/sp_lev.h	13;"	d
W_ARM	include/prop.h	84;"	d
W_ARMC	include/prop.h	85;"	d
W_ARMF	include/prop.h	89;"	d
W_ARMG	include/prop.h	88;"	d
W_ARMH	include/prop.h	86;"	d
W_ARMOR	include/prop.h	91;"	d
W_ARMS	include/prop.h	87;"	d
W_ARMU	include/prop.h	90;"	d
W_ART	include/prop.h	96;"	d
W_ARTI	include/prop.h	97;"	d
W_BALL	include/prop.h	105;"	d
W_BOOK1	src/u_init.c	237;"	d	file:
W_BOOK2	src/u_init.c	238;"	d	file:
W_BOOK3	src/u_init.c	239;"	d	file:
W_BOOK4	src/u_init.c	240;"	d	file:
W_CHAIN	include/prop.h	106;"	d
W_EAST	include/sp_lev.h	11;"	d
W_MULTEND	src/u_init.c	236;"	d	file:
W_MULTSTART	src/u_init.c	235;"	d	file:
W_NONDIGGABLE	include/rm.h	326;"	d
W_NONPASSWALL	include/rm.h	327;"	d
W_NORTH	include/sp_lev.h	9;"	d
W_QUIVER	include/prop.h	94;"	d
W_RING	include/prop.h	102;"	d
W_RINGL	include/prop.h	100;"	d
W_RINGR	include/prop.h	101;"	d
W_SADDLE	include/prop.h	104;"	d
W_SOUTH	include/sp_lev.h	10;"	d
W_SWAPWEP	include/prop.h	95;"	d
W_TOOL	include/prop.h	103;"	d
W_WEP	include/prop.h	93;"	d
W_WEST	include/sp_lev.h	12;"	d
Warn_of_mon	include/youprop.h	157;"	d
Warning	include/youprop.h	152;"	d
WinDesc	include/wintty.h	/^struct WinDesc {$/;"	s
Wishing	src/u_init.c	/^static struct trobj Wishing[] = {$/;"	v	typeref:struct:trobj	file:
Wizard	src/u_init.c	/^static struct trobj Wizard[] = {$/;"	v	typeref:struct:trobj	file:
Wounded_legs	include/youprop.h	127;"	d
Write	util/dlb_main.c	/^static void Write(int out, char *buf, long len) {$/;"	f	file:
Write	util/lev_main.c	58;"	d	file:
Wwalking	include/youprop.h	240;"	d
XD	win/tty/termcap.c	/^static char *HO, *CL, *CE, *UP, *XD, *BC, *SO, *SE, *TI, *TE;$/;"	v	file:
XLIM	src/rect.c	17;"	d	file:
XLIM	src/sp_lev.c	55;"	d	file:
XLOGFILE	include/config.h	92;"	d
X_GOAL	src/dungeon.c	13;"	d	file:
X_LOCATE	src/dungeon.c	12;"	d	file:
X_START	src/dungeon.c	11;"	d	file:
Xtra_food	src/u_init.c	/^static struct trobj Xtra_food[] = {$/;"	v	typeref:struct:trobj	file:
YEAR_LINE	src/rip.c	66;"	d	file:
YLIM	src/rect.c	18;"	d	file:
YLIM	src/sp_lev.c	56;"	d	file:
YOUPROP_H	include/youprop.h	6;"	d
YOU_H	include/you.h	6;"	d
YYABORT	build-linux/src/dgn_yacc.c	664;"	d	file:
YYABORT	build-linux/src/lev_yacc.c	1135;"	d	file:
YYACCEPT	build-linux/src/dgn_yacc.c	663;"	d	file:
YYACCEPT	build-linux/src/lev_yacc.c	1134;"	d	file:
YYBACKUP	build-linux/src/dgn_yacc.c	670;"	d	file:
YYBACKUP	build-linux/src/lev_yacc.c	1141;"	d	file:
YYBISON	build-linux/src/dgn_yacc.c	48;"	d	file:
YYBISON	build-linux/src/lev_yacc.c	48;"	d	file:
YYBISON_VERSION	build-linux/src/dgn_yacc.c	51;"	d	file:
YYBISON_VERSION	build-linux/src/lev_yacc.c	51;"	d	file:
YYCASE_	build-linux/src/dgn_yacc.c	1016;"	d	file:
YYCASE_	build-linux/src/dgn_yacc.c	1027;"	d	file:
YYCASE_	build-linux/src/lev_yacc.c	1487;"	d	file:
YYCASE_	build-linux/src/lev_yacc.c	1498;"	d	file:
YYCOPY	build-linux/src/dgn_yacc.c	416;"	d	file:
YYCOPY	build-linux/src/dgn_yacc.c	419;"	d	file:
YYCOPY	build-linux/src/lev_yacc.c	561;"	d	file:
YYCOPY	build-linux/src/lev_yacc.c	564;"	d	file:
YYCOPY_NEEDED	build-linux/src/dgn_yacc.c	391;"	d	file:
YYCOPY_NEEDED	build-linux/src/lev_yacc.c	536;"	d	file:
YYDEBUG	build-linux/include/dgn_comp.h	41;"	d
YYDEBUG	build-linux/include/lev_comp.h	41;"	d
YYDEBUG	build-linux/src/dgn_yacc.c	140;"	d	file:
YYDEBUG	build-linux/src/lev_yacc.c	229;"	d	file:
YYDPRINTF	build-linux/src/dgn_yacc.c	701;"	d	file:
YYDPRINTF	build-linux/src/dgn_yacc.c	818;"	d	file:
YYDPRINTF	build-linux/src/lev_yacc.c	1172;"	d	file:
YYDPRINTF	build-linux/src/lev_yacc.c	1289;"	d	file:
YYEMPTY	build-linux/src/dgn_yacc.c	660;"	d	file:
YYEMPTY	build-linux/src/lev_yacc.c	1131;"	d	file:
YYEOF	build-linux/src/dgn_yacc.c	661;"	d	file:
YYEOF	build-linux/src/lev_yacc.c	1132;"	d	file:
YYERRCODE	build-linux/src/dgn_yacc.c	689;"	d	file:
YYERRCODE	build-linux/src/lev_yacc.c	1160;"	d	file:
YYERROR	build-linux/src/dgn_yacc.c	665;"	d	file:
YYERROR	build-linux/src/lev_yacc.c	1136;"	d	file:
YYERROR_VERBOSE	build-linux/src/dgn_yacc.c	128;"	d	file:
YYERROR_VERBOSE	build-linux/src/dgn_yacc.c	129;"	d	file:
YYERROR_VERBOSE	build-linux/src/dgn_yacc.c	131;"	d	file:
YYERROR_VERBOSE	build-linux/src/lev_yacc.c	217;"	d	file:
YYERROR_VERBOSE	build-linux/src/lev_yacc.c	218;"	d	file:
YYERROR_VERBOSE	build-linux/src/lev_yacc.c	220;"	d	file:
YYFINAL	build-linux/src/dgn_yacc.c	432;"	d	file:
YYFINAL	build-linux/src/lev_yacc.c	577;"	d	file:
YYFPRINTF	build-linux/src/dgn_yacc.c	698;"	d	file:
YYFPRINTF	build-linux/src/lev_yacc.c	1169;"	d	file:
YYFREE	build-linux/src/dgn_yacc.c	362;"	d	file:
YYFREE	build-linux/src/lev_yacc.c	507;"	d	file:
YYINITDEPTH	build-linux/src/dgn_yacc.c	827;"	d	file:
YYINITDEPTH	build-linux/src/lev_yacc.c	1298;"	d	file:
YYLAST	build-linux/src/dgn_yacc.c	434;"	d	file:
YYLAST	build-linux/src/lev_yacc.c	579;"	d	file:
YYMALLOC	build-linux/src/dgn_yacc.c	356;"	d	file:
YYMALLOC	build-linux/src/lev_yacc.c	501;"	d	file:
YYMAXDEPTH	build-linux/src/dgn_yacc.c	838;"	d	file:
YYMAXDEPTH	build-linux/src/lev_yacc.c	1309;"	d	file:
YYMAXUTOK	build-linux/src/dgn_yacc.c	446;"	d	file:
YYMAXUTOK	build-linux/src/lev_yacc.c	591;"	d	file:
YYNEWLINE	build-linux/src/dgn_lex.c	653;"	d	file:
YYNEWLINE	build-linux/src/lev_lex.c	955;"	d	file:
YYNNTS	build-linux/src/dgn_yacc.c	439;"	d	file:
YYNNTS	build-linux/src/lev_yacc.c	584;"	d	file:
YYNRULES	build-linux/src/dgn_yacc.c	441;"	d	file:
YYNRULES	build-linux/src/lev_yacc.c	586;"	d	file:
YYNSTATES	build-linux/src/dgn_yacc.c	443;"	d	file:
YYNSTATES	build-linux/src/lev_yacc.c	588;"	d	file:
YYNTOKENS	build-linux/src/dgn_yacc.c	437;"	d	file:
YYNTOKENS	build-linux/src/lev_yacc.c	582;"	d	file:
YYPACT_NINF	build-linux/src/dgn_yacc.c	527;"	d	file:
YYPACT_NINF	build-linux/src/lev_yacc.c	736;"	d	file:
YYPOPSTACK	build-linux/src/dgn_yacc.c	1143;"	d	file:
YYPOPSTACK	build-linux/src/lev_yacc.c	1614;"	d	file:
YYPULL	build-linux/src/dgn_yacc.c	63;"	d	file:
YYPULL	build-linux/src/lev_yacc.c	63;"	d	file:
YYPURE	build-linux/src/dgn_yacc.c	57;"	d	file:
YYPURE	build-linux/src/lev_yacc.c	57;"	d	file:
YYPUSH	build-linux/src/dgn_yacc.c	60;"	d	file:
YYPUSH	build-linux/src/lev_yacc.c	60;"	d	file:
YYRECOVERING	build-linux/src/dgn_yacc.c	668;"	d	file:
YYRECOVERING	build-linux/src/lev_yacc.c	1139;"	d	file:
YYSIZE_MAXIMUM	build-linux/src/dgn_yacc.c	242;"	d	file:
YYSIZE_MAXIMUM	build-linux/src/lev_yacc.c	387;"	d	file:
YYSIZE_T	build-linux/src/dgn_yacc.c	231;"	d	file:
YYSIZE_T	build-linux/src/dgn_yacc.c	233;"	d	file:
YYSIZE_T	build-linux/src/dgn_yacc.c	236;"	d	file:
YYSIZE_T	build-linux/src/dgn_yacc.c	238;"	d	file:
YYSIZE_T	build-linux/src/lev_yacc.c	376;"	d	file:
YYSIZE_T	build-linux/src/lev_yacc.c	378;"	d	file:
YYSIZE_T	build-linux/src/lev_yacc.c	381;"	d	file:
YYSIZE_T	build-linux/src/lev_yacc.c	383;"	d	file:
YYSKELETON_NAME	build-linux/src/dgn_yacc.c	54;"	d	file:
YYSKELETON_NAME	build-linux/src/lev_yacc.c	54;"	d	file:
YYSTACK_ALLOC	build-linux/src/dgn_yacc.c	310;"	d	file:
YYSTACK_ALLOC	build-linux/src/dgn_yacc.c	314;"	d	file:
YYSTACK_ALLOC	build-linux/src/dgn_yacc.c	319;"	d	file:
YYSTACK_ALLOC	build-linux/src/dgn_yacc.c	342;"	d	file:
YYSTACK_ALLOC	build-linux/src/lev_yacc.c	455;"	d	file:
YYSTACK_ALLOC	build-linux/src/lev_yacc.c	459;"	d	file:
YYSTACK_ALLOC	build-linux/src/lev_yacc.c	464;"	d	file:
YYSTACK_ALLOC	build-linux/src/lev_yacc.c	487;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build-linux/src/dgn_yacc.c	339;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build-linux/src/dgn_yacc.c	345;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build-linux/src/lev_yacc.c	484;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build-linux/src/lev_yacc.c	490;"	d	file:
YYSTACK_BYTES	build-linux/src/dgn_yacc.c	387;"	d	file:
YYSTACK_BYTES	build-linux/src/lev_yacc.c	532;"	d	file:
YYSTACK_FREE	build-linux/src/dgn_yacc.c	333;"	d	file:
YYSTACK_FREE	build-linux/src/dgn_yacc.c	343;"	d	file:
YYSTACK_FREE	build-linux/src/lev_yacc.c	478;"	d	file:
YYSTACK_FREE	build-linux/src/lev_yacc.c	488;"	d	file:
YYSTACK_GAP_MAXIMUM	build-linux/src/dgn_yacc.c	383;"	d	file:
YYSTACK_GAP_MAXIMUM	build-linux/src/lev_yacc.c	528;"	d	file:
YYSTACK_RELOCATE	build-linux/src/dgn_yacc.c	398;"	d	file:
YYSTACK_RELOCATE	build-linux/src/lev_yacc.c	543;"	d	file:
YYSTATE	build-linux/src/dgn_lex.c	124;"	d	file:
YYSTATE	build-linux/src/lev_lex.c	124;"	d	file:
YYSTYPE	build-linux/include/dgn_comp.h	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	build-linux/include/dgn_comp.h	/^union YYSTYPE$/;"	u
YYSTYPE	build-linux/include/lev_comp.h	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	build-linux/include/lev_comp.h	/^union YYSTYPE$/;"	u
YYSTYPE	build-linux/src/dgn_yacc.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	build-linux/src/dgn_yacc.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE	build-linux/src/lev_yacc.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	build-linux/src/lev_yacc.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE_IS_DECLARED	build-linux/include/dgn_comp.h	90;"	d
YYSTYPE_IS_DECLARED	build-linux/include/lev_comp.h	146;"	d
YYSTYPE_IS_DECLARED	build-linux/src/dgn_yacc.c	189;"	d	file:
YYSTYPE_IS_DECLARED	build-linux/src/lev_yacc.c	334;"	d	file:
YYSTYPE_IS_TRIVIAL	build-linux/include/dgn_comp.h	89;"	d
YYSTYPE_IS_TRIVIAL	build-linux/include/lev_comp.h	145;"	d
YYSTYPE_IS_TRIVIAL	build-linux/src/dgn_yacc.c	188;"	d	file:
YYSTYPE_IS_TRIVIAL	build-linux/src/lev_yacc.c	333;"	d	file:
YYTABLES_NAME	build-linux/src/dgn_lex.c	2140;"	d	file:
YYTABLES_NAME	build-linux/src/lev_lex.c	2888;"	d	file:
YYTABLE_NINF	build-linux/src/dgn_yacc.c	532;"	d	file:
YYTABLE_NINF	build-linux/src/lev_yacc.c	741;"	d	file:
YYTERROR	build-linux/src/dgn_yacc.c	688;"	d	file:
YYTERROR	build-linux/src/lev_yacc.c	1159;"	d	file:
YYTOKENTYPE	build-linux/include/dgn_comp.h	49;"	d
YYTOKENTYPE	build-linux/include/lev_comp.h	49;"	d
YYTOKENTYPE	build-linux/src/dgn_yacc.c	148;"	d	file:
YYTOKENTYPE	build-linux/src/lev_yacc.c	237;"	d	file:
YYTRANSLATE	build-linux/src/dgn_yacc.c	450;"	d	file:
YYTRANSLATE	build-linux/src/lev_yacc.c	595;"	d	file:
YYUNDEFTOK	build-linux/src/dgn_yacc.c	445;"	d	file:
YYUNDEFTOK	build-linux/src/lev_yacc.c	590;"	d	file:
YYUSE	build-linux/src/dgn_yacc.c	276;"	d	file:
YYUSE	build-linux/src/dgn_yacc.c	278;"	d	file:
YYUSE	build-linux/src/lev_yacc.c	421;"	d	file:
YYUSE	build-linux/src/lev_yacc.c	423;"	d	file:
YY_	build-linux/src/dgn_yacc.c	248;"	d	file:
YY_	build-linux/src/dgn_yacc.c	252;"	d	file:
YY_	build-linux/src/lev_yacc.c	393;"	d	file:
YY_	build-linux/src/lev_yacc.c	397;"	d	file:
YY_ASSERT	build-linux/src/dgn_yacc.c	301;"	d	file:
YY_ASSERT	build-linux/src/lev_yacc.c	446;"	d	file:
YY_ATTRIBUTE	build-linux/src/dgn_yacc.c	260;"	d	file:
YY_ATTRIBUTE	build-linux/src/dgn_yacc.c	262;"	d	file:
YY_ATTRIBUTE	build-linux/src/lev_yacc.c	405;"	d	file:
YY_ATTRIBUTE	build-linux/src/lev_yacc.c	407;"	d	file:
YY_ATTRIBUTE_PURE	build-linux/src/dgn_yacc.c	267;"	d	file:
YY_ATTRIBUTE_PURE	build-linux/src/lev_yacc.c	412;"	d	file:
YY_ATTRIBUTE_UNUSED	build-linux/src/dgn_yacc.c	271;"	d	file:
YY_ATTRIBUTE_UNUSED	build-linux/src/lev_yacc.c	416;"	d	file:
YY_AT_BOL	build-linux/src/dgn_lex.c	323;"	d	file:
YY_AT_BOL	build-linux/src/lev_lex.c	323;"	d	file:
YY_BREAK	build-linux/src/dgn_lex.c	849;"	d	file:
YY_BREAK	build-linux/src/lev_lex.c	1153;"	d	file:
YY_BUFFER_EOF_PENDING	build-linux/src/dgn_lex.c	244;"	d	file:
YY_BUFFER_EOF_PENDING	build-linux/src/lev_lex.c	244;"	d	file:
YY_BUFFER_NEW	build-linux/src/dgn_lex.c	232;"	d	file:
YY_BUFFER_NEW	build-linux/src/lev_lex.c	232;"	d	file:
YY_BUFFER_NORMAL	build-linux/src/dgn_lex.c	233;"	d	file:
YY_BUFFER_NORMAL	build-linux/src/lev_lex.c	233;"	d	file:
YY_BUFFER_STATE	build-linux/src/dgn_lex.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUFFER_STATE	build-linux/src/lev_lex.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	build-linux/src/dgn_lex.c	138;"	d	file:
YY_BUF_SIZE	build-linux/src/dgn_lex.c	140;"	d	file:
YY_BUF_SIZE	build-linux/src/lev_lex.c	138;"	d	file:
YY_BUF_SIZE	build-linux/src/lev_lex.c	140;"	d	file:
YY_CHAR	build-linux/src/dgn_lex.c	/^typedef flex_uint8_t YY_CHAR;$/;"	t	file:
YY_CHAR	build-linux/src/lev_lex.c	/^typedef flex_uint8_t YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	build-linux/src/dgn_lex.c	260;"	d	file:
YY_CURRENT_BUFFER	build-linux/src/lev_lex.c	260;"	d	file:
YY_CURRENT_BUFFER_LVALUE	build-linux/src/dgn_lex.c	266;"	d	file:
YY_CURRENT_BUFFER_LVALUE	build-linux/src/lev_lex.c	266;"	d	file:
YY_DECL	build-linux/src/dgn_lex.c	837;"	d	file:
YY_DECL	build-linux/src/lev_lex.c	1141;"	d	file:
YY_DECL_IS_OURS	build-linux/src/dgn_lex.c	833;"	d	file:
YY_DECL_IS_OURS	build-linux/src/lev_lex.c	1137;"	d	file:
YY_DO_BEFORE_ACTION	build-linux/src/dgn_lex.c	349;"	d	file:
YY_DO_BEFORE_ACTION	build-linux/src/lev_lex.c	349;"	d	file:
YY_END_OF_BUFFER	build-linux/src/dgn_lex.c	356;"	d	file:
YY_END_OF_BUFFER	build-linux/src/lev_lex.c	356;"	d	file:
YY_END_OF_BUFFER_CHAR	build-linux/src/dgn_lex.c	129;"	d	file:
YY_END_OF_BUFFER_CHAR	build-linux/src/lev_lex.c	129;"	d	file:
YY_EXIT_FAILURE	build-linux/src/dgn_lex.c	1936;"	d	file:
YY_EXIT_FAILURE	build-linux/src/lev_lex.c	2684;"	d	file:
YY_EXTRA_TYPE	build-linux/src/dgn_lex.c	686;"	d	file:
YY_EXTRA_TYPE	build-linux/src/lev_lex.c	990;"	d	file:
YY_FATAL_ERROR	build-linux/src/dgn_lex.c	824;"	d	file:
YY_FATAL_ERROR	build-linux/src/lev_lex.c	1128;"	d	file:
YY_FLEX_MAJOR_VERSION	build-linux/src/dgn_lex.c	10;"	d	file:
YY_FLEX_MAJOR_VERSION	build-linux/src/lev_lex.c	10;"	d	file:
YY_FLEX_MINOR_VERSION	build-linux/src/dgn_lex.c	11;"	d	file:
YY_FLEX_MINOR_VERSION	build-linux/src/lev_lex.c	11;"	d	file:
YY_FLEX_SUBMINOR_VERSION	build-linux/src/dgn_lex.c	12;"	d	file:
YY_FLEX_SUBMINOR_VERSION	build-linux/src/lev_lex.c	12;"	d	file:
YY_FLUSH_BUFFER	build-linux/src/dgn_lex.c	294;"	d	file:
YY_FLUSH_BUFFER	build-linux/src/lev_lex.c	294;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build-linux/src/dgn_yacc.c	283;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build-linux/src/dgn_yacc.c	293;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build-linux/src/lev_yacc.c	428;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build-linux/src/lev_yacc.c	438;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build-linux/src/dgn_yacc.c	287;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build-linux/src/dgn_yacc.c	294;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build-linux/src/lev_yacc.c	432;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build-linux/src/lev_yacc.c	439;"	d	file:
YY_INITIAL_VALUE	build-linux/src/dgn_yacc.c	290;"	d	file:
YY_INITIAL_VALUE	build-linux/src/dgn_yacc.c	297;"	d	file:
YY_INITIAL_VALUE	build-linux/src/lev_yacc.c	435;"	d	file:
YY_INITIAL_VALUE	build-linux/src/lev_yacc.c	442;"	d	file:
YY_INPUT	build-linux/src/dgn_lex.c	777;"	d	file:
YY_INPUT	build-linux/src/lev_lex.c	1081;"	d	file:
YY_INT_ALIGNED	build-linux/src/dgn_lex.c	5;"	d	file:
YY_INT_ALIGNED	build-linux/src/lev_lex.c	5;"	d	file:
YY_LESS_LINENO	build-linux/src/dgn_lex.c	166;"	d	file:
YY_LESS_LINENO	build-linux/src/lev_lex.c	166;"	d	file:
YY_LINENO_REWIND_TO	build-linux/src/dgn_lex.c	167;"	d	file:
YY_LINENO_REWIND_TO	build-linux/src/lev_lex.c	167;"	d	file:
YY_LOCATION_PRINT	build-linux/src/dgn_yacc.c	709;"	d	file:
YY_LOCATION_PRINT	build-linux/src/lev_yacc.c	1180;"	d	file:
YY_MALLOC_DECL	build-linux/src/dgn_lex.c	628;"	d	file:
YY_MALLOC_DECL	build-linux/src/lev_lex.c	928;"	d	file:
YY_MORE_ADJ	build-linux/src/dgn_lex.c	560;"	d	file:
YY_MORE_ADJ	build-linux/src/lev_lex.c	862;"	d	file:
YY_NEW_FILE	build-linux/src/dgn_lex.c	128;"	d	file:
YY_NEW_FILE	build-linux/src/lev_lex.c	128;"	d	file:
YY_NULL	build-linux/src/dgn_lex.c	107;"	d	file:
YY_NULL	build-linux/src/lev_lex.c	107;"	d	file:
YY_NULLPTR	build-linux/src/dgn_yacc.c	117;"	d	file:
YY_NULLPTR	build-linux/src/dgn_yacc.c	119;"	d	file:
YY_NULLPTR	build-linux/src/dgn_yacc.c	122;"	d	file:
YY_NULLPTR	build-linux/src/lev_yacc.c	206;"	d	file:
YY_NULLPTR	build-linux/src/lev_yacc.c	208;"	d	file:
YY_NULLPTR	build-linux/src/lev_yacc.c	211;"	d	file:
YY_NUM_RULES	build-linux/src/dgn_lex.c	355;"	d	file:
YY_NUM_RULES	build-linux/src/lev_lex.c	355;"	d	file:
YY_READ_BUF_SIZE	build-linux/src/dgn_lex.c	759;"	d	file:
YY_READ_BUF_SIZE	build-linux/src/dgn_lex.c	761;"	d	file:
YY_READ_BUF_SIZE	build-linux/src/lev_lex.c	1063;"	d	file:
YY_READ_BUF_SIZE	build-linux/src/lev_lex.c	1065;"	d	file:
YY_REDUCE_PRINT	build-linux/src/dgn_yacc.c	808;"	d	file:
YY_REDUCE_PRINT	build-linux/src/dgn_yacc.c	821;"	d	file:
YY_REDUCE_PRINT	build-linux/src/lev_yacc.c	1279;"	d	file:
YY_REDUCE_PRINT	build-linux/src/lev_yacc.c	1292;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	build-linux/src/dgn_lex.c	561;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	build-linux/src/lev_lex.c	863;"	d	file:
YY_RULE_SETUP	build-linux/src/dgn_lex.c	852;"	d	file:
YY_RULE_SETUP	build-linux/src/lev_lex.c	1156;"	d	file:
YY_SC_TO_UI	build-linux/src/dgn_lex.c	112;"	d	file:
YY_SC_TO_UI	build-linux/src/lev_lex.c	112;"	d	file:
YY_STACK_PRINT	build-linux/src/dgn_yacc.c	777;"	d	file:
YY_STACK_PRINT	build-linux/src/dgn_yacc.c	820;"	d	file:
YY_STACK_PRINT	build-linux/src/lev_yacc.c	1248;"	d	file:
YY_STACK_PRINT	build-linux/src/lev_yacc.c	1291;"	d	file:
YY_START	build-linux/src/dgn_lex.c	123;"	d	file:
YY_START	build-linux/src/lev_lex.c	123;"	d	file:
YY_START_STACK_INCR	build-linux/src/dgn_lex.c	819;"	d	file:
YY_START_STACK_INCR	build-linux/src/lev_lex.c	1123;"	d	file:
YY_STATE_BUF_SIZE	build-linux/src/dgn_lex.c	146;"	d	file:
YY_STATE_BUF_SIZE	build-linux/src/lev_lex.c	146;"	d	file:
YY_STATE_EOF	build-linux/src/dgn_lex.c	126;"	d	file:
YY_STATE_EOF	build-linux/src/lev_lex.c	126;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	build-linux/src/dgn_lex.c	185;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	build-linux/src/lev_lex.c	185;"	d	file:
YY_SYMBOL_PRINT	build-linux/src/dgn_yacc.c	713;"	d	file:
YY_SYMBOL_PRINT	build-linux/src/dgn_yacc.c	819;"	d	file:
YY_SYMBOL_PRINT	build-linux/src/lev_yacc.c	1184;"	d	file:
YY_SYMBOL_PRINT	build-linux/src/lev_yacc.c	1290;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	build-linux/src/dgn_lex.c	149;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	build-linux/src/lev_lex.c	149;"	d	file:
YY_TYPEDEF_YY_SIZE_T	build-linux/src/dgn_lex.c	154;"	d	file:
YY_TYPEDEF_YY_SIZE_T	build-linux/src/lev_lex.c	154;"	d	file:
YY_USER_ACTION	build-linux/src/dgn_lex.c	844;"	d	file:
YY_USER_ACTION	build-linux/src/lev_lex.c	1148;"	d	file:
YY_YY_BUILD_LINUX_DGN_YACC_H_INCLUDED	build-linux/include/dgn_comp.h	38;"	d
YY_YY_BUILD_LINUX_DGN_YACC_H_INCLUDED	build-linux/src/dgn_yacc.c	137;"	d	file:
YY_YY_BUILD_LINUX_LEV_YACC_H_INCLUDED	build-linux/include/lev_comp.h	38;"	d
YY_YY_BUILD_LINUX_LEV_YACC_H_INCLUDED	build-linux/src/lev_yacc.c	226;"	d	file:
Yeoman	src/u_init.c	/^static struct trobj Yeoman[] = {$/;"	v	typeref:struct:trobj	file:
Yname2	src/objnam.c	/^char * Yname2 (struct obj *obj) {$/;"	f
YouMessage	src/pline.c	117;"	d	file:
YouPrefix	src/pline.c	114;"	d	file:
You_	src/cmd.c	/^You_[] = "You ",$/;"	v	file:
You_buf	src/pline.c	/^static char *You_buf(int siz) {$/;"	f	file:
You_hear	include/extern.h	1484;"	d
You_hearf	src/pline.c	/^void You_hearf(const char *line, ...) {$/;"	f
Your_Own_Race	src/read.c	16;"	d	file:
Your_Own_Role	src/read.c	13;"	d	file:
Ysimple_name2	src/objnam.c	/^char * Ysimple_name2 (struct obj *obj) {$/;"	f
ZAPPED_WAND	include/hack.h	98;"	d
ZAP_POS	include/rm.h	87;"	d
ZOO	include/mkroom.h	63;"	d
ZT_ACID	include/spell.h	30;"	d
ZT_BREATH	include/spell.h	38;"	d
ZT_COLD	include/spell.h	25;"	d
ZT_DEATH	include/spell.h	27;"	d
ZT_FIRE	include/spell.h	24;"	d
ZT_FIRST	include/spell.h	33;"	d
ZT_LAST	include/spell.h	32;"	d
ZT_LIGHTNING	include/spell.h	28;"	d
ZT_MAGIC_MISSILE	include/spell.h	23;"	d
ZT_MEGA	include/spell.h	39;"	d
ZT_MONWAND	include/spell.h	40;"	d
ZT_POISON_GAS	include/spell.h	29;"	d
ZT_SLEEP	include/spell.h	26;"	d
ZT_SPELL	include/spell.h	37;"	d
ZT_WAND	include/spell.h	36;"	d
_BSD_SOURCE	include/unixconf.h	194;"	d
_SYSV_SOURCE	include/unixconf.h	193;"	d
__HC__	include/unixconf.h	292;"	d
__HC__	include/unixconf.h	294;"	d
__STDC_LIMIT_MACROS	build-linux/src/dgn_lex.c	40;"	d	file:
__STDC_LIMIT_MACROS	build-linux/src/lev_lex.c	40;"	d	file:
__declspec	sys/winnt/nh340key.c	/^int __declspec(dllexport) __stdcall$/;"	f
__declspec	sys/winnt/nhdefkey.c	/^int __declspec(dllexport) __stdcall$/;"	f
__declspec	sys/winnt/nhraykey.c	/^int __declspec(dllexport) __stdcall$/;"	f
_map_location	src/display.c	334;"	d	file:
_map_location	src/display.c	358;"	d	file:
_newtype	include/global.h	126;"	d
_newtype_f1	include/global.h	133;"	d
_newtype_f2	include/global.h	134;"	d
_newtype_fx	include/global.h	135;"	d
_plinemsg	include/decl.h	/^struct _plinemsg {$/;"	s
_room	include/sp_lev.h	/^typedef struct _room {$/;"	s
a	include/attrib.h	/^	schar	a[A_MAX];$/;"	m	struct:attribs
a_ac	include/objclass.h	116;"	d
a_align	src/pray.c	120;"	d	file:
a_can	include/objclass.h	117;"	d
a_char	include/wintype.h	/^	char a_char;$/;"	m	union:__anon57
a_gname	src/pray.c	/^const char * a_gname (void) {$/;"	f
a_gname_at	src/pray.c	/^const char * a_gname_at(xchar x, xchar y) {$/;"	f
a_int	include/wintype.h	/^	int  a_int;$/;"	m	union:__anon57
a_monnam	src/do_name.c	/^char *a_monnam(struct monst *mtmp) {$/;"	f
a_monst	include/wintype.h	/^	struct monst *a_monst;$/;"	m	union:__anon57	typeref:struct:__anon57::monst
a_obj	include/wintype.h	/^	struct obj *a_obj;$/;"	m	union:__anon57	typeref:struct:__anon57::obj
a_schar	include/wintype.h	/^	schar a_schar;$/;"	m	union:__anon57
a_uint	include/wintype.h	/^	uint a_uint;$/;"	m	union:__anon57
a_void	include/wintype.h	/^	void *a_void;$/;"	m	union:__anon57
a_your	src/trap.c	/^static const char * const a_your[2] = { "a", "your" };$/;"	v	file:
aalign	include/attk.h	/^	schar	aalign;			\/* Attacking monster's alignment *\/$/;"	m	struct:Attk
aatyp	include/permonst.h	/^	uchar		aatyp;$/;"	m	struct:attack
ability	src/attrib.c	/^	long	*ability;$/;"	m	struct:innate	file:
able_to_loot	src/pickup.c	/^static boolean able_to_loot(int x, int y) {$/;"	f	file:
abon	include/you.h	/^		        abon,		\/* your bonus attributes (eg. str) *\/$/;"	m	struct:you	typeref:struct:you::
abon	src/weapon.c	/^int abon (void)		{$/;"	f
aborttech	src/tech.c	/^void aborttech (int tech) {$/;"	f
abuse	include/edog.h	/^	int abuse;			\/* track abuses to this pet *\/$/;"	m	struct:edog
abuse_dog	src/dog.c	/^void abuse_dog(struct monst *mtmp) {$/;"	f
ac	include/permonst.h	/^	                ac,			\/* (base) armor class *\/$/;"	m	struct:permonst
accelerate_timer	src/timeout.c	/^static void accelerate_timer(short func_index, anything arg, long adj) {$/;"	f	file:
accelerator	win/curses/cursdial.c	/^    char accelerator;           \/* Character used to select item from menu *\/$/;"	m	struct:nhmi	file:
accessible	src/monmove.c	/^boolean accessible(int x, int y) {$/;"	f
accessories	src/do_wear.c	/^static const char accessories[] = {RING_CLASS, AMULET_CLASS, TOOL_CLASS, FOOD_CLASS, 0};$/;"	v	file:
accessory_has_effect	src/eat.c	/^static void accessory_has_effect(struct obj *otmp) {$/;"	f	file:
achieve	src/decl.c	/^struct u_achieve achieve = DUMMY;$/;"	v	typeref:struct:u_achieve
acidic	include/mondata.h	85;"	d
acount	sys/winnt/nttty.c	/^static DWORD ccount, acount;$/;"	v	file:
action_leash	src/apply.c	/^static void action_leash(struct obj *leash, struct monst *mon, boolean endstop) {$/;"	f	file:
action_menu	src/cmd.c	/^static const struct menu_tab action_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
activate_statue_trap	src/trap.c	/^struct monst * activate_statue_trap(struct trap *trap, xchar x, xchar y, boolean shatter) {$/;"	f
active	include/wintty.h	/^	boolean active;		\/* true if window is active *\/$/;"	m	struct:WinDesc
acurr	include/you.h	/^	struct attribs	acurr,		\/* your current attributes (eg. str)*\/$/;"	m	struct:you	typeref:struct:you::attribs
acurr	src/attrib.c	/^schar acurr(int x) {$/;"	f
acurrstr	src/attrib.c	/^schar acurrstr(void) {$/;"	f
ad_to_typ	src/mcastu.c	821;"	d	file:
add_autopickup_exception	src/options.c	/^int add_autopickup_exception (const char *mapping) {$/;"	f
add_branch	src/dungeon.c	/^static branch *add_branch(int dgn, int branch_num, struct proto_dungeon *pd) {$/;"	f	file:
add_class	src/apply.c	/^static void add_class(char *cl, char class) {$/;"	f	file:
add_colored_text	src/botl.c	/^void add_colored_text(const char *text, char *newbot2) {$/;"	f
add_colored_text_match	src/botl.c	/^void add_colored_text_match(const char *text, const char *match, char *newbot2) {$/;"	f
add_damage	src/shk.c	/^void add_damage(xchar x, xchar y, long cost) {$/;"	f
add_debug_extended_commands	src/cmd.c	/^static void add_debug_extended_commands(void) {$/;"	f	file:
add_door	src/mklev.c	/^int add_door(int x, int y, struct mkroom *aroom) {$/;"	f
add_erosion_words	src/objnam.c	/^static void add_erosion_words (struct obj *obj, char *prefix) {$/;"	f	file:
add_id_mapping	src/restore.c	/^static void add_id_mapping(uint gid, uint nid) {$/;"	f	file:
add_level	src/dungeon.c	/^static void add_level(s_level *new_lev) {$/;"	f	file:
add_location_to_explode_region	src/explode.c	/^static void add_location_to_explode_region(ExplodeRegion *reg, xchar x, xchar y) {$/;"	f	file:
add_menu	include/winprocs.h	94;"	d
add_menu_cmd_alias	src/options.c	/^void add_menu_cmd_alias (char from_ch, char to_ch) {$/;"	f
add_menu_coloring	src/options.c	/^boolean add_menu_coloring(char *str) {$/;"	f
add_mon_to_reg	src/region.c	/^void add_mon_to_reg(NhRegion *reg, struct monst *mon) {$/;"	f
add_one_tobill	src/shk.c	/^static void add_one_tobill(struct obj *obj, boolean dummy) {$/;"	f	file:
add_percent_option	src/options.c	/^struct percent_color_option *add_percent_option(struct percent_color_option *new_option, struct percent_color_option *list_head) {$/;"	f
add_rect	src/rect.c	/^add_rect(r)$/;"	f
add_rect_to_reg	src/region.c	/^void add_rect_to_reg(NhRegion *reg, NhRect *rect) {$/;"	f
add_region	src/region.c	/^void add_region(NhRegion *reg) {$/;"	f
add_room	src/mklev.c	/^void add_room(int lowx, int lowy, int hix, int hiy, boolean lit, schar rtype, boolean special) {$/;"	f
add_sound_mapping	src/sounds.c	/^add_sound_mapping (const char *mapping) {$/;"	f
add_subroom	src/mklev.c	/^void add_subroom(struct mkroom *proom, int lowx, int lowy, int hix, int hiy, boolean lit, schar rtype, boolean special) {$/;"	f
add_to_billobjs	src/shk.c	/^static void add_to_billobjs(struct obj *obj) {$/;"	f	file:
add_to_buried	src/mkobj.c	/^add_to_buried (struct obj *obj) {$/;"	f
add_to_container	src/mkobj.c	/^add_to_container (struct obj *container, struct obj *obj) {$/;"	f
add_to_migration	src/mkobj.c	/^add_to_migration (struct obj *obj) {$/;"	f
add_to_minv	src/mkobj.c	/^add_to_minv (struct monst *mon, struct obj *obj) {$/;"	f
add_valid_menu_class	src/pickup.c	/^add_valid_menu_class (int c) {$/;"	f
add_weapon_skill	src/weapon.c	/^void add_weapon_skill ( int n	) {$/;"	f
addchar	src/cmd.c	/^static void addchar(char ch) {$/;"	f	file:
addinv	src/invent.c	/^struct obj *addinv(struct obj *obj) {$/;"	f
addinv_core1	src/invent.c	/^void addinv_core1(struct obj *obj) {$/;"	f
addinv_core2	src/invent.c	/^void addinv_core2(struct obj *obj) {$/;"	f
addr	src/options.c	/^	bool	*addr, initvalue;$/;"	m	struct:Bool_Opt	file:
addr	win/proxy/getopt.c	/^    bool *addr, initvalue;$/;"	m	struct:Bool_Opt	file:
addtobill	src/shk.c	/^void addtobill(struct obj *obj, boolean ininv, boolean dummy, boolean silent) {$/;"	f
addtopl	win/tty/topl.c	/^void addtopl(const char *s) {$/;"	f
addupbill	src/shk.c	/^static long addupbill(struct monst *shkp) {$/;"	f	file:
adj	include/you.h	/^	const char *adj;	\/* adjective ("human", "elven") *\/$/;"	m	struct:Race
adj	include/you.h	/^	const char *adj;	\/* lawful\/neutral\/chaotic *\/$/;"	m	struct:Align
adj	include/you.h	/^	const char *adj;	\/* male\/female\/neuter *\/$/;"	m	struct:Gender
adj_abon	src/do_wear.c	/^void adj_abon(struct obj *otmp, schar delta) {$/;"	f
adj_lev	src/makemon.c	/^int adj_lev(struct permonst *ptr) {$/;"	f
adjabil	src/attrib.c	/^void adjabil(int oldlevel, int newlevel) {$/;"	f
adjalign	src/attrib.c	/^void adjalign(int n) {$/;"	f
adjattrib	src/attrib.c	/^boolean adjattrib(int ndx, int incr, int msgflg	\/* 2 => no message at all, 1 => no message *\/$/;"	f
adjtech	src/tech.c	/^void adjtech (int oldlevel, int newlevel) {$/;"	f
adjust_hp_list	src/borg.c	/^void adjust_hp_list(void) {$/;"	f
adjust_prefix	src/files.c	/^static void adjust_prefix(char *bufp, int prefixid) {$/;"	f	file:
admg	include/attk.h	/^	xchar	admg;			\/* The damage type (AD_ below) *\/$/;"	m	struct:Attk
adtyp	include/permonst.h	/^	uchar		adtyp, damn, damd;$/;"	m	struct:attack
advance	include/skills.h	/^	unsigned short advance;$/;"	m	struct:skills
aexe	include/you.h	/^		        aexe,		\/* for gain\/loss via "exercise" *\/$/;"	m	struct:you	typeref:struct:you::
after_shk_move	src/shk.c	/^void after_shk_move(struct monst *shkp) {$/;"	f
afternmv	src/decl.c	/^int (*afternmv)(void);$/;"	v
age	include/obj.h	/^	long age;		\/* creation date *\/$/;"	m	struct:obj
age_is_relative	include/obj.h	328;"	d
age_spells	src/spell.c	/^void age_spells (void) {$/;"	f
aggravate	src/wizard.c	/^aggravate (void) {$/;"	f
air_level	include/decl.h	101;"	d
align	include/align.h	/^typedef struct	align {		\/* alignment & record *\/$/;"	s
align	include/align.h	/^} align;$/;"	t	typeref:struct:align
align	include/sp_lev.h	/^	aligntyp	align;$/;"	m	struct:__anon37
align	include/sp_lev.h	/^	aligntyp align;$/;"	m	struct:__anon35
align	src/u_init.c	/^	aligntyp align;$/;"	m	struct:inv_asub	file:
align_gname	src/pray.c	/^const char * align_gname(aligntyp alignment) {$/;"	f
align_gtitle	src/pray.c	/^const char * align_gtitle(aligntyp alignment) {$/;"	f
align_shift	src/makemon.c	/^static int align_shift(struct permonst *ptr) {$/;"	f	file:
align_str	src/pline.c	/^const char *align_str(aligntyp alignment) {$/;"	f
alignment	include/artifact.h	/^	aligntyp    alignment;	\/* alignment of bequeathing gods *\/$/;"	m	struct:artifact
aligns	src/role.c	/^const struct Align aligns[] = {$/;"	v	typeref:struct:Align
aligntyp	include/align.h	/^typedef schar	aligntyp;	\/* basic alignment type *\/$/;"	t
all_but_uchain	src/pickup.c	/^static bool all_but_uchain(struct obj *obj) {$/;"	f	file:
all_count	src/apply.c	/^static const char all_count[] = { ALLOW_COUNT, ALL_CLASSES, 0 };$/;"	v	file:
all_count	src/read.c	/^static const char all_count[] = { ALLOW_COUNT, ALL_CLASSES, 0 };$/;"	v	file:
allobj	src/eat.c	/^static const char allobj[] = { COIN_CLASS, ALLOW_FLOOROBJ,$/;"	v	file:
alloc	src/alloc.c	/^void *alloc(usize lth) {$/;"	f
alloca	build-linux/src/dgn_yacc.c	317;"	d	file:
alloca	build-linux/src/lev_yacc.c	462;"	d	file:
alloca	util/panic.c	/^long *alloca(cnt)$/;"	f
allow	include/you.h	/^	short allow;		\/* bit mask of allowed variations *\/$/;"	m	struct:Race
allow	include/you.h	/^	short allow;		\/* bit mask of allowed variations *\/$/;"	m	struct:Role
allow	include/you.h	/^	short allow;		\/* equivalent ROLE_ mask *\/$/;"	m	struct:Align
allow	include/you.h	/^	short allow;		\/* equivalent ROLE_ mask *\/$/;"	m	struct:Gender
allow_all	src/pickup.c	/^bool allow_all(struct obj *obj) {$/;"	f
allow_bgcolor	win/tty/termcap.c	/^int allow_bgcolor = 0;$/;"	v
allow_category	src/pickup.c	/^bool allow_category(struct obj *obj) {$/;"	f
allow_set	src/dogmove.c	/^static char *allow_set(long allowflags) {$/;"	f	file:
allow_ugly	src/invent.c	/^static bool allow_ugly(struct obj *obj) {$/;"	f	file:
alocations	src/explode.c	/^	short nlocations, alocations;$/;"	m	struct:__anon9	file:
already_wearing	src/do_wear.c	/^static void already_wearing(const char *cc) {$/;"	f	file:
already_wearing2	src/do_wear.c	/^static void already_wearing2(const char *cc1, const char *cc2) {$/;"	f	file:
alt_spellings	src/objnam.c	/^struct alt_spellings {$/;"	s	file:
altar	include/sp_lev.h	/^} altar;$/;"	t	typeref:struct:__anon37
altar_wrath	src/pray.c	/^void altar_wrath (int x, int y) {$/;"	f
altarmask	include/rm.h	448;"	d
altars	include/sp_lev.h	/^	altar **altars;$/;"	m	struct:__anon52
altars	include/sp_lev.h	/^	altar **altars;$/;"	m	struct:_room
altkeyhandler	include/flag.h	/^	char	 altkeyhandler[MAX_ALTKEYHANDLER];$/;"	m	struct:instance_flags
altmode	include/obj.h	/^	schar 	altmode; 	\/* alternate modes - eg. SMG, double Lightsaber *\/$/;"	m	struct:obj
always_hostile	include/mondata.h	114;"	d
always_peaceful	include/mondata.h	115;"	d
always_visible	include/obj.h	149;"	d
amax	include/you.h	/^		        amax,		\/* your max attributes (eg. str) *\/$/;"	m	struct:you	typeref:struct:you::
ammo_and_launcher	include/obj.h	210;"	d
amon	include/attk.h	/^	struct monst *amon;		\/* Attacking monster *\/$/;"	m	struct:Attk	typeref:struct:Attk::monst
amorphous	include/mondata.h	46;"	d
amount	include/sp_lev.h	/^	int   amount;$/;"	m	struct:__anon47
amphibious	include/mondata.h	44;"	d
amulet	include/you.h	/^	bool amulet;	\/* carrying Amulet	*\/$/;"	m	struct:u_have
amulet	src/wizard.c	/^amulet (void) {$/;"	f
amulets	src/end.c	/^	amulets[LAST_AMULET+1 - FIRST_AMULET];$/;"	v	typeref:struct:	file:
an	src/objnam.c	/^char * an (const char *str) {$/;"	f
analyze_seq	win/tty/termcap.c	/^static void analyze_seq (char *str, int *fg, int *bg) {$/;"	f	file:
angry_guards	src/mon.c	/^boolean angry_guards(boolean silent) {$/;"	f
angry_priest	src/priest.c	/^angry_priest() {$/;"	f
angry_shk_exists	src/shk.c	/^static boolean angry_shk_exists() {$/;"	f	file:
angrygods	src/pray.c	/^static void angrygods(aligntyp resp_god) {$/;"	f	file:
animal_list	src/mon.c	/^short *animal_list = 0;		\/* list of PM values for animal monsters *\/$/;"	v
animal_list_count	src/mon.c	/^int animal_list_count;$/;"	v
animate_statue	src/trap.c	/^struct monst * animate_statue(struct obj *statue, xchar x, xchar y, int cause, int *fail_reason) {$/;"	f
antholemon	src/mkroom.c	/^struct permonst * antholemon (void) {$/;"	f
any_light_source	src/light.c	/^boolean any_light_source(void) {$/;"	f
anything	include/wintype.h	/^} anything;$/;"	t	typeref:union:__anon57
anything_zero	include/wintype.h	21;"	d
aobjnam	src/objnam.c	/^char * aobjnam (struct obj *otmp, const char *verb) {$/;"	f
appear	include/sp_lev.h	/^	xchar x, y, chance, class, appear;$/;"	m	struct:__anon35	typeref:class:__anon35::
appear_as	include/sp_lev.h	/^	Str_or_Len name, appear_as;$/;"	m	struct:__anon35
append_slash	sys/share/pcsys.c	/^void append_slash(char *name) {$/;"	f
append_slash	sys/unix/unixmain.c	/^void append_slash(char *name) {$/;"	f
append_str	src/pager.c	/^static int append_str(char *buf, const char *new_str) {$/;"	f	file:
apply_color_option	src/botl.c	/^static void apply_color_option(struct color_option color_option, const char *newbot2, int statusline \/* apply color on this statusline: 1 or 2 *\/) {$/;"	f	file:
apport	include/edog.h	/^	int apport;			\/* amount of training *\/$/;"	m	struct:edog
arboreal	include/rm.h	/^	bool arboreal;		\/* Trees replace rock *\/$/;"	m	struct:levelflags
arc_abil	src/attrib.c	/^}	arc_abil[] = { {	 1, &(HStealth), "", "" },$/;"	v	typeref:struct:innate	file:
arc_tech	src/tech.c	/^	arc_tech[] = { {   1, T_RESEARCH, 1},$/;"	v	typeref:struct:innate_tech	file:
are	src/cmd.c	/^         are[]  = "are ",  were[]  = "were ",$/;"	v	file:
arg	include/region.h	/^	anything arg;		\/* Optional user argument (Ex: strength of$/;"	m	struct:__anon29
arg	include/timeout.h	/^	anything arg;			\/* pointer to timeout argument *\/$/;"	m	struct:fe
args	include/decl.h	/^	char args[BUFSZ];$/;"	m	struct:authentication
arm_bomb	src/explode.c	/^void arm_bomb(struct obj *obj, boolean yours) {$/;"	f
armor_to_dragon	src/polyself.c	/^static int armor_to_dragon(int atyp) {$/;"	f	file:
armor_types	src/shk.c	/^static const char armor_types[] = { ARMOR_CLASS, 0 };$/;"	v	file:
armoroff	src/do_wear.c	/^int armoroff(struct obj *otmp) {$/;"	f
arti_cost	src/artifact.c	/^long arti_cost(struct obj *otmp) {$/;"	f
arti_invoke	src/artifact.c	/^static int arti_invoke(struct obj *obj) {$/;"	f	file:
arti_key	include/mkroom.h	/^	short arti_key;		\/* Index (ART_) of key for this door *\/$/;"	m	struct:door
arti_key	include/sp_lev.h	/^	short arti_key;		\/* Index (ART_) of key for this door *\/$/;"	m	struct:__anon32
arti_key	include/sp_lev.h	/^	short arti_key;		\/* Index (ART_) of key for this door *\/$/;"	m	struct:__anon33
arti_reflects	src/artifact.c	/^boolean arti_reflects(struct obj *obj) {$/;"	f
arti_speak	src/artifact.c	/^void arti_speak(struct obj *obj) {$/;"	f
artidisco	src/artifact.c	/^static xchar artidisco[NROFARTIFACTS];$/;"	v	file:
artiexist	src/artifact.c	/^static boolean artiexist[1+NROFARTIFACTS+1];$/;"	v	file:
artifact	include/artifact.h	/^struct artifact {$/;"	s
artifact_door	src/lock.c	/^int artifact_door(int x, int y) {$/;"	f
artifact_exists	src/artifact.c	/^void artifact_exists(struct obj *otmp, const char *name, boolean mod) {$/;"	f
artifact_has_invprop	src/artifact.c	/^boolean artifact_has_invprop(struct obj *otmp, uchar inv_prop) {$/;"	f
artifact_hit	src/artifact.c	/^boolean artifact_hit(struct monst *magr, struct monst *mdef, struct obj *otmp, int *dmgptr, int dieroll \/* needed for Magicbane and vorpal blades *\/ ) {$/;"	f
artifact_light	src/artifact.c	/^boolean artifact_light(struct obj *obj) {$/;"	f
artifact_name	src/artifact.c	/^const char *artifact_name(const char *name, short *otyp) {$/;"	f
artifact_score	src/end.c	/^static void artifact_score(struct obj *list, boolean counting \/* true => add up points; false => display them **\/, winid endwin) {$/;"	f	file:
artifact_wet	src/artifact.c	/^int artifact_wet(struct obj *obj, boolean silent) {$/;"	f
artiname	src/artifact.c	/^const char *artiname(int artinum) {$/;"	f
artitouch	src/quest.c	/^artitouch (void) {$/;"	f
ascended	include/decl.h	/^	bool ascended;        \/* You ascended to demigod[dess]hood.$/;"	m	struct:u_achieve
ascended	include/you.h	/^	bool ascended;		\/* has offered the Amulet *\/$/;"	m	struct:u_event
ascii_graphics	src/drawing.c	/^const glyph_t ascii_graphics[MAXPCHARS] = {$/;"	v
askchain	src/invent.c	/^int askchain(struct obj **objchn, const char *olets, int allflag, int (*fn)(struct obj*), int (*ckfn)(struct obj*), int mx, const char *word) {$/;"	f
askname	include/winprocs.h	81;"	d
asleep	include/sp_lev.h	/^	schar peaceful, asleep;$/;"	m	struct:__anon35
asmodeus_level	include/decl.h	95;"	d
assign_colors	src/drawing.c	/^void assign_colors(uchar *graph_colors, int glth, int maxlen, int offset) {$/;"	f
assign_graphics	src/drawing.c	/^void assign_graphics(const glyph_t *graph_chars, int glth, int maxlen, int offset) {$/;"	f
assign_level	src/dungeon.c	/^void assign_level(d_level *dest, d_level *src) {$/;"	f
assign_rnd_level	src/dungeon.c	/^void assign_rnd_level(d_level *dest, d_level *src, int range)	{$/;"	f
assign_rogue_graphics	src/drawing.c	/^void assign_rogue_graphics(boolean is_rlevel) {$/;"	f
assign_utf8graphics_symbol	src/drawing.c	/^void assign_utf8graphics_symbol(int position, glyph_t value) {$/;"	f
assign_videocolors	win/tty/termcap.c	/^int assign_videocolors(char *colorvals) {$/;"	f
assigninvlet	src/invent.c	/^void assigninvlet(struct obj *otmp) {$/;"	f
astral_level	include/decl.h	102;"	d
at_dgn_entrance	src/dungeon.c	/^boolean at_dgn_entrance(const char *s) {$/;"	f
at_ladder	src/do.c	/^static boolean at_ladder = false;$/;"	v	file:
at_your_feet	src/pray.c	/^static void at_your_feet (const char *str) {$/;"	f	file:
atconsole	src/music.c	/^atconsole() {$/;"	f	file:
atemp	include/you.h	/^		        atemp,		\/* used for temporary loss\/gain *\/$/;"	m	struct:you	typeref:struct:you::
atime	include/you.h	/^		        atime;		\/* used for loss\/gain countdown *\/$/;"	m	struct:you	typeref:struct:you::
attach_2_m	include/region.h	/^	uint attach_2_m;		\/* Region attached to monster ? *\/$/;"	m	struct:__anon29
attach_2_u	include/region.h	/^	boolean attach_2_u;		\/* Region attached to player ? *\/$/;"	m	struct:__anon29
attach_bomb_blow_timeout	src/timeout.c	/^void attach_bomb_blow_timeout(struct obj *bomb, int fuse, boolean yours) {$/;"	f
attach_egg_hatch_timeout	src/timeout.c	/^void attach_egg_hatch_timeout(struct obj *egg) {$/;"	f
attach_fig_transform_timeout	src/timeout.c	/^void attach_fig_transform_timeout (struct obj *figurine) {$/;"	f
attack	include/permonst.h	/^struct attack {$/;"	s
attack	src/uhitm.c	/^boolean attack(struct monst *mtmp) {$/;"	f
attack_checks	src/uhitm.c	/^int attack_checks(struct monst *mtmp, boolean barehanded) {$/;"	f
attacks	src/artifact.c	/^static boolean attacks(int adtyp, struct obj *otmp) {$/;"	f	file:
attacktype	src/mondata.c	/^boolean attacktype(struct permonst *ptr, int atyp) {$/;"	f
attacktype_fordmg	src/mondata.c	/^struct attack * attacktype_fordmg (struct permonst *ptr, int atyp, int dtyp) {$/;"	f
attk	include/artifact.h	/^	struct attack attk, defn, cary;$/;"	m	struct:artifact	typeref:struct:artifact::attack
attk_protection	src/mhitm.c	/^long attk_protection(int aatyp) {$/;"	f
attr	include/color.h	/^	int color, attr;$/;"	m	struct:menucoloring
attr	include/wintty.h	/^	int attr;			\/* string attribute *\/$/;"	m	struct:tty_mi
attr	src/options.c	/^	const int attr;$/;"	m	struct:__anon15	file:
attr	sys/winnt/nttty.c	/^static WORD attr = (FOREGROUND_GREEN|FOREGROUND_BLUE|FOREGROUND_RED);$/;"	v	file:
attr	win/curses/cursdial.c	/^    int attr;                   \/* Text attributes for item *\/$/;"	m	struct:nhmi	file:
attr	win/curses/curswins.c	/^    int attr;                   \/* attributes of character *\/$/;"	m	struct:nhchar	file:
attr2trbl	src/apply.c	1673;"	d	file:
attr2trbl	src/apply.c	1791;"	d	file:
attr_bits	include/color.h	/^	int attr_bits;$/;"	m	struct:color_option
attr_trouble	src/apply.c	1675;"	d	file:
attr_trouble	src/apply.c	1793;"	d	file:
attrbase	include/you.h	/^	xchar attrbase[A_MAX];	\/* lowest initial attributes *\/$/;"	m	struct:Role
attrcurse	src/sit.c	/^attrcurse (void) {		\/* remove a random INTRINSIC ability *\/$/;"	f
attrdist	include/you.h	/^	xchar attrdist[A_MAX];	\/* distribution of initial attributes *\/$/;"	m	struct:Role
attribs	include/attrib.h	/^struct	attribs {$/;"	s
attrmax	include/you.h	/^	xchar attrmax[A_MAX];	\/* maximum allowable attribute *\/$/;"	m	struct:Race
attrmax	util/lev_main.c	/^struct attribs attrmax, attrmin;$/;"	v	typeref:struct:attribs
attrmin	include/you.h	/^	xchar attrmin[A_MAX];	\/* minimum allowable attribute *\/$/;"	m	struct:Race
attrmin	util/lev_main.c	/^struct attribs attrmax, attrmin;$/;"	v	typeref:struct:
attrnames	src/options.c	/^} attrnames[] = {$/;"	v	typeref:struct:__anon15	file:
attrs	include/wintty.h	/^	int attrs;			\/* attributes in effect *\/$/;"	m	struct:DisplayDesc
atype	include/attk.h	/^	xchar	atype;			\/* The attack type (AT_ below) *\/$/;"	m	struct:Attk
audio_mapping	src/sounds.c	/^} audio_mapping;$/;"	t	typeref:struct:audio_mapping_rec	file:
audio_mapping_rec	src/sounds.c	/^typedef struct audio_mapping_rec {$/;"	s	file:
authentication	include/decl.h	/^extern struct authentication {$/;"	s
authentication	src/decl.c	/^struct authentication authentication = { "", "" };$/;"	v	typeref:struct:authentication
author	sys/winnt/nh340key.c	/^static char author[] = "The NetHack Development Team";$/;"	v	file:
author	sys/winnt/nhdefkey.c	/^static char author[] = "The NetHack Development Team";$/;"	v	file:
author	sys/winnt/nhraykey.c	/^static char author[] = "Ray Chason";$/;"	v	file:
auto_credit	src/shk.c	/^static boolean auto_credit = false;$/;"	v	file:
autocomplete	include/func_tab.h	/^	boolean autocomplete;$/;"	m	struct:ext_func_tab
autodig	include/flag.h	/^	bool  autodig;       \/* MRKR: Automatically dig *\/$/;"	m	struct:flag
automiss	src/dbridge.c	/^static boolean automiss(struct entity *etmp) {$/;"	f	file:
autopick	src/pickup.c	/^static int autopick(struct obj *olist, int follow, menu_item **pick_list) {$/;"	f	file:
autopickup_exception	include/decl.h	/^struct autopickup_exception {$/;"	s
autopickup_exceptions	include/flag.h	/^	struct autopickup_exception *autopickup_exceptions[2];$/;"	m	struct:instance_flags	typeref:struct:instance_flags::autopickup_exception
autoquiver	include/flag.h	/^	bool  autoquiver;	\/* Automatically fill quiver *\/$/;"	m	struct:flag
autoquiver	src/dothrow.c	/^static void autoquiver(void) {$/;"	f	file:
avis	include/attk.h	/^	bool avis;		\/* Player can see amon *\/$/;"	m	struct:Attk
awaken_monsters	src/music.c	/^awaken_monsters(distance)$/;"	f	file:
awaken_soldiers	src/music.c	/^awaken_soldiers (void) {$/;"	f
ax	include/attk.h	/^	xchar	ax, ay;			\/* Location of attacker *\/$/;"	m	struct:Attk
ay	include/attk.h	/^	xchar	ax, ay;			\/* Location of attacker *\/$/;"	m	struct:Attk
ayou	include/attk.h	/^	bool ayou;		\/* You are the attacker *\/$/;"	m	struct:Attk
b	win/curses/cursinit.c	/^    short b;$/;"	m	struct:nhrgb_type	file:
b_trapped	src/trap.c	/^	void b_trapped(const char *item, int bodypart) {$/;"	f
baalzebub_level	include/decl.h	90;"	d
back_to_cmap	src/display.c	/^static int back_to_cmap(xchar x, xchar y) {$/;"	f	file:
back_to_glyph	src/display.c	/^int back_to_glyph(xchar x,xchar y) {$/;"	f
backfire	src/zap.c	/^static void backfire(struct obj *otmp) {$/;"	f	file:
background	sys/winnt/nttty.c	/^static WORD background = 0;$/;"	v	file:
backsp	sys/winnt/nttty.c	/^backsp()$/;"	f
backsp	win/tty/termcap.c	/^void backsp(void) {$/;"	f
bad_count	src/display.c	/^static int bad_count[MAX_TYPE]; \/* count of positions flagged as bad *\/$/;"	v	file:
bad_location	src/mkmaze.c	/^boolean bad_location(xchar x, xchar y, xchar lx, xchar ly, xchar hx, xchar hy) {$/;"	f
bad_negation	src/options.c	/^static void bad_negation(const char *optname, boolean with_parameter) {$/;"	f	file:
bad_rock	src/hack.c	/^boolean bad_rock(struct monst *mon, xchar x, xchar y) {$/;"	f
badauthoption	src/options.c	/^static void badauthoption(const char *opts) {$/;"	f	file:
badoption	src/options.c	/^static void badoption(const char *opts) {$/;"	f	file:
badpos	src/teleport.c	/^badpos (int x, int y, struct monst *mtmp, unsigned gpflags) {$/;"	f	file:
badspot	src/dungeon.c	1014;"	d	file:
badspot	src/dungeon.c	1024;"	d	file:
badtileoption	src/options.c	/^static void badtileoption(const char *opts) {$/;"	f	file:
bagotricks	src/makemon.c	/^void bagotricks(struct obj *bag) {$/;"	f
bail	win/tty/wintty.c	/^static void bail(const char *mesg) {$/;"	f	file:
ballfall	src/ball.c	/^void ballfall(void) {$/;"	f
bar_abil	src/attrib.c	/^bar_abil[] = { {	 1, &(HPoison_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
bar_tech	src/tech.c	/^bar_tech[] = { {   1, T_BERSERK, 1},$/;"	v	typeref:struct:	file:
barehanded_hit	src/uhitm.c	/^static boolean barehanded_hit = 0;$/;"	v	file:
base	include/dgn_file.h	/^	short	base, rand;$/;"	m	struct:couple
base_term	include/wincurs.h	/^WINDOW *base_term;    \/* underlying terminal window *\/$/;"	v
bases	src/decl.c	/^int bases[MAXOCLASSES] = DUMMY;$/;"	v
basic_damage	src/shk.c	/^static const char basic_damage[] =$/;"	v	file:
baud_rates	sys/share/tclib.c	/^static short baud_rates[] = {$/;"	v	file:
bbubbles	src/mkmaze.c	/^static struct bubble *bbubbles, *ebubbles;$/;"	v	typeref:struct:bubble	file:
bc_felt	include/you.h	/^	int bc_felt;	\/* mask for ball\/chain being felt *\/$/;"	m	struct:you
bc_order	include/you.h	/^	int bc_order;	\/* ball & chain order [see bc_order() in ball.c] *\/$/;"	m	struct:you
bc_order	src/ball.c	/^static int bc_order(void) {$/;"	f	file:
bc_up_buf	sys/share/tclib.c	/^static char bc_up_buf[24];$/;"	v	file:
bclose	src/save.c	/^void bclose(int fd) {$/;"	f
bcsign	src/mkobj.c	/^bcsign (struct obj *otmp) {$/;"	f
befriend_with_obj	include/mondata.h	238;"	d
beg	src/sounds.c	/^beg (struct monst *mtmp) {$/;"	f
begin_burn	src/timeout.c	/^void begin_burn(struct obj *obj, boolean already_lit) {$/;"	f
beginner	include/flag.h	/^	bool  beginner;$/;"	m	struct:flag
bell	include/you.h	/^	bool bell;	\/* carrying Bell	*\/$/;"	m	struct:u_have
betrayed	src/dogmove.c	/^boolean betrayed(struct monst *mtmp) {$/;"	f
beverages	src/potion.c	/^static const char beverages[] = { POTION_CLASS, 0 };$/;"	v	file:
bflush	src/save.c	/^void bflush(int fd) {$/;"	f
bg	include/sp_lev.h	/^	char	fg, bg;$/;"	m	struct:__anon31
bglyph	include/you.h	/^	int bglyph;	\/* glyph under the ball *\/$/;"	m	struct:you
bhit	src/zap.c	/^struct monst *bhit(int ddx, int ddy, int range, int weapon, int (*fhitm)(struct monst*, struct obj*),	int (*fhito)(struct obj*, struct obj*), struct obj **obj_p) {$/;"	f
bhitm	src/zap.c	/^bhitm (struct monst *mtmp, struct obj *otmp) {$/;"	f
bhito	src/zap.c	/^int bhito(struct obj *obj, struct obj *otmp) {$/;"	f
bhitpile	src/zap.c	/^int bhitpile(struct obj *obj, int (*fhito)(struct obj*,struct obj*), int tx, int ty) {$/;"	f
bhitpos	src/decl.c	/^coord bhitpos = DUMMY;$/;"	v
biff	include/flag.h	/^	bool  biff;		\/* enable checking for mail *\/$/;"	m	struct:flag
big_to_little	src/mondata.c	/^int big_to_little(int montype) {$/;"	f
bigmonst	include/mondata.h	9;"	d
bigroom_level	include/decl.h	79;"	d
bill_box_content	src/shk.c	/^static void bill_box_content(struct obj *obj, boolean ininv, boolean dummy, struct monst *shkp) {$/;"	f	file:
bill_dummy_object	src/mkobj.c	/^bill_dummy_object (struct obj *otmp) {$/;"	f
bill_p	include/eshk.h	/^	struct bill_x *bill_p;$/;"	m	struct:eshk	typeref:struct:eshk::bill_x
bill_x	include/eshk.h	/^struct bill_x {$/;"	s
billct	include/eshk.h	/^	int billct;		\/* no. of entries of bill_p[] in use *\/$/;"	m	struct:eshk
billobjs	src/decl.c	/^struct obj *billobjs = NULL;$/;"	v	typeref:struct:obj
billsz	include/eshk.h	/^	int billsz;		\/* no. of entries of bill_p[] allocated *\/$/;"	m	struct:eshk
bimanual	include/obj.h	214;"	d
bind_cmd	include/func_tab.h	/^	struct ext_func_tab * bind_cmd;$/;"	m	struct:key_tab	typeref:struct:key_tab::ext_func_tab
bind_key	src/cmd.c	/^static void bind_key(unsigned char key, char* command) {$/;"	f	file:
binding_list_tab	include/func_tab.h	/^struct binding_list_tab {$/;"	s
bindinglist	src/cmd.c	/^static struct binding_list_tab *bindinglist = NULL;$/;"	v	typeref:struct:binding_list_tab	file:
birthdate	src/topten.c	/^	long deathdate, birthdate;$/;"	m	struct:toptenentry	file:
birthstones	src/gypsy.c	/^static short birthstones[12] = {$/;"	v	file:
bite	src/eat.c	/^static int bite(void) {$/;"	f	file:
bite_monster	src/eat.c	/^boolean bite_monster(struct monst *mon) {$/;"	f
bknown	include/obj.h	/^	bool bknown;	\/* blessing or curse known *\/$/;"	m	struct:obj
blackmarket_level	include/decl.h	117;"	d
blast	src/explode.c	/^	xchar blast;	\/* blast symbol *\/$/;"	m	struct:__anon8	file:
bless	src/mkobj.c	/^void bless (struct obj *otmp) {$/;"	f
blessed	include/obj.h	/^	bool blessed;$/;"	m	struct:obj
blessedftn	include/rm.h	455;"	d
blessorcurse	src/mkobj.c	/^blessorcurse (struct obj *otmp, int chance) {$/;"	f
blindgas	src/trap.c	/^static const char * const blindgas[6] =$/;"	v	file:
blitz_chi_strike	src/tech.c	/^static int blitz_chi_strike (void) {$/;"	f	file:
blitz_cmd	include/tech.h	/^	const char *blitz_cmd; \/* the typed command *\/$/;"	m	struct:blitz_tab
blitz_dash	src/tech.c	/^static int blitz_dash (void) {$/;"	f	file:
blitz_e_fist	src/tech.c	/^static int blitz_e_fist (void) {$/;"	f	file:
blitz_funct	include/tech.h	/^	int (*blitz_funct)(void); \/* function called when the command is executed *\/$/;"	m	struct:blitz_tab
blitz_g_slam	src/tech.c	/^blitz_g_slam (void) {$/;"	f	file:
blitz_len	include/tech.h	/^	const int blitz_len; \/* The length of blitz_cmd *\/$/;"	m	struct:blitz_tab
blitz_power_surge	src/tech.c	/^static int blitz_power_surge (void) {$/;"	f	file:
blitz_pummel	src/tech.c	/^static int blitz_pummel (void) {$/;"	f	file:
blitz_spirit_bomb	src/tech.c	/^static int blitz_spirit_bomb (void) {$/;"	f	file:
blitz_tab	include/tech.h	/^struct blitz_tab {$/;"	s
blitz_tech	include/tech.h	/^	const int blitz_tech; \/* the tech designation - determines tech needed$/;"	m	struct:blitz_tab
blitz_type	include/tech.h	/^	const int blitz_type; \/* the type of blitz chain *\/$/;"	m	struct:blitz_tab
blitzes	src/tech.c	/^static const struct blitz_tab blitzes[] = {$/;"	v	typeref:struct:blitz_tab	file:
blkmar_guards	src/shk.c	/^void blkmar_guards (struct monst *shkp) {$/;"	f
block_door	src/shk.c	/^boolean block_door(xchar x, xchar y) {$/;"	f
block_entry	src/shk.c	/^boolean block_entry(xchar x, xchar y) {$/;"	f
block_point	src/vision.c	/^block_point (int x, int y) {$/;"	f
blocked	include/prop.h	/^	long blocked;					\/* Same assignments as extrinsic *\/$/;"	m	struct:prop
blocked_boulder	src/pray.c	/^static boolean blocked_boulder(int dx, int dy) {$/;"	f	file:
blow_up_landmine	src/trap.c	/^blow_up_landmine (struct trap *trap) {$/;"	f
blue_on_blue	src/mhitu.c	/^static bool blue_on_blue(struct monst *mtmp) {$/;"	f	file:
bm	include/lev.h	/^	uchar *bm;	\/* pointer to the bubble bit mask *\/$/;"	m	struct:bubble
bo_id	include/eshk.h	/^	unsigned bo_id;$/;"	m	struct:bill_x
body	include/nhlan.h	/^	char body[MAX_BODY_SIZE];$/;"	m	struct:lan_mail_struct
body_in_ram	include/nhlan.h	/^	boolean body_in_ram;	\/* true means body in memory not file *\/$/;"	m	struct:lan_mail_struct
body_part	src/polyself.c	/^body_part (int part) {$/;"	f
body_to_glyph	include/display.h	317;"	d
bogus_key	sys/winnt/nhraykey.c	/^static INPUT_RECORD bogus_key;$/;"	v	file:
bogusmons	src/do_name.c	/^static const char * const bogusmons[] = {$/;"	v	file:
bomb_blow	src/timeout.c	/^void bomb_blow(void * arg, long timeout) {$/;"	f
boneid	include/dungeon.h	/^	char	boneid;		\/* character to id dungeon in bones files *\/$/;"	m	struct:dungeon
boneid	include/dungeon.h	/^	char    boneid;		\/* character to id level in bones files *\/$/;"	m	struct:s_level
bones	src/files.c	/^char bones[] = "bonesnn.xxx";$/;"	v
boneschar	include/dgn_file.h	/^	char	boneschar;$/;"	m	struct:tmpdungeon
boneschar	include/dgn_file.h	/^	char	boneschar;$/;"	m	struct:tmplevel
book	include/you.h	/^	bool book;	\/* carrying Book	*\/$/;"	m	struct:u_have
book	src/spell.c	/^static struct obj *book;	\/* last\/current book being xscribed *\/$/;"	v	typeref:struct:obj	file:
book_disappears	src/spell.c	/^void book_disappears (struct obj *obj) {$/;"	f
book_substitution	src/spell.c	/^void book_substitution (struct obj *old_obj, struct obj *new_obj) {$/;"	f
boolean	include/global.h	/^typedef xchar	boolean;		\/* 0 or 1 *\/$/;"	t
boolopt	src/options.c	/^} boolopt[] = {$/;"	v	typeref:struct:Bool_Opt	file:
boolopt	win/proxy/getopt.c	/^} *boolopt = NULL;$/;"	v	typeref:struct:Bool_Opt	file:
booltileopt	src/options.c	/^} booltileopt[] = {$/;"	v	typeref:struct:Bool_Tile_Opt	file:
boomhit	src/zap.c	/^struct monst * boomhit(int dx, int dy) {$/;"	f
boostknow	src/spell.c	30;"	d	file:
boot_count	include/flag.h	/^	int      boot_count; \/* boots from fishing pole *\/$/;"	m	struct:flag
border	win/curses/curswins.c	/^    bool border;                \/* Whether window has a visible border *\/$/;"	m	struct:__anon22	file:
borg_input	src/borg.c	/^char borg_input(void) {$/;"	f
borg_line	src/borg.c	/^char borg_line[80] = {0};$/;"	v
borg_on	src/borg.c	/^bool borg_on=false;$/;"	v
born	include/decl.h	/^	uchar	born;$/;"	m	struct:mvitals
bot	src/botl.c	/^void bot(void) {$/;"	f
bot1	src/botl.c	/^static void bot1(void) {$/;"	f	file:
bot1str	src/botl.c	/^void bot1str(char *newbot1)$/;"	f
bot2	src/botl.c	/^static void bot2(void) {$/;"	f	file:
bot2_abbrev	src/botl.c	/^static int bot2_abbrev = 0;	\/* Line 2 abbreviation level (max 4) *\/$/;"	v	file:
bot2str	src/botl.c	/^bot2str(char *newbot2) {$/;"	f
bot_raw	src/botl.c	/^static void bot_raw(boolean reconfig) {$/;"	f	file:
bot_reconfig	src/botl.c	/^void bot_reconfig(void) {$/;"	f
bot_set_handler	src/botl.c	/^void bot_set_handler(void (*handler)(void)) {$/;"	f
botl	include/flag.h	/^	bool  botl;		\/* partially redo status line *\/$/;"	m	struct:flag
botl_player	src/botl.c	/^static char *botl_player(void) {$/;"	f	file:
botl_score	src/botl.c	/^long botl_score(void) {$/;"	f
botl_strength	src/botl.c	/^static char *botl_strength(void) {$/;"	f	file:
botlx	include/flag.h	/^	bool  botlx;		\/* print an entirely new bottom line *\/$/;"	m	struct:flag
bottlename	src/potion.c	/^const char * bottlename (void) {$/;"	f
bottlenames	src/potion.c	/^const char *bottlenames[] = {$/;"	v
boulder_class	src/monmove.c	/^static const char boulder_class[] = { ROCK_CLASS, 0 };$/;"	v	file:
boulder_hits_pool	src/do.c	/^boolean boulder_hits_pool(struct obj *otmp, int rx, int ry, boolean pushing) {$/;"	f
bouldersym	include/flag.h	/^	uchar	bouldersym;	\/* symbol for boulder display *\/$/;"	m	struct:instance_flags
bound_digging	src/mkmaze.c	/^void bound_digging(void) {$/;"	f
bounding_box	include/region.h	/^	NhRect bounding_box;		\/* Bounding box of the region *\/$/;"	m	struct:__anon29
box	src/lock.c	/^	struct obj *box;$/;"	m	struct:xlock_s	typeref:struct:xlock_s::obj	file:
boxiprobs	src/mkobj.c	/^const struct icp boxiprobs[] = {$/;"	v	typeref:struct:icp
boxlock	src/lock.c	/^boolean boxlock(struct obj *obj, struct obj *otmp) {$/;"	f
bp_to_obj	src/shk.c	/^static struct obj *bp_to_obj(struct bill_x *bp) {$/;"	f	file:
bquan	include/eshk.h	/^	long bquan;		\/* amount used up *\/$/;"	m	struct:bill_x
br_string	src/dungeon.c	/^static const char *br_string(int type) {$/;"	f	file:
branch	include/dungeon.h	/^typedef struct branch {$/;"	s
branch	include/dungeon.h	/^} branch;$/;"	t	typeref:struct:branch
branch_val	src/dungeon.c	320;"	d	file:
branches	include/dgn_file.h	/^	        branches;$/;"	m	struct:tmpdungeon
branches	src/dungeon.c	/^static branch *branches = NULL;	\/* dungeon branch list		   *\/$/;"	v	file:
break_armor	src/polyself.c	/^break_armor() {$/;"	f	file:
break_statue	src/zap.c	/^boolean break_statue(struct obj *obj) {$/;"	f
breakarm	src/mondata.c	/^boolean breakarm(struct permonst *ptr) {$/;"	f
breakmsg	src/dothrow.c	/^static void breakmsg(struct obj *obj, boolean in_view) {$/;"	f	file:
breakobj	src/dothrow.c	/^static void breakobj(struct obj *obj, xchar x, xchar y, boolean hero_caused, boolean from_invent) {$/;"	f	file:
breaks	src/dothrow.c	/^int breaks(struct obj *obj, xchar x, xchar y) {$/;"	f
breaksink	src/fountain.c	/^void breaksink(int x, int y) {$/;"	f
breaktest	src/dothrow.c	/^boolean breaktest(struct obj *obj) {$/;"	f
breaktoilet	src/fountain.c	/^void breaktoilet(int x, int y) {$/;"	f
breamm	src/mhitm.c	/^static int breamm(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f	file:
breamspot	src/mthrowu.c	/^boolean breamspot( struct monst *mtmp, struct attack  *mattk, xchar ax, xchar ay) {$/;"	f
breamu	src/mthrowu.c	/^int breamu (			struct monst *mtmp, struct attack *mattk) {$/;"	f
breathless	include/mondata.h	43;"	d
breathwep	src/mthrowu.c	/^const char *breathwep[] = {$/;"	v
bribe	src/minion.c	/^long bribe(struct monst *mtmp) {$/;"	f
bubble	include/lev.h	/^struct bubble {$/;"	s
bucket	src/restore.c	/^struct bucket {$/;"	s	file:
buf	sys/unix/unixunix.c	/^static struct stat buf;$/;"	v	typeref:struct:stat	file:
buffering	src/save.c	/^static boolean buffering = false;$/;"	v	file:
bufoff	src/save.c	/^void bufoff(int fd) {$/;"	f
bufon	src/save.c	/^void bufon(int fd) {$/;"	f
build_plselection_prompt	src/role.c	/^build_plselection_prompt (char *buf, int buflen, int rolenum, int racenum, int gendnum, int alignnum) {$/;"	f
build_room	src/sp_lev.c	/^static void build_room(room *r, room *pr) {$/;"	f	file:
bullets	src/dothrow.c	/^static const char bullets[] =$/;"	v	file:
bullets	src/wield.c	/^static const char bullets[] =	\/* (note: different from dothrow.c) *\/$/;"	v	file:
burdentype	src/options.c	/^static const char *burdentype[] = {$/;"	v	file:
buriedobjlist	include/rm.h	/^	struct obj		*buriedobjlist;$/;"	m	struct:__anon30	typeref:struct:__anon30::obj
burn_away_slime	src/timeout.c	/^void burn_away_slime (void) {$/;"	f
burn_dmg	src/trap.c	46;"	d	file:
burn_dmg	src/trap.c	88;"	d	file:
burn_faster	src/timeout.c	/^void burn_faster (struct obj *obj, long adj) {$/;"	f
burn_floor_paper	src/zap.c	/^int burn_floor_paper(int x, int y, boolean give_feedback, boolean u_caused) {$/;"	f
burn_object	src/timeout.c	/^void burn_object(void * arg, long timeout) {$/;"	f
burnarmor	src/trap.c	/^boolean			burnarmor(struct monst *victim) {$/;"	f
bury_an_obj	src/dig.c	/^struct obj *bury_an_obj(struct obj *otmp) {$/;"	f
bury_objs	src/dig.c	/^void bury_objs(int x, int y) {$/;"	f
bust_door_breath	src/monmove.c	/^static int bust_door_breath (struct monst *mtmp) {$/;"	f	file:
buzz	src/zap.c	/^void buzz(int type, int nd, xchar sx, xchar sy, int dx, int dy) {$/;"	f
buzzmu	src/mcastu.c	/^bool buzzmu(struct monst *mtmp, struct attack  *mattk) {$/;"	f
bw_FILE	src/save.c	/^static FILE *bw_FILE = 0;$/;"	v	file:
bw_fd	src/save.c	/^static int bw_fd = -1;$/;"	v	file:
bwrite	src/save.c	/^void bwrite(int fd, void *loc, unsigned num) {$/;"	f
bxmax	src/mkmaze.c	869;"	d	file:
bxmin	src/mkmaze.c	867;"	d	file:
bydoor	src/mklev.c	/^static boolean bydoor(xchar x, xchar y) {$/;"	f	file:
bymax	src/mkmaze.c	870;"	d	file:
bymin	src/mkmaze.c	868;"	d	file:
bypass	include/obj.h	/^	bool bypass;	\/* mark this as an object to be skipped by bhito() *\/$/;"	m	struct:obj
bypass_obj	src/worn.c	/^bypass_obj (struct obj *obj) {$/;"	f
bypasses	include/flag.h	/^	bool  bypasses;	\/* bypass flag is set on at least one fobj *\/$/;"	m	struct:flag
c_amber	include/decl.h	/^	const char	*const c_black, *const c_amber, *const c_golden,$/;"	m	struct:c_color_names
c_armor	src/do_wear.c	/^static const char c_armor[]  = "armor",$/;"	v	file:
c_axe	src/do_wear.c	/^                                                                                                                                                                               c_axe[]    = "axe",$/;"	v	file:
c_black	include/decl.h	/^	const char	*const c_black, *const c_amber, *const c_golden,$/;"	m	struct:c_color_names
c_blue	include/decl.h	/^	           *const c_silver, *const c_blue, *const c_purple,$/;"	m	struct:c_color_names
c_boots	src/do_wear.c	/^                                                                                               c_boots[]  = "boots",$/;"	v	file:
c_cloak	src/do_wear.c	/^                                                               c_cloak[]  = "cloak",$/;"	v	file:
c_color_names	include/decl.h	/^extern struct c_color_names {$/;"	s
c_color_names	src/decl.c	/^struct c_color_names c_color_names = {$/;"	v	typeref:struct:c_color_names
c_gloves	src/do_wear.c	/^                                                                               c_gloves[] = "gloves",$/;"	v	file:
c_golden	include/decl.h	/^	const char	*const c_black, *const c_amber, *const c_golden,$/;"	m	struct:c_color_names
c_green	include/decl.h	/^	           *const c_light_blue,*const c_red, *const c_green,$/;"	m	struct:c_color_names
c_helmet	src/do_wear.c	/^                                                                                                               c_helmet[] = "helmet",$/;"	v	file:
c_light_blue	include/decl.h	/^	           *const c_light_blue,*const c_red, *const c_green,$/;"	m	struct:c_color_names
c_obj_colors	src/decl.c	/^const char *c_obj_colors[] = {$/;"	v
c_purple	include/decl.h	/^	           *const c_silver, *const c_blue, *const c_purple,$/;"	m	struct:c_color_names
c_red	include/decl.h	/^	           *const c_light_blue,*const c_red, *const c_green,$/;"	m	struct:c_color_names
c_shield	src/do_wear.c	/^                                                                                                                               c_shield[] = "shield",$/;"	v	file:
c_shirt	src/do_wear.c	/^                                               c_shirt[]  = "shirt",$/;"	v	file:
c_silver	include/decl.h	/^	           *const c_silver, *const c_blue, *const c_purple,$/;"	m	struct:c_color_names
c_suit	src/do_wear.c	/^                               c_suit[]   = "suit",$/;"	v	file:
c_sword	src/do_wear.c	/^                                                                                                                                                               c_sword[]  = "sword",$/;"	v	file:
c_that_	src/do_wear.c	/^                                                                                                                                                                                               c_that_[]  = "that";$/;"	v	file:
c_weapon	src/do_wear.c	/^                                                                                                                                               c_weapon[] = "weapon",$/;"	v	file:
c_white	include/decl.h	/^	           *const c_white;$/;"	m	struct:c_color_names
calc_capacity	src/hack.c	/^int calc_capacity(int xtra_wt) {$/;"	f
call_kops	src/shk.c	/^static void call_kops(struct monst *shkp, boolean nearshop) {$/;"	f	file:
callable	src/do_name.c	/^static const char callable[] = {$/;"	v	file:
callback_proc	include/region.h	/^typedef bool (*callback_proc)(void*, void*);$/;"	t
callbacks	src/region.c	/^static callback_proc callbacks[] = {$/;"	v	file:
calm_nymphs	src/music.c	/^calm_nymphs(distance)$/;"	f	file:
can	src/cmd.c	/^                                                     can[]  = "can ",  could[] = "could ";$/;"	v	file:
can_advance	src/weapon.c	/^static boolean can_advance(int skill, boolean speedy) {$/;"	f	file:
can_be_hatched	src/mon.c	/^int can_be_hatched(int mnum) {$/;"	f
can_betray	include/mondata.h	156;"	d
can_blnd	src/mondata.c	/^boolean can_blnd(struct monst *magr, struct monst *mdef, uchar aatyp, struct obj *obj	) {$/;"	f
can_breathe	include/mondata.h	120;"	d
can_carry	src/mon.c	/^boolean can_carry(struct monst *mtmp, struct obj *otmp) {$/;"	f
can_enter_f	include/region.h	/^	short can_enter_f;		\/* Function to call to check wether the player$/;"	m	struct:__anon29
can_if_buried	include/func_tab.h	/^	boolean	can_if_buried;$/;"	m	struct:ext_func_tab
can_if_buried	include/func_tab.h	/^	boolean	can_if_buried;$/;"	m	struct:menu_tab
can_leave_f	include/region.h	/^	short can_leave_f;		\/* Function to call to check wether the player$/;"	m	struct:__anon29
can_limitbreak	src/tech.c	241;"	d	file:
can_make_bones	src/bones.c	/^boolean can_make_bones(void) {$/;"	f
can_ooze	src/monmove.c	/^boolean can_ooze(struct monst *mtmp) {$/;"	f
can_practice	src/weapon.c	/^static boolean can_practice(int skill) {$/;"	f	file:
can_pray	src/pray.c	/^boolean can_pray(boolean praying) {$/;"	f
can_reach_floor	src/engrave.c	/^boolean can_reach_floor(void) {$/;"	f
can_reach_floorobj	src/eat.c	/^boolean can_reach_floorobj(void) {$/;"	f
can_reach_location	src/dogmove.c	/^static boolean can_reach_location(struct monst *mon, xchar mx, xchar my, xchar fx, xchar fy) {$/;"	f	file:
can_read_file	src/files.c	/^boolean can_read_file(const char *filename) {$/;"	f
can_ride	src/steed.c	/^boolean can_ride(struct monst *mtmp) {$/;"	f
can_saddle	src/steed.c	/^boolean can_saddle(struct monst *mtmp) {$/;"	f
can_teleport	include/mondata.h	80;"	d
can_track	src/mondata.c	/^boolean can_track(struct permonst *ptr) {$/;"	f
can_twoweapon	src/wield.c	/^int can_twoweapon (void) {$/;"	f
cancel_don	src/do_wear.c	/^void cancel_don(void) {$/;"	f
cancel_item	src/zap.c	/^void cancel_item(struct obj *obj) {$/;"	f
cancel_monst	src/zap.c	/^boolean cancel_monst(struct monst	*mdef, struct obj	*obj, boolean			youattack, boolean allow_cancel_kill, boolean self_cancel) {$/;"	f
cancelled_don	src/do_wear.c	/^static boolean cancelled_don = false;$/;"	v	file:
canchoke	src/eat.c	/^	bool canchoke;	\/* was satiated at beginning *\/$/;"	m	struct:__anon6	file:
candle_light_range	src/light.c	/^int candle_light_range(struct obj *obj) {$/;"	f
canletgo	src/do.c	/^boolean canletgo(struct obj *obj, const char *word) {$/;"	f
cannot_be_tamed	include/mondata.h	157;"	d
cansee	include/vision.h	35;"	d
canseemon	include/display.h	87;"	d
canseeself	include/display.h	143;"	d
canspotmon	include/display.h	99;"	d
cant_create	src/read.c	/^boolean cant_create(int *mtype, boolean revival) {$/;"	f
cantweararm	include/mondata.h	128;"	d
cantwield	include/mondata.h	121;"	d
canwearobj	src/do_wear.c	/^int canwearobj(struct obj *otmp, long *mask, boolean noisy) {$/;"	f
card_draw	src/gypsy.c	/^static xchar card_draw(struct monst *mtmp) {$/;"	f	file:
card_istrump	include/egyp.h	15;"	d
card_name	src/gypsy.c	/^static void card_name(xchar num, char *buf) {$/;"	f	file:
card_rank	include/egyp.h	17;"	d
card_shuffle	src/gypsy.c	/^static void card_shuffle(struct monst *mtmp) {$/;"	f	file:
card_suit	include/egyp.h	16;"	d
card_trump	include/egyp.h	18;"	d
cards	include/egyp.h	/^	xchar cards[CARD_TOTAL];	\/* Shuffled cards *\/$/;"	m	struct:egyp
carnivorous	include/mondata.h	87;"	d
carried	include/obj.h	269;"	d
carry_count	src/pickup.c	/^static long carry_count(struct obj *obj, struct obj *container, long count, boolean telekinesis, int *wt_before, int *wt_after) {$/;"	f	file:
carry_obj_effects	src/invent.c	/^void carry_obj_effects(struct monst *mon, struct obj *obj) {$/;"	f
carrying	src/invent.c	/^struct obj *carrying(int type) {$/;"	f
cary	include/artifact.h	/^	struct attack attk, defn, cary;$/;"	m	struct:artifact	typeref:struct:artifact::
cast_cleric_spell	src/mcastu.c	/^static void cast_cleric_spell(struct monst *mtmp, int dmg, int spellnum) {$/;"	f	file:
cast_protection	src/spell.c	/^static void cast_protection() {$/;"	f	file:
cast_wizard_spell	src/mcastu.c	/^static void cast_wizard_spell(struct monst *mtmp, int dmg, int spellnum) {$/;"	f	file:
castmu	src/mcastu.c	/^int castmu(struct monst *mtmp, struct attack *mattk, boolean thinks_it_foundyou, boolean foundyou) {$/;"	f
catch_lit	src/apply.c	/^boolean catch_lit(struct obj *obj) {$/;"	f
catch_stp	sys/share/ioctl.c	/^void catch_stp(void) {$/;"	f
catchup_dgn_growths	src/hack.c	/^void catchup_dgn_growths(int mvs) {$/;"	f
catmore	src/decl.c	/^char *catmore = 0;		\/* default pager *\/$/;"	v
catname	src/decl.c	/^char catname[PL_PSIZ] = DUMMY;$/;"	v
cav_abil	src/attrib.c	/^cav_abil[] = { {	 7, &(HFast), "quick", "slow" },$/;"	v	typeref:struct:innate	file:
cav_tech	src/tech.c	/^cav_tech[] = { {   1, T_PRIMAL_ROAR, 1},$/;"	v	typeref:struct:	file:
cb_display_inventory	win/proxy/callback.c	/^cb_display_inventory()$/;"	f	file:
cb_display_score	win/proxy/callback.c	/^cb_display_score()$/;"	f	file:
cb_dlbh_fopen	win/proxy/callback.c	/^static int cb_dlbh_fopen(const char *path, const char *mode) {$/;"	f	file:
cb_flush_screen	win/proxy/callback.c	/^cb_flush_screen()$/;"	f	file:
cb_free_extended_commands	win/proxy/callback.c	/^cb_free_extended_commands(struct nhproxy_cb_get_extended_commands_res *list)$/;"	f	file:
cb_free_player_choices	win/proxy/callback.c	/^cb_free_player_choices(choices)$/;"	f	file:
cb_free_tilesets	win/proxy/callback.c	/^cb_free_tilesets(struct nhproxy_cb_get_tilesets_res *list)$/;"	f	file:
cb_free_valid_selections	win/proxy/callback.c	/^cb_free_valid_selections(vs)$/;"	f	file:
cb_get_extended_commands	win/proxy/callback.c	/^cb_get_extended_commands()$/;"	f	file:
cb_get_player_choices	win/proxy/callback.c	/^cb_get_player_choices()$/;"	f	file:
cb_get_standard_winid	win/proxy/callback.c	/^cb_get_standard_winid(const char *window)$/;"	f	file:
cb_get_tilesets	win/proxy/callback.c	/^cb_get_tilesets()$/;"	f	file:
cb_get_valid_selections	win/proxy/callback.c	/^cb_get_valid_selections()$/;"	f	file:
cb_interface_mode	win/proxy/callback.c	/^cb_interface_mode(mode)$/;"	f	file:
cb_parse_options	win/proxy/callback.c	/^cb_parse_options(char *opts)$/;"	f	file:
cb_quit_game	win/proxy/callback.c	/^cb_quit_game()$/;"	f	file:
cbreak	include/flag.h	/^	bool  cbreak;	\/* in cbreak mode, rogue format *\/$/;"	m	struct:instance_flags
cbrkflgs	sys/share/unixtty.c	107;"	d	file:
cbrkflgs	sys/share/unixtty.c	52;"	d	file:
cc	sys/winnt/nh340key.c	/^coord *cc;$/;"	v
cc	sys/winnt/nhdefkey.c	/^coord *cc;$/;"	v
cc	sys/winnt/nhraykey.c	/^coord *cc;$/;"	v
ccount	sys/winnt/nttty.c	/^static DWORD ccount, acount;$/;"	v	file:
ceiling	src/engrave.c	/^const char *ceiling(int x, int y) {$/;"	f
celibacy	include/you.h	/^	long	celibacy;	\/* How many times you've played around with *ubbi *\/$/;"	m	struct:u_conduct
center	src/rip.c	/^center(line, text)$/;"	f	file:
cglyph	include/you.h	/^	int cglyph;	\/* glyph under the chain *\/$/;"	m	struct:you
cgod	include/you.h	/^	const char *lgod, *ngod, *cgod; \/* god names (from pray.c) *\/$/;"	m	struct:Role
ch	win/curses/curswins.c	/^    glyph_t ch;                 \/* character *\/$/;"	m	struct:nhchar	file:
chain	include/dgn_file.h	/^	int	chain;		\/* index into tmplevel array (chained branch)*\/$/;"	m	struct:tmpbranch
chain	include/dgn_file.h	/^	int	chance, rndlevs, chain, flags;$/;"	m	struct:tmplevel
cham_to_pm	src/mon.c	/^static short cham_to_pm[] = {$/;"	v	file:
chance	include/dgn_file.h	/^	        chance,$/;"	m	struct:tmpdungeon
chance	include/dgn_file.h	/^	int	chance, rndlevs, chain, flags;$/;"	m	struct:tmplevel
chance	include/sp_lev.h	/^	xchar rtype, chance, rlit, filled;$/;"	m	struct:_room
chance	include/sp_lev.h	/^	xchar x, y, chance, class, appear;$/;"	m	struct:__anon35
chance	include/sp_lev.h	/^	xchar x, y, chance, class, containment;$/;"	m	struct:__anon36
chance	include/sp_lev.h	/^	xchar x, y, chance, type;$/;"	m	struct:__anon34
chance	src/lock.c	/^	int picktyp, chance, usedtime;$/;"	m	struct:xlock_s	file:
change_background	include/winprocs.h	121;"	d
change_bind_list	src/cmd.c	/^static void change_bind_list(void) {$/;"	f	file:
change_color	include/winprocs.h	119;"	d
change_inv_order	src/options.c	/^static int change_inv_order(char *op) {$/;"	f	file:
change_luck	src/attrib.c	/^void change_luck(schar n) {$/;"	f
change_sex	src/polyself.c	/^change_sex (void) {$/;"	f
chaotic_minion	src/minion.c	/^int chaotic_minion(int difficulty) {$/;"	f
chaotic_quest_level	include/decl.h	116;"	d
charged_objs	src/zap.c	/^static const char charged_objs[] = { WAND_CLASS, WEAPON_CLASS, ARMOR_CLASS,$/;"	v	file:
charm_monsters	src/music.c	/^charm_monsters(distance)$/;"	f	file:
charm_snakes	src/music.c	/^charm_snakes(distance)$/;"	f	file:
chat_with_guardian	src/quest.c	/^chat_with_guardian() {$/;"	f	file:
chat_with_leader	src/quest.c	/^chat_with_leader() {$/;"	f	file:
chat_with_nemesis	src/quest.c	/^chat_with_nemesis() {$/;"	f	file:
chdirx	sys/share/pcmain.c	/^void chdirx(char *dir, bool wr) {$/;"	f
chdirx	sys/unix/unixmain.c	/^static void chdirx(const char *dir, bool wr) {$/;"	f	file:
chdrive	sys/winnt/winnt.c	/^chdrive(str)$/;"	f
cheapest_item	src/shk.c	/^static long cheapest_item( struct monst *shkp) {$/;"	f	file:
cheater	include/quest.h	/^	bool cheater;		\/* set if cheating detected *\/$/;"	m	struct:q_score
check_branch	build-linux/src/dgn_yacc.c	/^check_branch()$/;"	f
check_caitiff	src/uhitm.c	/^void check_caitiff (struct monst *mtmp) {$/;"	f
check_capacity	src/hack.c	/^boolean check_capacity(const char *str) {$/;"	f
check_contained	src/mkobj.c	/^static void check_contained(struct obj *container, const char *mesg) {$/;"	f	file:
check_coord	util/lev_main.c	/^void check_coord(int x, int y, const char *str) {$/;"	f
check_credit	src/shk.c	/^static long check_credit(long tmp, struct monst *shkp) {$/;"	f	file:
check_dungeon	build-linux/src/dgn_yacc.c	/^check_dungeon()$/;"	f
check_here	src/pickup.c	/^static void check_here(boolean picked_some) {$/;"	f	file:
check_leash	src/apply.c	/^void check_leash(struct monst *mon, xchar x, xchar y, boolean reset) {$/;"	f
check_leash_pos	src/apply.c	/^static boolean check_leash_pos(void * arg, int x, int y) {$/;"	f	file:
check_leashed_pet	src/apply.c	/^static void check_leashed_pet(struct obj *leash, struct monst *pet, boolean you_moving, boolean reset, xchar x, xchar y) {$/;"	f	file:
check_level	build-linux/src/dgn_yacc.c	/^check_level()$/;"	f
check_linux_console	sys/share/unixtty.c	/^void check_linux_console(void) {$/;"	f
check_map_spot	src/detect.c	/^static boolean check_map_spot(int x, int y, char oclass, uint material) {$/;"	f	file:
check_monster_char	util/lev_main.c	/^bool check_monster_char(char c) {$/;"	f
check_object_char	util/lev_main.c	/^bool check_object_char(char c) {$/;"	f
check_pos	src/display.c	/^static int check_pos(int x, int y, int which) {$/;"	f	file:
check_recordfile	src/files.c	/^void check_recordfile(const char *dir) {$/;"	f
check_room	src/sp_lev.c	/^boolean check_room(xchar *lowx, xchar *ddx, xchar *lowy, xchar *ddy, boolean vault) {$/;"	f
check_sco_console	sys/share/unixtty.c	/^void check_sco_console(void) {$/;"	f
check_shop_obj	src/dothrow.c	/^static void check_shop_obj(struct obj *obj, xchar x, xchar y, boolean broken) {$/;"	f	file:
check_special_room	src/hack.c	/^void check_special_room(boolean newlev) {$/;"	f
check_subrooms	util/lev_main.c	/^bool check_subrooms(void) {$/;"	f
check_unpaid	src/shk.c	/^void check_unpaid(struct obj *otmp) {$/;"	f
check_unpaid_usage	src/shk.c	/^void check_unpaid_usage(struct obj *otmp, boolean altusage) {$/;"	f
check_version	src/version.c	/^bool check_version(struct version_info *version_data, const char *filename, boolean complain) {$/;"	f
checkfile	src/pager.c	/^static void checkfile(char *inp, struct permonst *pm, bool user_typed_name, bool without_asking) {$/;"	f	file:
chest_shatter_msg	src/lock.c	/^static void chest_shatter_msg(struct obj *otmp) {$/;"	f	file:
chest_trap	src/trap.c	/^	boolean chest_trap( struct obj *obj, int bodypart, boolean disarm) {$/;"	f
chew	include/decl.h	/^	boolean down, chew, warned, quiet;$/;"	m	struct:dig_info
child	sys/unix/unixunix.c	/^child(wt)$/;"	f
choice_count	src/makemon.c	/^	int choice_count;$/;"	m	struct:__anon10	file:
choke	src/eat.c	/^static void choke(struct obj *food) {$/;"	f	file:
choke_dialogue	src/timeout.c	/^static void choke_dialogue() {$/;"	f	file:
choke_texts	src/timeout.c	/^static const char * const choke_texts[] = {$/;"	v	file:
choke_texts2	src/timeout.c	/^static const char * const choke_texts2[] = {$/;"	v	file:
choose_classes_menu	src/options.c	/^int choose_classes_menu(const char *prompt, int category, boolean way, char *class_list, char *class_select) {$/;"	f
choose_clerical_spell	src/mcastu.c	/^static int choose_clerical_spell(int spellnum) {$/;"	f	file:
choose_magic_spell	src/mcastu.c	/^static int choose_magic_spell(int spellval) {$/;"	f	file:
choose_windows	src/windows.c	/^choose_windows (const char *s) {$/;"	f
christen_monst	src/do_name.c	/^struct monst *christen_monst(struct monst *mtmp, const char *name) {$/;"	f
chrole	include/qtext.h	/^	struct qtmsg chrole[NUM_ROLES][MAX_QT];$/;"	m	struct:qtlists	typeref:struct:qtlists::qtmsg
chwepon	src/wield.c	/^int chwepon (struct obj *otmp, int amount) {$/;"	f
circle_data	src/vision.c	/^char circle_data[] = {$/;"	v
circle_ptr	include/vision.h	61;"	d
circle_start	src/vision.c	/^char circle_start[] = {$/;"	v
ck_bag	src/pickup.c	/^ck_bag(obj)$/;"	f	file:
ckmailstatus	src/mail.c	/^void ckmailstatus(void) {$/;"	f
ckunpaid	src/invent.c	/^static int ckunpaid(struct obj *otmp) {$/;"	f	file:
ckvalidcat	src/invent.c	/^static int ckvalidcat(struct obj *otmp) {$/;"	f	file:
cl_end	sys/winnt/nttty.c	/^cl_end()$/;"	f
cl_end	win/tty/termcap.c	/^void cl_end(void) {$/;"	f
cl_eos	sys/winnt/nttty.c	/^cl_eos()$/;"	f
cl_eos	win/tty/termcap.c	/^void cl_eos(void) {$/;"	f
classic_status	include/flag.h	/^	bool  classic_status;    \/* What kind of horizontal statusbar to use *\/$/;"	m	struct:instance_flags
classmon	src/topten.c	/^static int classmon(char *plch, boolean fem) {$/;"	f	file:
cleanup	src/timeout.c	/^	timeout_proc f, cleanup;$/;"	m	struct:__anon19	file:
cleanup_burn	src/timeout.c	/^static void cleanup_burn(void * arg, long expire_time) {$/;"	f	file:
cleanup_unpoly	src/timeout.c	/^static void cleanup_unpoly(void * arg, long timeout) {$/;"	f	file:
clear_bypasses	src/worn.c	/^clear_bypasses (void) {$/;"	f
clear_fcorr	src/vault.c	/^static boolean clear_fcorr(struct monst *grd, boolean forceshow) {$/;"	f	file:
clear_glyph_buffer	src/display.c	/^void clear_glyph_buffer(void) {$/;"	f
clear_hero_inside	include/region.h	29;"	d
clear_heros_fault	include/region.h	31;"	d
clear_id_mapping	src/restore.c	/^static void clear_id_mapping() {$/;"	f	file:
clear_level_structures	src/mklev.c	/^static void clear_level_structures(void) {$/;"	f	file:
clear_map	win/curses/curswins.c	/^clear_map()$/;"	f	file:
clear_memory_glyph	src/display.c	/^void clear_memory_glyph(int x, int y, int to) {$/;"	f
clear_nhwindow	include/winprocs.h	87;"	d
clear_path	src/vision.c	/^bool clear_path(int col1, int row1, int col2, int row2) {$/;"	f
clear_regions	src/region.c	/^clear_regions (void) {$/;"	f
clear_screen	sys/winnt/nttty.c	/^clear_screen()$/;"	f
clear_screen	win/tty/termcap.c	/^void clear_screen(void) {$/;"	f
clear_stale_map	src/detect.c	/^static boolean clear_stale_map(char oclass, uint material) {$/;"	f	file:
clear_unpaid	src/shk.c	/^static void clear_unpaid(struct obj *list) {$/;"	f	file:
clearlocks	src/files.c	/^void clearlocks(void) {$/;"	f
clearpriests	src/priest.c	/^clearpriests() {$/;"	f
click_to_cmd	src/cmd.c	/^const char *click_to_cmd(int x, int y, int mod) {$/;"	f
cliparound	include/winprocs.h	102;"	d
clipping	win/tty/wintty.c	/^static bool clipping = false;	\/* clipping on? *\/$/;"	v	file:
clipx	win/tty/wintty.c	/^static int clipx = 0, clipxmax = 0;$/;"	v	file:
clipxmax	win/tty/wintty.c	/^static int clipx = 0, clipxmax = 0;$/;"	v	file:
clipy	win/tty/wintty.c	/^static int clipy = 0, clipymax = 0;$/;"	v	file:
clipymax	win/tty/wintty.c	/^static int clipy = 0, clipymax = 0;$/;"	v	file:
cloak_simple_name	src/objnam.c	/^const char * cloak_simple_name (struct obj *cloak) {$/;"	f
clone_mon	src/makemon.c	/^struct monst *clone_mon(struct monst *mon, xchar x, xchar y \/* clone's preferred location or 0 (near mon) *\/) {$/;"	f
cloneu	src/mhitu.c	/^struct monst *cloneu(void) {$/;"	f
clonewiz	src/wizard.c	/^clonewiz (void) {$/;"	f
close	src/files.c	/^int close(int fd) {$/;"	f
close_drawbridge	src/dbridge.c	/^void close_drawbridge (int x, int y) {$/;"	f
close_library	src/dlb.c	/^void close_library(library *lp) {$/;"	f
closed_door	src/monmove.c	/^boolean closed_door(int x, int y) {$/;"	f
clothes	src/do_wear.c	/^static const char clothes[] = {ARMOR_CLASS, 0};$/;"	v	file:
cls	src/display.c	/^void cls(void) {$/;"	f
cmap	win/proxy/glyphmap.c	/^    int cmap;$/;"	m	struct:__anon24	file:
cmap_color	src/mapglyph.c	28;"	d	file:
cmap_color	src/mapglyph.c	30;"	d	file:
cmap_groups	win/proxy/glyphmap.c	/^static char *cmap_groups[] = {$/;"	v	file:
cmap_idx	win/proxy/glyphmap.c	/^} cmap_idx[CMAP_NO_GROUP];$/;"	v	typeref:struct:__anon23	file:
cmap_to_glyph	include/display.h	305;"	d
cmbuf	sys/share/tclib.c	/^static char cmbuf[64];$/;"	v	file:
cmd	src/options.c	/^	char cmd;$/;"	m	struct:__anon13	file:
cmdassist	include/flag.h	/^	bool  cmdassist;	\/* provide detailed assistance for some commands *\/$/;"	m	struct:instance_flags
cmdlist	src/cmd.c	/^static struct key_tab cmdlist[256];$/;"	v	typeref:struct:key_tab	file:
cmode	sys/winnt/nttty.c	/^static DWORD cmode;$/;"	v	file:
cmov	sys/winnt/nttty.c	/^cmov(x, y)$/;"	f
cmov	win/tty/termcap.c	/^void cmov(int x, int y) {$/;"	f
cntrl	sys/winnt/nh340key.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
cntrl	sys/winnt/nhdefkey.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
cntrl	sys/winnt/nhraykey.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
cnutrit	include/permonst.h	/^	          cnutrit;		\/* its nutritional value *\/$/;"	m	struct:permonst
cnv_trap_obj	src/trap.c	/^	static void cnv_trap_obj(int otyp, int cnt, struct trap *ttmp) {$/;"	f	file:
cobj	include/obj.h	/^	struct obj *cobj;	\/* contents list for containers *\/$/;"	m	struct:obj	typeref:struct:obj::obj
coll	include/you.h	/^	const char *coll;	\/* collective ("humanity", "elvenkind") *\/$/;"	m	struct:Race
collect_obj_classes	src/pickup.c	/^int collect_obj_classes(char ilets[], struct obj *otmp, boolean here, bool (*filter)(struct obj*), int *itemcount) {$/;"	f
colon_line_number	build-linux/src/lev_lex.c	/^int line_number = 1, colon_line_number = 1;$/;"	v
color	include/color.h	/^	int color, attr;$/;"	m	struct:menucoloring
color	include/color.h	/^	int color;$/;"	m	struct:color_option
color	include/rm.h	/^	uchar color;$/;"	m	struct:symdef
color	include/wintty.h	/^	int color;			\/* current color *\/$/;"	m	struct:DisplayDesc
color	src/options.c	/^	const int color;$/;"	m	struct:__anon14	file:
color	win/curses/cursstat.c	/^    int color; \/* Default color *\/$/;"	m	struct:statcolor	file:
color	win/curses/curswins.c	/^    int color;                  \/* color info for character *\/$/;"	m	struct:nhchar	file:
color_option	include/color.h	/^	struct color_option color_option;$/;"	m	struct:percent_color_option	typeref:struct:percent_color_option::color_option
color_option	include/color.h	/^	struct color_option color_option;$/;"	m	struct:text_color_option	typeref:struct:text_color_option::color_option
color_option	include/color.h	/^struct color_option {$/;"	s
colorflag	win/tty/termcap.c	/^bool colorflag = false;			\/* colors are initialized *\/$/;"	v
colornames	src/options.c	/^} colornames[] = {$/;"	v	typeref:struct:__anon14	file:
cols	include/wintty.h	/^	short rows, cols;		\/* dimensions *\/$/;"	m	struct:WinDesc
cols	include/wintty.h	/^	uchar rows, cols;		\/* width and height of tty display *\/$/;"	m	struct:DisplayDesc
com_pager	src/questpgr.c	/^void com_pager(int msgnum) {$/;"	f
comestibles	src/eat.c	/^static const char comestibles[] = { FOOD_CLASS, 0 };$/;"	v	file:
commands_init	src/cmd.c	/^commands_init(void) {$/;"	f
commit_bonesfile	src/files.c	/^void commit_bonesfile(d_level *lev) {$/;"	f
common	include/qtext.h	/^	struct qtmsg common[MAX_QT];$/;"	m	struct:qtlists	typeref:struct:qtlists::qtmsg
compactify	src/invent.c	/^static void compactify(char *buf) {$/;"	f	file:
compare_commands	src/cmd.c	/^compare_commands(_cmd1, _cmd2)$/;"	f	file:
compare_explode_location	src/explode.c	/^static int compare_explode_location(const void *loc1, const void *loc2) {$/;"	f	file:
compopt	src/options.c	/^} compopt[] = {$/;"	v	typeref:struct:Comp_Opt	file:
compress_str	src/display.c	/^const char *compress_str (const char *str) {$/;"	f
compress_str	win/tty/wintty.c	/^const char *compress_str(const char *str) {$/;"	f
conduct	src/topten.c	/^	long conduct;$/;"	m	struct:toptenentry	file:
confdir	src/cmd.c	/^void confdir(void) {$/;"	f
confers_luck	src/artifact.c	/^boolean confers_luck(struct obj *obj) {$/;"	f
configfile	src/files.c	/^const char *configfile = NH_CONFIG_FILE;$/;"	v
configfile	util/lev_main.c	/^const char *configfile;$/;"	v
confirm	include/flag.h	/^	bool  confirm;	\/* confirm before hitting tame monsters *\/$/;"	m	struct:flag
confused_book	src/spell.c	/^static boolean confused_book(struct obj *spellbook) {$/;"	f	file:
cons	include/lev.h	/^	struct container *cons;$/;"	m	struct:bubble	typeref:struct:bubble::container
construct_qtlist	src/questpgr.c	/^static struct qtmsg *construct_qtlist(long hdr_offset) {$/;"	f	file:
consume_obj_charge	src/invent.c	/^void consume_obj_charge(struct obj *obj, boolean maybe_unpaid \/* false if caller handles shop billing *\/) {$/;"	f
consume_oeaten	src/eat.c	/^void consume_oeaten(struct obj *obj, int amt) {$/;"	f
consume_offering	src/pray.c	/^static void consume_offering(struct obj *otmp) {$/;"	f	file:
cont	src/display.c	/^	struct tmp_glyph *cont;	\/* Used if saved[] is full *\/$/;"	m	struct:tmp_glyph	typeref:struct:tmp_glyph::tmp_glyph	file:
contained	src/cmd.c	/^static void contained(winid win, const char *src, long *total_count, long *total_size) {$/;"	f	file:
contained_cost	src/shk.c	/^long contained_cost(struct obj *obj, struct monst *shkp, long price, boolean usell, boolean unpaid_only) {$/;"	f
contained_gold	src/shk.c	/^long contained_gold(struct obj *obj) {$/;"	f
container	include/lev.h	/^struct container {$/;"	s
container_at	src/pickup.c	/^static int container_at(int x, int y, boolean countem) {$/;"	f	file:
container_contents	src/end.c	/^void container_contents(struct obj *list, boolean identified, boolean all_containers)$/;"	f
container_extract_indestructable	src/mkobj.c	/^	container_extract_indestructable(struct obj *obj) {$/;"	f
container_gone	src/pickup.c	/^boolean container_gone(int (*fn)(struct obj*)) {$/;"	f
container_impact_dmg	src/dokick.c	/^void container_impact_dmg(struct obj *obj) {$/;"	f
container_weight	src/mkobj.c	/^static void container_weight(struct obj *container) {$/;"	f	file:
containment	include/sp_lev.h	/^	xchar x, y, chance, class, containment;$/;"	m	struct:__anon36	typeref:class:__anon36::
control_teleport	include/mondata.h	81;"	d
convert_arg	src/questpgr.c	/^static void convert_arg(char c) {$/;"	f	file:
convert_line	src/questpgr.c	/^static void convert_line(void) {$/;"	f	file:
convert_uchars	win/tty/termcap.c	/^static int convert_uchars(char *bufp, uchar *list, int size) {$/;"	f	file:
coord	include/coord.h	/^} coord;$/;"	t	typeref:struct:__anon27
coord	include/sp_lev.h	/^struct coord {$/;"	s
copy_bytes	src/files.c	/^boolean copy_bytes(int ifd, int ofd) {$/;"	f
copy_bytes	util/recover.c	/^copy_bytes(ifd, ofd)$/;"	f
copy_of	win/tty/wintty.c	/^static char *copy_of(const char *s) {$/;"	f	file:
corpos	build-linux/include/lev_comp.h	/^	} corpos;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::__anon25
corpos	build-linux/src/lev_yacc.c	/^	} corpos;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::__anon1	file:
corpse_chance	src/mon.c	/^boolean corpse_chance(struct monst *mon, struct monst *magr,			boolean was_swallowed)			{$/;"	f
corpse_xname	src/objnam.c	/^char * corpse_xname(struct obj *otmp, boolean force_singular)	{$/;"	f
corpsenm	include/obj.h	/^	int	corpsenm;	\/* type of corpse is mons[corpsenm] *\/$/;"	m	struct:obj
corpsenm	include/sp_lev.h	/^	int   corpsenm;$/;"	m	struct:__anon36
corr	src/extralev.c	/^void corr(int x, int y) {$/;"	f
correct_branch_type	src/dungeon.c	/^static int correct_branch_type(struct tmpbranch *tbr) {$/;"	f	file:
corridor	include/sp_lev.h	/^} corridor;$/;"	t	typeref:struct:__anon54
corrs	include/sp_lev.h	/^	corridor **corrs;$/;"	m	struct:__anon56
cost	include/artifact.h	/^	long        cost;	\/* price when sold to hero (default 100 x base cost) *\/$/;"	m	struct:artifact
cost	include/rm.h	/^	long when, cost;$/;"	m	struct:damage
cost	src/write.c	/^cost(otmp)$/;"	f	file:
cost_per_charge	src/shk.c	/^static long cost_per_charge(struct monst *shkp, struct obj *otmp, boolean altusage) {$/;"	f	file:
costly_cancel	src/zap.c	/^static void costly_cancel(struct obj *obj) {$/;"	f	file:
costly_gold	src/shk.c	/^void costly_gold(xchar x, xchar y, long amount) {$/;"	f
costly_spot	src/shk.c	/^boolean costly_spot(xchar x, xchar y) {$/;"	f
costly_tin	src/eat.c	/^static void costly_tin(const char* verb	\/* if 0, the verb is "open" *\/) {$/;"	f	file:
could	src/cmd.c	/^                                                     can[]  = "can ",  could[] = "could ";$/;"	v	file:
could_advance	src/weapon.c	/^static boolean could_advance(int skill) {$/;"	f	file:
could_reach_item	src/dogmove.c	/^static boolean could_reach_item(struct monst *mon, xchar nx, xchar ny) {$/;"	f	file:
could_seduce	src/mhitu.c	/^int could_seduce(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f
could_see	src/vision.c	/^static char could_see[2][ROWNO][COLNO];		\/* vision work space *\/$/;"	v	file:
could_twoweap	include/mondata.h	123;"	d
couldsee	include/vision.h	36;"	d
count	include/wintty.h	/^	long count;			\/* user count *\/$/;"	m	struct:tty_mi
count	include/wintype.h	/^	long count;			\/* count *\/$/;"	m	struct:__anon58
count	src/end.c	/^	long count;$/;"	m	struct:valuable_data	file:
count	sys/winnt/nh340key.c	/^DWORD *count;$/;"	v
count	sys/winnt/nhdefkey.c	/^DWORD *count;$/;"	v
count	sys/winnt/nhraykey.c	/^DWORD *count;$/;"	v
count	win/curses/cursdial.c	/^    int count;                  \/* Count for selected item *\/$/;"	m	struct:nhmi	file:
count_ape_maps	src/options.c	/^static int count_ape_maps(int *leave, int *grab) {$/;"	f	file:
count_buc	src/invent.c	/^int count_buc(struct obj *list, int type) {$/;"	f
count_categories	src/pickup.c	/^static int count_categories(struct obj *olist, int qflags) {$/;"	f	file:
count_herbs_at	src/hack.c	/^long count_herbs_at(xchar x, xchar y, boolean watery) {$/;"	f
count_obj	src/cmd.c	/^static void count_obj(struct obj *chain, long *total_count, long *total_size, boolean top, boolean recurse) {$/;"	f	file:
count_str	src/cmd.c	/^static const char count_str[] = "                   count  bytes";$/;"	v	file:
count_unpaid	src/invent.c	/^int count_unpaid(struct obj *list) {$/;"	f
count_wsegs	src/worm.c	/^int count_wsegs (struct monst *mtmp) {$/;"	f
counter_were	src/were.c	/^int counter_were (int pm) {$/;"	f
counting	include/wincurs.h	/^bool counting;   \/* Count window is active *\/$/;"	v
couple	build-linux/src/dgn_yacc.c	/^static struct couple couple;$/;"	v	typeref:struct:couple	file:
couple	include/dgn_file.h	/^struct	couple {$/;"	s
courtmon	src/mkroom.c	/^struct permonst * courtmon (void) {$/;"	f
covers_objects	include/display.h	177;"	d
covers_traps	include/display.h	180;"	d
coynames	src/do_name.c	/^static const char * const coynames[] = {$/;"	v	file:
coyotename	src/do_name.c	/^char *coyotename(struct monst *mtmp, char *buf) {$/;"	f
cpostfx	src/eat.c	/^static void cpostfx(int pm) {$/;"	f	file:
cprefx	src/eat.c	/^static void cprefx(int pm) {$/;"	f	file:
cq_head	src/cmd.c	/^static int cq_head = 0;                \/* entry point; index for next element *\/$/;"	v	file:
cq_list	src/cmd.c	/^static char cq_list[CQ_SIZE];$/;"	v	file:
cq_tail	src/cmd.c	/^static int cq_tail = 0;                \/* exit point; index for oldest element *\/$/;"	v	file:
crawl	src/mondata.c	/^static const char *crawl[4]	= { "crawl", "Crawl", "falter", "Falter" };$/;"	v	file:
create_altar	src/sp_lev.c	/^static void create_altar(altar		*a, struct mkroom	*croom) {$/;"	f	file:
create_bonesfile	src/files.c	/^int create_bonesfile(d_level *lev, char **bonesid, char errbuf[]) {$/;"	f
create_corridor	src/sp_lev.c	/^static void create_corridor(corridor	*c) {$/;"	f	file:
create_critters	src/makemon.c	/^boolean create_critters(int cnt, struct permonst *mptr) {$/;"	f
create_cthulhu_death_cloud	src/region.c	/^NhRegion * create_cthulhu_death_cloud(xchar x, xchar y, int radius, int damage) {$/;"	f
create_door	src/sp_lev.c	/^static void create_door(room_door *dd, struct mkroom *broom) {$/;"	f	file:
create_drawbridge	src/dbridge.c	/^boolean create_drawbridge(int x, int y, int dir, boolean flag) {$/;"	f
create_engraving	src/sp_lev.c	/^static void create_engraving(engraving *e, struct mkroom *croom) {$/;"	f	file:
create_explode_region	src/explode.c	/^static ExplodeRegion *create_explode_region(void) {$/;"	f	file:
create_feature	src/sp_lev.c	/^static void create_feature(int		fx, int fy, struct mkroom	*croom, int		typ) {$/;"	f	file:
create_gamewindows	src/allmain.c	/^void create_gamewindows(void) {$/;"	f
create_gas_cloud	src/region.c	/^NhRegion * create_gas_cloud(xchar x, xchar y, int radius, int damage) {$/;"	f
create_gold	src/sp_lev.c	/^static void create_gold(gold *g, struct mkroom	*croom) {$/;"	f	file:
create_levelfile	src/files.c	/^int create_levelfile(int lev, char errbuf[]) {$/;"	f
create_monster	src/sp_lev.c	/^static void create_monster(monster	*m, struct mkroom	*croom) {$/;"	f	file:
create_mplayers	src/mplayer.c	/^void create_mplayers(int num, boolean special) {$/;"	f
create_nhwindow	include/winprocs.h	86;"	d
create_object	src/sp_lev.c	/^static void create_object(object	*o, struct mkroom	*croom) {$/;"	f	file:
create_particular	src/read.c	/^struct monst *create_particular(void) {$/;"	f
create_polymon	src/zap.c	/^static void create_polymon(struct obj *obj, int okind) {$/;"	f	file:
create_region	src/region.c	/^NhRegion * create_region(NhRect *rects, int nrect) {$/;"	f
create_room	src/sp_lev.c	/^boolean create_room(xchar	x,xchar y, xchar	w,xchar h, xchar	xal, xchar yal, xchar	rtype, xchar rlit) {$/;"	f
create_savefile	src/files.c	/^int create_savefile(void) {$/;"	f
create_savefile	util/recover.c	/^create_savefile()$/;"	f
create_secret_door	src/sp_lev.c	/^void create_secret_door(struct mkroom *croom, xchar walls) {$/;"	f
create_stairs	src/sp_lev.c	/^static void create_stairs(stair	*s, struct mkroom	*croom) {$/;"	f	file:
create_subroom	src/sp_lev.c	/^static boolean create_subroom(struct mkroom *proom, xchar x, xchar y, xchar w, xchar h, xchar rtype, xchar rlit) {$/;"	f	file:
create_toptenwin	src/topten.c	/^winid create_toptenwin() {$/;"	f
create_trap	src/sp_lev.c	/^static void create_trap(trap	*t, struct mkroom	*croom) {$/;"	f	file:
create_vault	src/mklev.c	44;"	d	file:
create_worm_tail	src/worm.c	/^static struct wseg * create_worm_tail(int num_segs) {$/;"	f	file:
credit	include/egyp.h	/^	long credit;				\/* Amount credited to player *\/$/;"	m	struct:egyp
credit	include/eshk.h	/^	long credit;		\/* amount credited to customer *\/$/;"	m	struct:eshk
cross_matrix	src/display.c	/^static const int cross_matrix[4][6] = {$/;"	v	file:
cs_left	src/vision.c	/^static char *cs_left;$/;"	v	file:
cs_right	src/vision.c	/^static char *cs_right;$/;"	v	file:
cs_rmax0	src/vision.c	/^static char  cs_rmin0[ROWNO],  cs_rmax0[ROWNO];$/;"	v	file:
cs_rmax1	src/vision.c	/^static char  cs_rmin1[ROWNO],  cs_rmax1[ROWNO];$/;"	v	file:
cs_rmin0	src/vision.c	/^static char  cs_rmin0[ROWNO],  cs_rmax0[ROWNO];$/;"	v	file:
cs_rmin1	src/vision.c	/^static char  cs_rmin1[ROWNO],  cs_rmax1[ROWNO];$/;"	v	file:
cs_rows	src/vision.c	/^static char **cs_rows;$/;"	v	file:
cs_rows0	src/vision.c	/^static char *cs_rows0[ROWNO], *cs_rows1[ROWNO];$/;"	v	file:
cs_rows1	src/vision.c	/^static char *cs_rows0[ROWNO], *cs_rows1[ROWNO];$/;"	v	file:
csbi	sys/winnt/nttty.c	/^CONSOLE_SCREEN_BUFFER_INFO csbi, origcsbi;$/;"	v
cspfx	include/artifact.h	/^	unsigned long cspfx;	\/* special effect just from carrying obj *\/$/;"	m	struct:artifact
cuddly	src/apply.c	/^static const char cuddly[] = { TOOL_CLASS, GEM_CLASS, 0 };$/;"	v	file:
curr_mon_load	src/mon.c	/^int curr_mon_load (struct monst *mtmp) {$/;"	f
currency	src/invent.c	/^const char *currency(long amount) {$/;"	f
current_align	build-linux/src/lev_yacc.c	/^static struct coord current_coord, current_align;$/;"	v	typeref:struct:	file:
current_container	src/pickup.c	/^static struct obj *current_container;$/;"	v	typeref:struct:obj	file:
current_coord	build-linux/src/lev_yacc.c	/^static struct coord current_coord, current_align;$/;"	v	typeref:struct:coord	file:
current_fruit	src/decl.c	/^int current_fruit = 0;$/;"	v
current_region	build-linux/src/lev_yacc.c	/^}		current_region;$/;"	v	typeref:struct:reg	file:
current_size	build-linux/src/lev_yacc.c	/^}		current_size;$/;"	v	typeref:struct:size	file:
current_wand	src/decl.c	/^struct obj *current_wand = 0;	\/* wand currently zapped\/applied *\/$/;"	v	typeref:struct:obj
currentlevel_rewrite	src/do.c	/^static int currentlevel_rewrite(void) {$/;"	f	file:
curs	include/winprocs.h	90;"	d
curs_on_u	src/display.c	/^void curs_on_u(void) {$/;"	f
curs_x	win/curses/cursmisc.c	/^static int curs_x = -1;$/;"	v	file:
curs_y	win/curses/cursmisc.c	/^static int curs_y = -1;$/;"	v	file:
curse	src/mkobj.c	/^curse (struct obj *otmp) {$/;"	f
curse_state	include/sp_lev.h	/^	schar curse_state;$/;"	m	struct:__anon36
cursed	include/obj.h	/^	bool cursed;$/;"	m	struct:obj
cursed	src/do_wear.c	/^int cursed(struct obj *otmp) {$/;"	f
cursed_book	src/spell.c	/^static boolean cursed_book(struct obj *bp) {$/;"	f	file:
cursed_object_at	src/dogmove.c	/^static boolean cursed_object_at(struct monst *mtmp, int x, int y) {$/;"	f	file:
curses_add_inv	win/curses/cursinvt.c	/^curses_add_inv(int y, int glyph, char accelerator, attr_t attr,$/;"	f
curses_add_menu	win/curses/cursmain.c	/^curses_add_menu(winid wid, int glyph, const anything * identifier,$/;"	f
curses_add_nhmenu_item	win/curses/cursdial.c	/^curses_add_nhmenu_item(winid wid, int glyph, const anything * identifier,$/;"	f
curses_add_nhwin	win/curses/curswins.c	/^void curses_add_nhwin(winid wid, int height, int width, int y, int x, orient orientation, bool border) {$/;"	f
curses_add_status	win/curses/cursstat.c	/^curses_add_status(WINDOW *win, bool align_right, bool vertical,$/;"	f	file:
curses_add_statuses	win/curses/cursstat.c	/^curses_add_statuses(WINDOW *win, bool align_right,$/;"	f	file:
curses_add_wid	win/curses/curswins.c	/^curses_add_wid(winid wid)$/;"	f
curses_alert_main_borders	win/curses/curswins.c	/^void curses_alert_main_borders(bool onoff) {$/;"	f
curses_alert_win_border	win/curses/curswins.c	/^void curses_alert_win_border(winid wid, bool onoff) {$/;"	f
curses_askname	win/curses/cursmain.c	/^curses_askname()$/;"	f
curses_bail	win/curses/cursmisc.c	/^curses_bail(const char *mesg)$/;"	f
curses_block	win/curses/cursmesg.c	/^curses_block(bool noscroll)$/;"	f
curses_break_str	win/curses/cursmisc.c	/^curses_break_str(const char *str, int width, int line_num)$/;"	f
curses_character_dialog	win/curses/cursinit.c	/^curses_character_dialog(const char **choices, const char *prompt)$/;"	f
curses_character_input_dialog	win/curses/cursdial.c	/^curses_character_input_dialog(const char *prompt, const char *choices, char def)$/;"	f
curses_choose_character	win/curses/cursinit.c	/^curses_choose_character()$/;"	f
curses_cleanup	win/curses/cursinit.c	/^curses_cleanup()$/;"	f
curses_clear_nhwin	win/curses/curswins.c	/^void curses_clear_nhwin(winid wid) {$/;"	f
curses_clear_nhwindow	win/curses/cursmain.c	/^curses_clear_nhwindow(winid wid)$/;"	f
curses_clear_unhighlight_message_window	win/curses/cursmesg.c	/^curses_clear_unhighlight_message_window()$/;"	f
curses_cliparound	win/curses/cursmain.c	/^curses_cliparound(int x, int y)$/;"	f
curses_color_attr	win/curses/cursstat.c	/^curses_color_attr(int nh_color, int bg_color)$/;"	f
curses_convert_attr	win/curses/cursmisc.c	/^attr_t curses_convert_attr(int attr) {$/;"	f
curses_convert_keys	win/curses/cursmisc.c	/^curses_convert_keys(int key)$/;"	f
curses_copy_of	win/curses/cursmisc.c	/^curses_copy_of(const char *s)$/;"	f
curses_count_window	win/curses/cursmesg.c	/^curses_count_window(const char *count_text)$/;"	f
curses_create_main_windows	win/curses/cursinit.c	/^curses_create_main_windows()$/;"	f
curses_create_nhmenu	win/curses/cursdial.c	/^curses_create_nhmenu(winid wid)$/;"	f
curses_create_nhwindow	win/curses/cursmain.c	/^curses_create_nhwindow(int type)$/;"	f
curses_create_window	win/curses/curswins.c	/^curses_create_window(int width, int height, orient orientation)$/;"	f
curses_curs	win/curses/cursmain.c	/^curses_curs(winid wid, int x, int y)$/;"	f
curses_decrement_highlights	win/curses/cursstat.c	/^curses_decrement_highlights(bool zero)$/;"	f
curses_del_menu	win/curses/cursdial.c	/^curses_del_menu(winid wid)$/;"	f
curses_del_nhwin	win/curses/curswins.c	/^curses_del_nhwin(winid wid)$/;"	f
curses_del_wid	win/curses/curswins.c	/^curses_del_wid(winid wid)$/;"	f
curses_delay_output	win/curses/cursmain.c	/^curses_delay_output()$/;"	f
curses_destroy_nhwindow	win/curses/cursmain.c	/^curses_destroy_nhwindow(winid wid)$/;"	f
curses_destroy_win	win/curses/curswins.c	/^curses_destroy_win(WINDOW * win)$/;"	f
curses_display_file	win/curses/cursmain.c	/^curses_display_file(const char *filename, bool must_exist)$/;"	f
curses_display_nhmenu	win/curses/cursdial.c	/^curses_display_nhmenu(winid wid, int how, menu_item ** _selected)$/;"	f
curses_display_nhwindow	win/curses/cursmain.c	/^curses_display_nhwindow(winid wid, bool block)$/;"	f
curses_display_splash_window	win/curses/cursinit.c	/^curses_display_splash_window()$/;"	f
curses_doprev_message	win/curses/cursmain.c	/^curses_doprev_message()$/;"	f
curses_draw_map	win/curses/curswins.c	/^curses_draw_map(int sx, int sy, int ex, int ey)$/;"	f
curses_end_menu	win/curses/cursmain.c	/^curses_end_menu(winid wid, const char *prompt)$/;"	f
curses_end_screen	win/curses/cursmain.c	/^curses_end_screen()$/;"	f
curses_exit_nhwindows	win/curses/cursmain.c	/^curses_exit_nhwindows(const char *str)$/;"	f
curses_ext_cmd	win/curses/cursdial.c	/^curses_ext_cmd()$/;"	f
curses_finalize_nhmenu	win/curses/cursdial.c	/^curses_finalize_nhmenu(winid wid, const char *prompt)$/;"	f
curses_get_count	win/curses/cursmisc.c	/^curses_get_count(int first_digit)$/;"	f
curses_get_ext_cmd	win/curses/cursmain.c	/^curses_get_ext_cmd()$/;"	f
curses_get_mouse	win/curses/cursmisc.c	/^curses_get_mouse(int *mousex, int *mousey, int *mod)$/;"	f
curses_get_nh_event	win/curses/cursmain.c	/^curses_get_nh_event()$/;"	f
curses_get_nhwin	win/curses/curswins.c	/^curses_get_nhwin(winid wid)$/;"	f
curses_get_wid	win/curses/cursmisc.c	/^curses_get_wid(int type)$/;"	f
curses_get_window_orientation	win/curses/curswins.c	/^int curses_get_window_orientation(winid wid) {$/;"	f
curses_get_window_size	win/curses/curswins.c	/^void curses_get_window_size(winid wid, int *height, int *width) {$/;"	f
curses_get_window_xy	win/curses/curswins.c	/^curses_get_window_xy(winid wid, int *x, int *y)$/;"	f
curses_getlin	win/curses/cursmain.c	/^curses_getlin(const char *question, char *input)$/;"	f
curses_init_mesg_history	win/curses/cursmesg.c	/^curses_init_mesg_history()$/;"	f
curses_init_nhcolors	win/curses/cursinit.c	/^curses_init_nhcolors()$/;"	f
curses_init_nhwindows	win/curses/cursmain.c	/^void curses_init_nhwindows(int *argcp, char **argv) {$/;"	f
curses_init_options	win/curses/cursinit.c	/^curses_init_options()$/;"	f
curses_is_menu	win/curses/cursmisc.c	/^curses_is_menu(winid wid)$/;"	f
curses_is_text	win/curses/cursmisc.c	/^curses_is_text(winid wid)$/;"	f
curses_last_messages	win/curses/cursmesg.c	/^curses_last_messages()$/;"	f
curses_line_input_dialog	win/curses/cursdial.c	/^curses_line_input_dialog(const char *prompt, char *answer, int buffer)$/;"	f
curses_map_borders	win/curses/curswins.c	/^bool curses_map_borders(int *sx, int *sy, int *ex, int *ey, int ux, int uy) {$/;"	f
curses_mark_synch	win/curses/cursmain.c	/^curses_mark_synch()$/;"	f
curses_menu_exists	win/curses/cursdial.c	/^curses_menu_exists(winid wid)$/;"	f
curses_message_win_getline	win/curses/cursmesg.c	/^curses_message_win_getline(const char *prompt, char *answer, int buffer)$/;"	f
curses_message_win_puts	win/curses/cursmesg.c	/^curses_message_win_puts(const char *message, bool recursed)$/;"	f
curses_more	win/curses/cursmesg.c	/^curses_more()$/;"	f
curses_move_cursor	win/curses/cursmisc.c	/^curses_move_cursor(winid wid, int x, int y)$/;"	f
curses_nh_poskey	win/curses/cursmain.c	/^curses_nh_poskey(int *x, int *y, int *mod)$/;"	f
curses_nhbell	win/curses/cursmain.c	/^curses_nhbell()$/;"	f
curses_nhgetch	win/curses/cursmain.c	/^curses_nhgetch()$/;"	f
curses_num_lines	win/curses/cursmisc.c	/^curses_num_lines(const char *str, int width)$/;"	f
curses_number_pad	win/curses/cursmain.c	/^curses_number_pad(int state)$/;"	f
curses_outrip	win/curses/cursmain.c	/^curses_outrip(winid wid, int how)$/;"	f
curses_player_selection	win/curses/cursmain.c	/^curses_player_selection()$/;"	f
curses_posthousekeeping	win/curses/cursmisc.c	/^curses_posthousekeeping()$/;"	f
curses_preference_update	win/curses/cursmain.c	/^curses_preference_update(const char *pref)$/;"	f
curses_prehousekeeping	win/curses/cursmisc.c	/^curses_prehousekeeping()$/;"	f
curses_prev_mesg	win/curses/cursmesg.c	/^curses_prev_mesg()$/;"	f
curses_print_glyph	win/curses/cursmain.c	/^curses_print_glyph(winid wid, xchar x, xchar y, int glyph)$/;"	f
curses_procs	win/curses/cursmain.c	/^struct window_procs curses_procs = {$/;"	v	typeref:struct:window_procs
curses_putch	win/curses/curswins.c	/^curses_putch(winid wid, int x, int y, int ch, int color, int attr)$/;"	f
curses_puts	win/curses/curswins.c	/^curses_puts(winid wid, int attr, const char *text)$/;"	f
curses_putstr	win/curses/cursmain.c	/^curses_putstr(winid wid, int attr, const char *text)$/;"	f
curses_raw_print	win/curses/cursmain.c	/^curses_raw_print(const char *str)$/;"	f
curses_raw_print_bold	win/curses/cursmain.c	/^curses_raw_print_bold(const char *str)$/;"	f
curses_read_attrs	win/curses/cursmisc.c	/^curses_read_attrs(char *attrs)$/;"	f
curses_read_char	win/curses/cursmisc.c	/^curses_read_char()$/;"	f
curses_refresh_nethack_windows	win/curses/curswins.c	/^curses_refresh_nethack_windows()$/;"	f
curses_refresh_nhwin	win/curses/curswins.c	/^curses_refresh_nhwin(winid wid)$/;"	f
curses_resume_nhwindows	win/curses/cursmain.c	/^curses_resume_nhwindows()$/;"	f
curses_rtrim	win/curses/cursmisc.c	/^curses_rtrim(char *str)$/;"	f
curses_select_menu	win/curses/cursmain.c	/^curses_select_menu(winid wid, int how, menu_item ** selected)$/;"	f
curses_start_menu	win/curses/cursmain.c	/^curses_start_menu(winid wid)$/;"	f
curses_start_screen	win/curses/cursmain.c	/^curses_start_screen()$/;"	f
curses_str_remainder	win/curses/cursmisc.c	/^curses_str_remainder(const char *str, int width, int line_num)$/;"	f
curses_stupid_hack	src/decl.c	/^bool curses_stupid_hack = 1;$/;"	v
curses_suspend_nhwindows	win/curses/cursmain.c	/^curses_suspend_nhwindows(const char *str)$/;"	f
curses_toggle_color_attr	win/curses/cursmisc.c	/^curses_toggle_color_attr(WINDOW * win, int color, int attr, int onoff)$/;"	f
curses_update_inv	win/curses/cursinvt.c	/^curses_update_inv(void)$/;"	f
curses_update_inventory	win/curses/cursmain.c	/^curses_update_inventory(void)$/;"	f
curses_update_stats	win/curses/cursstat.c	/^curses_update_stats(void)$/;"	f
curses_view_file	win/curses/cursmisc.c	/^curses_view_file(const char *filename, bool must_exist)$/;"	f
curses_wait_synch	win/curses/cursmain.c	/^curses_wait_synch()$/;"	f
curses_window_exists	win/curses/curswins.c	/^bool curses_window_exists(winid wid) {$/;"	f
curses_window_has_border	win/curses/curswins.c	/^bool curses_window_has_border(winid wid) {$/;"	f
curses_yn_function	win/curses/cursmain.c	/^curses_yn_function(const char *question, const char *choices, char def)$/;"	f
cursetxt	src/mcastu.c	/^static void cursetxt(struct monst *mtmp, boolean undirected) {$/;"	f	file:
cursor	sys/winnt/nttty.c	/^static COORD cursor = {0,0};$/;"	v	file:
curttyb	sys/share/unixtty.c	/^struct termstruct inittyb, curttyb;$/;"	v	typeref:struct:
curttyb2	sys/share/unixtty.c	/^struct tchars inittyb2, curttyb2;$/;"	v	typeref:struct:
curttyb2	sys/share/unixtty.c	90;"	d	file:
curwin	win/curses/curswins.c	/^    WINDOW *curwin;             \/* Curses window pointer *\/$/;"	m	struct:__anon22	file:
curx	include/wintty.h	/^	short curx, cury;		\/* current cursor position *\/$/;"	m	struct:WinDesc
curx	include/wintty.h	/^	uchar curx, cury;		\/* current cursor position on the screen *\/$/;"	m	struct:DisplayDesc
cury	include/wintty.h	/^	short curx, cury;		\/* current cursor position *\/$/;"	m	struct:WinDesc
cury	include/wintty.h	/^	uchar curx, cury;		\/* current cursor position on the screen *\/$/;"	m	struct:DisplayDesc
cuss	src/wizard.c	/^cuss (struct monst *mtmp) {$/;"	f
customer	include/eshk.h	/^	char customer[PL_NSIZ];	\/* most recent customer *\/$/;"	m	struct:eshk
cutworm	src/worm.c	/^int cutworm(struct monst *worm, xchar x, xchar y, struct obj *weap) {$/;"	f
cvt_buf	src/questpgr.c	/^static char	in_line[80], cvt_buf[64], out_line[128];$/;"	v	file:
cvt_sdoor_to_door	src/detect.c	/^void cvt_sdoor_to_door(struct rm *lev) {$/;"	f
cwt	include/permonst.h	/^	unsigned short	cwt,			\/* weight of corpse *\/$/;"	m	struct:permonst
cxname	src/objnam.c	/^char * cxname (struct obj *obj) {$/;"	f
d	src/rnd.c	/^uint d(uint n, uint x) {$/;"	f
d_air_level	include/decl.h	/^	d_level	d_air_level;$/;"	m	struct:dgn_topology
d_asmodeus_level	include/decl.h	/^	d_level	d_asmodeus_level;	\/* unused *\/$/;"	m	struct:dgn_topology
d_astral_level	include/decl.h	/^	d_level	d_astral_level;$/;"	m	struct:dgn_topology
d_baalzebub_level	include/decl.h	/^	d_level	d_baalzebub_level;	\/* unused *\/$/;"	m	struct:dgn_topology
d_bigroom_level	include/decl.h	/^	d_level	d_bigroom_level;	\/* unused *\/$/;"	m	struct:dgn_topology
d_blackmarket_level	include/decl.h	/^	d_level     d_blackmarket_level;$/;"	m	struct:dgn_topology
d_chaotic_quest_level	include/decl.h	/^	d_level	d_chaotic_quest_level;$/;"	m	struct:dgn_topology
d_demogorgon_level	include/decl.h	/^	d_level     d_demogorgon_level;      \/* unused *\/$/;"	m	struct:dgn_topology
d_dispater_level	include/decl.h	/^	d_level     d_dispater_level;      \/* unused *\/$/;"	m	struct:dgn_topology
d_earth_level	include/decl.h	/^	d_level	d_earth_level;$/;"	m	struct:dgn_topology
d_fire_level	include/decl.h	/^	d_level	d_fire_level;$/;"	m	struct:dgn_topology
d_flags	include/dungeon.h	/^typedef struct d_flags {	\/* dungeon\/level type flags *\/$/;"	s
d_flags	include/dungeon.h	/^} d_flags;$/;"	t	typeref:struct:d_flags
d_geryon_level	include/decl.h	/^	d_level     d_geryon_level;      \/* unused *\/$/;"	m	struct:dgn_topology
d_juiblex_level	include/decl.h	/^	d_level	d_juiblex_level;$/;"	m	struct:dgn_topology
d_knox_level	include/decl.h	/^	d_level	d_knox_level;$/;"	m	struct:dgn_topology
d_lawful_quest_level	include/decl.h	/^	d_level	d_lawful_quest_level;$/;"	m	struct:dgn_topology
d_level	include/dungeon.h	/^typedef struct d_level {	\/* basic dungeon level element *\/$/;"	s
d_level	include/dungeon.h	/^} d_level;$/;"	t	typeref:struct:d_level
d_medusa_level	include/decl.h	/^	d_level	d_medusa_level;$/;"	m	struct:dgn_topology
d_mineend_level	include/decl.h	/^	d_level     d_mineend_level;$/;"	m	struct:dgn_topology
d_mines_dnum	include/decl.h	/^	xchar	d_mines_dnum, d_quest_dnum;$/;"	m	struct:dgn_topology
d_nemesis_level	include/decl.h	/^	d_level	d_qstart_level, d_qlocate_level, d_nemesis_level;$/;"	m	struct:dgn_topology
d_neutral_quest_level	include/decl.h	/^	d_level	d_neutral_quest_level;$/;"	m	struct:dgn_topology
d_oracle_level	include/decl.h	/^	d_level	d_oracle_level;$/;"	m	struct:dgn_topology
d_orcus_level	include/decl.h	/^	d_level	d_orcus_level;$/;"	m	struct:dgn_topology
d_portal_level	include/decl.h	/^	d_level	d_portal_level;		\/* only in goto_level() [do.c] *\/$/;"	m	struct:dgn_topology
d_qlocate_level	include/decl.h	/^	d_level	d_qstart_level, d_qlocate_level, d_nemesis_level;$/;"	m	struct:dgn_topology
d_qstart_level	include/decl.h	/^	d_level	d_qstart_level, d_qlocate_level, d_nemesis_level;$/;"	m	struct:dgn_topology
d_quest_dnum	include/decl.h	/^	xchar	d_mines_dnum, d_quest_dnum;$/;"	m	struct:dgn_topology
d_rogue_level	include/decl.h	/^	d_level	d_rogue_level;$/;"	m	struct:dgn_topology
d_sanctum_level	include/decl.h	/^	d_level	d_sanctum_level;$/;"	m	struct:dgn_topology
d_sokoban_dnum	include/decl.h	/^	xchar	d_sokoban_dnum;$/;"	m	struct:dgn_topology
d_sokoend_level	include/decl.h	/^	d_level	d_sokoend_level;$/;"	m	struct:dgn_topology
d_spiders_dnum	include/decl.h	/^	xchar       d_spiders_dnum;$/;"	m	struct:dgn_topology
d_stronghold_level	include/decl.h	/^	d_level	d_stronghold_level;$/;"	m	struct:dgn_topology
d_tower_dnum	include/decl.h	/^	xchar	d_tower_dnum;$/;"	m	struct:dgn_topology
d_valley_level	include/decl.h	/^	d_level	d_valley_level;$/;"	m	struct:dgn_topology
d_water_level	include/decl.h	/^	d_level	d_water_level;$/;"	m	struct:dgn_topology
d_wiz1_level	include/decl.h	/^	d_level	d_wiz1_level;$/;"	m	struct:dgn_topology
d_wiz2_level	include/decl.h	/^	d_level	d_wiz2_level;$/;"	m	struct:dgn_topology
d_wiz3_level	include/decl.h	/^	d_level	d_wiz3_level;$/;"	m	struct:dgn_topology
d_yeenoghu_level	include/decl.h	/^	d_level     d_yeenoghu_level;      \/* unused *\/$/;"	m	struct:dgn_topology
dalign	include/attk.h	/^	schar	dalign;			\/* Defending monster's alignment *\/$/;"	m	struct:Attk
damage	include/attk.h	/^	xchar	damage;			\/* Calculated amount of damage *\/$/;"	m	struct:Attk
damage	include/rm.h	/^struct damage {$/;"	s
damagelist	include/rm.h	/^	struct damage	*damagelist;$/;"	m	struct:__anon30	typeref:struct:__anon30::damage
damageum	src/uhitm.c	/^	int damageum(struct monst *mdef, struct attack *mattk) {$/;"	f
damd	include/permonst.h	/^	uchar		adtyp, damn, damd;$/;"	m	struct:attack
damn	include/permonst.h	/^	uchar		adtyp, damn, damd;$/;"	m	struct:attack
data	include/decl.h	/^	void *data;				\/* For windowing port's use *\/$/;"	m	struct:tileset
data	include/monst.h	/^	struct permonst *data;$/;"	m	struct:monst	typeref:struct:monst::permonst
data	include/wintty.h	/^	char **data;		\/* window data [row][column] *\/$/;"	m	struct:WinDesc
datlen	include/wintty.h	/^	short *datlen;		\/* allocation size for *data *\/$/;"	m	struct:WinDesc
db_open	include/sp_lev.h	/^	xchar x, y, dir, db_open;$/;"	m	struct:__anon38
dbgfile	sys/winnt/mapimail.c	/^FILE *dbgfile;$/;"	v
dbon	src/weapon.c	/^int dbon (void)	{$/;"	f
ddocall	src/do_name.c	/^int ddocall(void) {$/;"	f
ddoinv	src/invent.c	/^int ddoinv(void) {$/;"	f
dead_species	src/mon.c	/^boolean dead_species(int m_idx, boolean egg) {$/;"	f
deadbook	src/spell.c	/^static void deadbook(struct obj *book2) {$/;"	f	file:
dealloc_engr	include/engrave.h	25;"	d
dealloc_fruit	include/objclass.h	189;"	d
dealloc_monst	include/monst.h	176;"	d
dealloc_obj	src/mkobj.c	/^void dealloc_obj(struct obj *obj) {$/;"	f
dealloc_seg	src/worm.c	9;"	d	file:
dealloc_trap	include/trap.h	37;"	d
dealloc_ttentry	src/topten.c	12;"	d	file:
death	src/topten.c	/^	char death[DTHSZ+1];$/;"	m	struct:toptenentry	file:
deathdate	src/topten.c	/^	long deathdate, birthdate;$/;"	m	struct:toptenentry	file:
deathdnum	src/topten.c	/^	int deathdnum, deathlev;$/;"	m	struct:toptenentry	file:
deathlev	src/topten.c	/^	int deathdnum, deathlev;$/;"	m	struct:toptenentry	file:
deaths	src/end.c	/^static const char *deaths[] = {		\/* the array of death *\/$/;"	v	file:
deaths	src/topten.c	/^	int maxlvl, hp, maxhp, deaths;$/;"	m	struct:toptenentry	file:
deathtime	src/topten.c	/^static time_t deathtime = 0L;$/;"	v	file:
debit	include/eshk.h	/^	long debit;		\/* amount of debt for using unpaid items *\/$/;"	m	struct:eshk
debug	include/flag.h	/^	bool  debug;		\/* in debugging mode *\/$/;"	m	struct:flag
debug_extcmdlist	src/cmd.c	/^static struct ext_func_tab debug_extcmdlist[] = {$/;"	v	typeref:struct:ext_func_tab	file:
debug_fuzzer	include/flag.h	/^	bool  debug_fuzzer;$/;"	m	struct:instance_flags
debugmapi	sys/winnt/mapimail.c	/^boolean debugmapi;$/;"	v
debugpline	src/dogmove.c	16;"	d	file:
debugpline	src/eat.c	9;"	d	file:
debugpline	src/mklev.c	9;"	d	file:
debugpline	src/sp_lev.c	17;"	d	file:
decl_init	src/decl.c	/^void decl_init(void) {$/;"	f
decode	sys/share/uudecode.c	/^void decode(FILE *in, FILE *out) {$/;"	f
decrement_highlight	win/curses/cursstat.c	/^decrement_highlight(nhstat *stat, bool zero)$/;"	f	file:
decrnknow	include/spell.h	18;"	d
decrnknow	src/allmain.c	17;"	d	file:
deepest_lev_reached	src/dungeon.c	/^xchar deepest_lev_reached(boolean noquest) {$/;"	f
def_char_to_monclass	src/drawing.c	/^int def_char_to_monclass(char ch) {$/;"	f
def_char_to_objclass	src/drawing.c	/^int def_char_to_objclass(char ch) {$/;"	f
def_inv_order	src/options.c	/^static char def_inv_order[MAXOCLASSES] = {$/;"	v	file:
def_kbhit	sys/winnt/winnt.c	/^def_kbhit()$/;"	f
def_monsyms	src/drawing.c	/^const char def_monsyms[MAXMCLASSES] = {$/;"	v
def_oc_syms	src/drawing.c	/^const char def_oc_syms[MAXOCLASSES] = {$/;"	v
def_raw_print	src/windows.c	/^def_raw_print(s)$/;"	f	file:
def_skill	include/skills.h	/^struct def_skill {$/;"	s
def_tilesets	src/decl.c	/^struct tileset def_tilesets[] = {$/;"	v	typeref:struct:tileset
default_colors	win/curses/cursstat.c	/^static const struct statcolor default_colors[] = {$/;"	v	typeref:struct:statcolor	file:
default_menu_cmd_info	src/options.c	/^static const menu_cmd_t default_menu_cmd_info[NUM_MENU_CMDS] = {$/;"	v	file:
default_menu_cmds	win/tty/wintty.c	/^static const char default_menu_cmds[] = {$/;"	v	file:
default_progname	util/dlb_main.c	/^static char default_progname[] = "dlb";$/;"	v	file:
defends	src/artifact.c	/^boolean defends(int adtyp, struct obj *otmp) {$/;"	f
defensive	include/attk.h	/^	bool defensive;	\/* This is the defensive response of another *\/$/;"	m	struct:Attk
defensive	src/muse.c	/^	struct obj *defensive;$/;"	m	struct:musable	typeref:struct:musable::obj	file:
defer_see_monsters	src/decl.c	/^boolean defer_see_monsters = false;$/;"	v
deferred_goto	src/do.c	/^void deferred_goto(void) {$/;"	f
defmorestr	win/tty/wintty.c	/^char defmorestr[] = "--More--";$/;"	v
defn	include/artifact.h	/^	struct attack attk, defn, cary;$/;"	m	struct:artifact	typeref:struct:artifact::
defsym_to_trap	include/rm.h	523;"	d
degrees	sys/share/random.c	/^static  int		degrees[ MAX_TYPES ]	= { DEG_0, DEG_1, DEG_2,$/;"	v	file:
del_engr	src/engrave.c	/^void del_engr(struct engr *ep) {$/;"	f
del_engr_at	src/engrave.c	/^void del_engr_at(int x, int y) {$/;"	f
del_islev	include/sp_lev.h	/^	boolean in_islev, del_islev;$/;"	m	struct:__anon44
del_light_source	src/light.c	/^void del_light_source(int type, anything id) {$/;"	f
delallobj	src/invent.c	/^void delallobj(int x, int y) {$/;"	f
delarea	include/sp_lev.h	/^	} delarea;$/;"	m	struct:__anon44	typeref:struct:__anon44::__anon46
delay	src/spell.c	/^static int delay;            \/* moves left for this spell *\/$/;"	v	file:
delay	src/tech.c	/^static schar delay;            \/* moves left for tinker\/energy draw *\/$/;"	v	file:
delay	src/weapon.c	/^static schar delay;            \/* moves left for practice *\/$/;"	v	file:
delay_output	include/winprocs.h	117;"	d
delay_output	sys/share/unixtty.c	39;"	d	file:
delay_output	win/tty/termcap.c	605;"	d	file:
delayed_killer	src/decl.c	/^const char *delayed_killer = 0;$/;"	v
delete_bonesfile	src/files.c	/^boolean delete_bonesfile(d_level *lev) {$/;"	f
delete_contents	src/shk.c	/^void delete_contents (struct obj *obj) {$/;"	f
delete_levelfile	src/files.c	/^void delete_levelfile(int lev) {$/;"	f
delete_savefile	src/files.c	/^int delete_savefile(void) {$/;"	f
delfloortrap	src/trap.c	/^	boolean delfloortrap(struct trap *ttmp) {$/;"	f
deliver_by_pline	src/questpgr.c	/^static void deliver_by_pline(struct qtmsg *qt_msg) {$/;"	f	file:
deliver_by_window	src/questpgr.c	/^static void deliver_by_window(struct qtmsg *qt_msg, int how) {$/;"	f	file:
delivery	include/qtext.h	/^	char delivery;$/;"	m	struct:qtmsg
delobj	src/invent.c	/^void delobj(struct obj *obj) {$/;"	f
deltrap	src/trap.c	/^	void deltrap(struct trap *trap) {$/;"	f
demogorgon_level	include/decl.h	94;"	d
demon_talk	src/minion.c	/^bool demon_talk(struct monst *mtmp) {$/;"	f
demonpet	src/uhitm.c	/^	demonpet() {$/;"	f	file:
depth	src/dungeon.c	/^schar depth(d_level *lev) {$/;"	f
depth_start	include/dungeon.h	/^	        depth_start;	\/* the starting depth in "logical" terms *\/$/;"	m	struct:dungeon
descr	src/options.c	/^	const char *name, *descr;$/;"	m	struct:Comp_Opt	file:
describe_level	src/botl.c	/^int describe_level(char *buf, int verbose) {$/;"	f
description	win/proxy/glyphmap.c	/^    const char *description;$/;"	m	struct:__anon24	file:
dest	include/sp_lev.h	/^	} src, dest;$/;"	m	struct:__anon54	typeref:struct:__anon54::__anon55
dest_area	include/dungeon.h	/^typedef struct dest_area {	\/* non-stairway level change indentifier *\/$/;"	s
dest_area	include/dungeon.h	/^} dest_area;$/;"	t	typeref:struct:dest_area
destroy_arm	src/do_wear.c	/^int destroy_arm(struct obj *atmp) {$/;"	f
destroy_drawbridge	src/dbridge.c	/^void destroy_drawbridge (int x, int y) {$/;"	f
destroy_item	src/zap.c	/^void destroy_item(int osym, int dmgtyp) {$/;"	f
destroy_mbag	src/pickup.c	/^void destroy_mbag(struct obj *bomb, boolean silent) {$/;"	f
destroy_mitem	src/zap.c	/^int destroy_mitem(struct monst *mtmp, int osym, int dmgtyp) {$/;"	f
destroy_nhwindow	include/winprocs.h	89;"	d
destroy_strings	src/zap.c	/^const char * const destroy_strings[] = {	\/* also used in trap.c *\/$/;"	v
destroy_toptenwin	src/topten.c	/^destroy_toptenwin() {$/;"	f
detect_wsegs	src/worm.c	/^void detect_wsegs(struct monst *worm, boolean use_detection_glyph) {$/;"	f
detected_mon_to_glyph	include/display.h	290;"	d
detected_monnum_to_glyph	include/display.h	314;"	d
dev_name	src/mplayer.c	/^static const char * dev_name() {$/;"	f	file:
developers	src/mplayer.c	/^static const char *developers[] = {$/;"	v	file:
dfeature_at	src/invent.c	/^const char *dfeature_at(int x, int y, char *buf) {$/;"	f
dfr_post_msg	src/do.c	/^             *dfr_post_msg = 0;	\/* pline() after level change *\/$/;"	v	file:
dfr_pre_msg	src/do.c	/^static char *dfr_pre_msg = 0,	\/* pline() before level change *\/$/;"	v	file:
dgn	src/dungeon.c	/^	xchar dgn[MAXLINFO];$/;"	m	struct:lchoice	file:
dgn_growths	src/hack.c	/^void dgn_growths(boolean showmsg \/* show messages *\/, boolean update \/* do newsym() *\/) {$/;"	f
dgn_topology	include/decl.h	/^extern struct dgn_topology {		\/* special dungeon levels for speed *\/$/;"	s
di	include/you.h	/^	schar di;		\/* direction of FF *\/$/;"	m	struct:you
dice	src/uhitm.c	30;"	d	file:
did_dig_msg	src/dig.c	/^static boolean did_dig_msg;$/;"	v	file:
died	include/decl.h	/^	uchar	died;$/;"	m	struct:mvitals
dieroll	include/attk.h	/^	xchar	dieroll;		\/* The die roll used for the attack *\/$/;"	m	struct:Attk
dieroll	src/mhitm.c	/^static int dieroll;$/;"	v	file:
dieroll	src/mhitu.c	/^static int dieroll;$/;"	v	file:
dieroll	src/uhitm.c	/^static int dieroll;$/;"	v	file:
dig	src/dig.c	/^static int dig(void) {$/;"	f	file:
dig_area	src/explode.c	/^	ExplodeRegion *fiery_area, *gas_area, *dig_area;$/;"	m	struct:grenade_callback	file:
dig_check	src/dig.c	/^boolean dig_check(struct monst *madeby, boolean verbose, int x, int y) {$/;"	f
dig_corridor	src/sp_lev.c	/^boolean dig_corridor(coord *org, coord *dest, boolean nxcor, schar ftyp, schar btyp) {$/;"	f
dig_info	include/decl.h	/^extern struct dig_info {		\/* apply.c, hack.c *\/$/;"	s
dig_point	src/vision.c	/^dig_point(row,col)$/;"	f	file:
dig_typ	src/dig.c	/^static int dig_typ(struct obj *otmp, xchar x, xchar y) {$/;"	f	file:
dig_up_grave	src/dig.c	/^static void dig_up_grave(void) {$/;"	f	file:
digactualhole	src/dig.c	/^void digactualhole (int x, int y, struct monst *madeby, int ttyp) {$/;"	f
digging	src/decl.c	/^struct dig_info digging;$/;"	v	typeref:struct:dig_info
dighole	src/dig.c	/^boolean dighole(boolean pit_only) {$/;"	f
digit	src/hacklib.c	/^boolean digit(char c) {$/;"	f
digpos	include/sp_lev.h	/^} digpos;$/;"	t	typeref:struct:__anon40
digs	include/sp_lev.h	/^	digpos **digs;$/;"	m	struct:__anon52
dipfountain	src/fountain.c	/^void dipfountain(struct obj *obj) {$/;"	f
diptoilet	src/fountain.c	/^void diptoilet(struct obj *obj) {$/;"	f
dir	include/dlb.h	/^	libdir *dir;	\/* directory of library file *\/$/;"	m	struct:dlb_library
dir	include/sp_lev.h	/^	xchar x, y, dir, db_open;$/;"	m	struct:__anon38
dir	include/sp_lev.h	/^	xchar x, y, dir;$/;"	m	struct:__anon39
dircheck	sys/share/pcsys.c	/^void dircheck(void) {$/;"	f
directional_scroll	win/curses/cursmesg.c	/^directional_scroll(winid wid, int nlines)$/;"	f	file:
dirs	src/mkmap.c	/^static int dirs[16] = {$/;"	v	file:
disallowed_if_fuzzing	include/func_tab.h	/^	bool disallowed_if_fuzzing;$/;"	m	struct:ext_func_tab
disarm_fire_trap	src/trap.c	/^	static int disarm_fire_trap(struct trap *ttmp) {$/;"	f	file:
disarm_holdingtrap	src/trap.c	/^	static int disarm_holdingtrap(struct trap *ttmp) {$/;"	f	file:
disarm_landmine	src/trap.c	/^	static int disarm_landmine(struct trap *ttmp) {$/;"	f	file:
disarm_rust_trap	src/trap.c	/^	static int disarm_rust_trap(struct trap *ttmp) {$/;"	f	file:
disarm_shooting_trap	src/trap.c	/^	static int disarm_shooting_trap(struct trap *ttmp, int otyp) {$/;"	f	file:
disarm_squeaky_board	src/trap.c	/^	static int disarm_squeaky_board(struct trap *ttmp) {$/;"	f	file:
disarmpotion	src/trap.c	/^	static const char disarmpotion[] = { ALL_CLASSES, POTION_CLASS, 0 };$/;"	v	file:
discard_minvent	src/mkobj.c	/^discard_minvent (struct monst *mtmp) {$/;"	f
disclose	src/end.c	/^static void disclose(int how, boolean taken) {$/;"	f	file:
disclosure_options	src/decl.c	/^const char disclosure_options[] = "iavgc";$/;"	v
disco	src/o_init.c	/^static short disco[NUM_OBJECTS] = DUMMY;$/;"	v	file:
discover	include/flag.h	31;"	d
discover_artifact	src/artifact.c	/^void discover_artifact(xchar m) {$/;"	f
discover_menu	src/cmd.c	/^static const struct menu_tab discover_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
discover_object	src/o_init.c	/^void discover_object(int oindx, boolean mark_as_known, boolean credit_hero) {$/;"	f
diseasemu	src/mhitu.c	/^static boolean diseasemu(struct permonst *mdat) {$/;"	f	file:
dismiss_more	include/wintty.h	/^	char dismiss_more;		\/* extra character accepted at --More-- *\/$/;"	m	struct:DisplayDesc
dismount_steed	src/steed.c	/^void dismount_steed ( int reason		) {$/;"	f
disp_artifact_discoveries	src/artifact.c	/^int disp_artifact_discoveries(winid tmpwin \/* supplied by dodiscover() *\/) {$/;"	f
dispater_level	include/decl.h	93;"	d
display_binventory	src/invent.c	/^int display_binventory(int x, int y, boolean as_if_seen) {$/;"	f
display_cinventory	src/invent.c	/^struct obj *display_cinventory(struct obj *obj) {$/;"	f
display_cursor_info	sys/winnt/nttty.c	/^static boolean display_cursor_info = false;$/;"	v	file:
display_file	include/winprocs.h	92;"	d
display_inventory	src/invent.c	/^char display_inventory(const char *lets, boolean want_reply) {$/;"	f
display_minventory	src/invent.c	/^struct obj *display_minventory(struct monst *mon, int dflags, char *title) {$/;"	f
display_monster	src/display.c	/^display_monster($/;"	f	file:
display_nhwindow	include/winprocs.h	88;"	d
display_pickinv	src/invent.c	/^static char display_pickinv(const char *lets, boolean want_reply, long* out_cnt, boolean want_dump)$/;"	f	file:
display_self	include/display.h	208;"	d
display_txt	include/mail.h	/^	const char *display_txt;	\/* text for daemon to verbalize *\/$/;"	m	struct:mail_info
display_warning	src/display.c	/^static void display_warning(struct monst *mon) {$/;"	f	file:
disrobing	src/do_wear.c	/^static const char *disrobing = "";$/;"	v	file:
dist	include/attk.h	/^	xchar	dist;			\/* Distance from amon to dmon *\/$/;"	m	struct:Attk
dist2	src/hacklib.c	/^int dist2(int x0, int y0, int x1, int y1) {$/;"	f
distant_monnam	src/do_name.c	/^char *distant_monnam(struct monst *mon,$/;"	f
distant_name	src/objnam.c	/^char * distant_name (struct obj *obj, char *(*func)( struct obj*)) {$/;"	f
distfleeck	src/monmove.c	/^static void distfleeck(struct monst *mtmp, int *inrange, int *nearby, int *scared) {$/;"	f	file:
distmin	src/hacklib.c	/^int distmin(int x0, int y0, int x1, int y1) {$/;"	f
distu	include/hack.h	277;"	d
disturb	src/monmove.c	/^static int disturb(struct monst *mtmp) {$/;"	f	file:
disturbed	include/rm.h	456;"	d
djinni_count	include/flag.h	/^	int	 djinni_count, ghost_count;	\/* potion effect tuning *\/$/;"	m	struct:flag
djinni_from_bottle	src/potion.c	/^void djinni_from_bottle (struct obj *obj) {$/;"	f
dkilled	include/attk.h	/^	bool dkilled;	\/* Defender is killed *\/$/;"	m	struct:Attk
dknown	include/obj.h	/^	bool dknown;	\/* color or text known *\/$/;"	m	struct:obj
dknowns	src/mkobj.c	/^static const char dknowns[] = {$/;"	v	file:
dlb	include/dlb.h	/^} dlb;$/;"	t	typeref:struct:__anon28
dlb	include/dlb.h	90;"	d
dlb_cleanup	include/dlb.h	93;"	d
dlb_cleanup	src/dlb.c	/^void dlb_cleanup(void) {$/;"	f
dlb_cleanup_proc	src/dlb.c	/^	void (*dlb_cleanup_proc)(void);$/;"	m	struct:dlb_procs	file:
dlb_directory	include/dlb.h	/^typedef struct dlb_directory {$/;"	s
dlb_fclose	include/dlb.h	96;"	d
dlb_fclose	src/dlb.c	/^int dlb_fclose(dlb *dp) {$/;"	f
dlb_fclose_proc	src/dlb.c	/^	int (*dlb_fclose_proc)(dlb*);$/;"	m	struct:dlb_procs	file:
dlb_fgetc	include/dlb.h	100;"	d
dlb_fgetc	src/dlb.c	/^int dlb_fgetc(dlb *dp) {$/;"	f
dlb_fgetc_proc	src/dlb.c	/^	int (*dlb_fgetc_proc)(dlb*);$/;"	m	struct:dlb_procs	file:
dlb_fgets	include/dlb.h	99;"	d
dlb_fgets	src/dlb.c	/^char *dlb_fgets(char *buf, int len, dlb *dp) {$/;"	f
dlb_fgets_proc	src/dlb.c	/^	char *(*dlb_fgets_proc)(char *,int,dlb*);$/;"	m	struct:dlb_procs	file:
dlb_fopen	include/dlb.h	95;"	d
dlb_fopen	src/dlb.c	/^dlb *dlb_fopen(const char *name, const char *mode) {$/;"	f
dlb_fopen_proc	src/dlb.c	/^	boolean (*dlb_fopen_proc)(dlb*,const char *,const char *);$/;"	m	struct:dlb_procs	file:
dlb_fread	include/dlb.h	97;"	d
dlb_fread	src/dlb.c	/^int dlb_fread(char *buf, int size, int quan, dlb *dp) {$/;"	f
dlb_fread_proc	src/dlb.c	/^	int (*dlb_fread_proc)(char *,int,int,dlb*);$/;"	m	struct:dlb_procs	file:
dlb_fseek	include/dlb.h	98;"	d
dlb_fseek	src/dlb.c	/^int dlb_fseek(dlb *dp, long pos, int whence) {$/;"	f
dlb_fseek_proc	src/dlb.c	/^	int (*dlb_fseek_proc)(dlb*,long,int);$/;"	m	struct:dlb_procs	file:
dlb_ftell	include/dlb.h	101;"	d
dlb_ftell	src/dlb.c	/^long dlb_ftell(dlb *dp) {$/;"	f
dlb_ftell_proc	src/dlb.c	/^	long (*dlb_ftell_proc)(dlb*);$/;"	m	struct:dlb_procs	file:
dlb_init	include/dlb.h	92;"	d
dlb_init	src/dlb.c	/^boolean dlb_init(void) {$/;"	f
dlb_init_proc	src/dlb.c	/^	boolean (*dlb_init_proc)(void);$/;"	m	struct:dlb_procs	file:
dlb_initialized	src/dlb.c	/^static boolean dlb_initialized = false;$/;"	v	file:
dlb_library	include/dlb.h	/^typedef struct dlb_library {$/;"	s
dlb_libs	src/dlb.c	/^static library dlb_libs[MAX_LIBS];$/;"	v	file:
dlb_node	win/proxy/dlbh.c	/^struct dlb_node {$/;"	s	file:
dlb_procs	src/dlb.c	/^static const dlb_procs_t *dlb_procs;$/;"	v	file:
dlb_procs	src/dlb.c	/^typedef struct dlb_procs {$/;"	s	file:
dlb_procs_t	src/dlb.c	/^} dlb_procs_t;$/;"	t	typeref:struct:dlb_procs	file:
dlbh_fclose	win/proxy/dlbh.c	/^dlbh_fclose(fh)$/;"	f
dlbh_fgetc	win/proxy/dlbh.c	/^dlbh_fgetc(fh)$/;"	f
dlbh_fgets	win/proxy/dlbh.c	/^dlbh_fgets(buf, len, fh)$/;"	f
dlbh_find_node	win/proxy/dlbh.c	/^dlbh_find_node(int fh)$/;"	f	file:
dlbh_fopen	win/proxy/dlbh.c	/^int dlbh_fopen(const char *file, const char *mode) {$/;"	f
dlbh_fread	win/proxy/dlbh.c	/^dlbh_fread(buf, size, quan, fh)$/;"	f
dlbh_fseek	win/proxy/dlbh.c	/^dlbh_fseek(fh, pos, whence)$/;"	f
dlbh_ftell	win/proxy/dlbh.c	/^dlbh_ftell(fh)$/;"	f
dlevel	include/dungeon.h	/^	d_level	dlevel;		\/* dungeon & level numbers *\/$/;"	m	struct:s_level
dlevel	include/dungeon.h	/^	xchar	dlevel;		\/* level number *\/$/;"	m	struct:d_level
dlevel_t	include/rm.h	/^dlevel_t;$/;"	t	typeref:struct:__anon30
dllname	sys/winnt/nh340key.c	/^char dllname[512];$/;"	v
dllname	sys/winnt/nhdefkey.c	/^char dllname[512];$/;"	v
dllname	sys/winnt/nhraykey.c	/^char dllname[512];$/;"	v
dlord	src/minion.c	/^int dlord(aligntyp atyp) {$/;"	f
dmgtype	src/mondata.c	/^boolean dmgtype(struct permonst *ptr, int dtyp) {$/;"	f
dmgtype_fromattack	src/mondata.c	/^struct attack * dmgtype_fromattack (struct permonst *ptr, int dtyp, int atyp) {$/;"	f
dmgval	src/weapon.c	/^int dmgval (struct obj *otmp, struct monst *mon) {$/;"	f
dmon	include/attk.h	/^	struct monst *dmon;		\/* Defending monster *\/$/;"	m	struct:Attk	typeref:struct:Attk::monst
dmonsfree	src/mon.c	/^void dmonsfree (void) {$/;"	f
dmore	win/tty/wintty.c	/^static void dmore(struct WinDesc *cw, const char *valid_responses) {$/;"	f	file:
dname	include/dungeon.h	/^	char	dname[24];	\/* name of the dungeon (eg. "Hell") *\/$/;"	m	struct:dungeon
dname_to_dnum	src/dungeon.c	/^static xchar dname_to_dnum(const char *s) {$/;"	f	file:
dndest	src/decl.c	/^dest_area dndest = { 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
dnladder	src/decl.c	/^stairway upladder = { 0, 0 }, dnladder = { 0, 0 };$/;"	v
dnstair	src/decl.c	/^stairway upstair = { 0, 0 }, dnstair = { 0, 0 };$/;"	v
dnstairs_room	src/decl.c	/^struct mkroom *upstairs_room, *dnstairs_room, *sstairs_room;$/;"	v	typeref:struct:
dnum	include/dungeon.h	/^	xchar	dnum;		\/* dungeon number *\/$/;"	m	struct:d_level
do_break_wand	src/apply.c	/^static int do_break_wand(struct obj *obj) {$/;"	f	file:
do_class_genocide	src/read.c	/^static void do_class_genocide (void) {$/;"	f	file:
do_clear_area	src/vision.c	/^do_clear_area(scol,srow,range,func,arg)$/;"	f
do_comp	src/mklev.c	/^static int do_comp(const void *vx, const void *vy) {$/;"	f	file:
do_containerconts	src/end.c	/^void do_containerconts(struct obj *list, boolean identified, boolean all_containers, boolean want_dump)$/;"	f
do_dknown_of	src/detect.c	/^static void do_dknown_of(struct obj *obj) {$/;"	f	file:
do_dlb_cleanup	src/dlb.c	370;"	d	file:
do_dlb_fclose	src/dlb.c	372;"	d	file:
do_dlb_fgetc	src/dlb.c	376;"	d	file:
do_dlb_fgets	src/dlb.c	375;"	d	file:
do_dlb_fopen	src/dlb.c	371;"	d	file:
do_dlb_fread	src/dlb.c	373;"	d	file:
do_dlb_fseek	src/dlb.c	374;"	d	file:
do_dlb_ftell	src/dlb.c	377;"	d	file:
do_dlb_init	src/dlb.c	369;"	d	file:
do_earthquake	src/music.c	/^do_earthquake(force)$/;"	f	file:
do_entity	src/dbridge.c	/^static void do_entity(struct entity *etmp) {$/;"	f	file:
do_explode	src/explode.c	/^do_explode($/;"	f
do_genocide	src/read.c	/^void do_genocide (int how) {$/;"	f
do_improvisation	src/music.c	/^do_improvisation(instr)$/;"	f	file:
do_light_sources	src/light.c	/^void do_light_sources (char **cs_rows) {$/;"	f
do_look	src/pager.c	/^static int do_look(boolean quick) {$/;"	f	file:
do_mapping	src/detect.c	/^void do_mapping(void) {$/;"	f
do_mname	src/do_name.c	/^int do_mname(void) {$/;"	f
do_oname	src/do_name.c	/^static void do_oname(struct obj *obj) {$/;"	f	file:
do_osshock	src/zap.c	/^void do_osshock(struct obj *obj) {$/;"	f
do_play_instrument	src/music.c	/^do_play_instrument (struct obj *instr) {$/;"	f
do_positionbar	src/allmain.c	/^static void do_positionbar(void) {$/;"	f	file:
do_reset_eat	src/eat.c	/^static void do_reset_eat(void) {$/;"	f	file:
do_reset_learn	src/spell.c	/^static void do_reset_learn (void) {$/;"	f	file:
do_room_or_subroom	src/mklev.c	/^static void do_room_or_subroom(struct mkroom *croom, int lowx, int lowy, int hix, int hiy, boolean lit, schar rtype, boolean special, boolean is_room) {$/;"	f	file:
do_storms	src/timeout.c	/^void do_storms (void) {$/;"	f
do_takeoff	src/do_wear.c	/^static struct obj *do_takeoff() {$/;"	f	file:
do_vanquished	src/end.c	/^void do_vanquished(int defquery, boolean ask, boolean want_dump)$/;"	f
do_vault	src/mklev.c	46;"	d	file:
do_vicinity_map	src/detect.c	/^void do_vicinity_map(void) {$/;"	f
doaltarobj	src/do.c	/^void doaltarobj(struct obj *obj) {$/;"	f
doapply	src/apply.c	/^int doapply(void) {$/;"	f
doattributes	src/cmd.c	/^static int doattributes(void) {$/;"	f	file:
doblitz	src/tech.c	/^static int doblitz (void) {$/;"	f	file:
doblitzlist	src/tech.c	/^static void doblitzlist (void) {$/;"	f	file:
doborgtoggle	src/cmd.c	/^static int doborgtoggle(void) {$/;"	f	file:
dobreathe	src/polyself.c	/^int dobreathe (void) {$/;"	f
docall	src/do_name.c	/^void docall(struct obj *obj) {$/;"	f
docalm	src/tech.c	/^void docalm (void) {$/;"	f
docast	src/spell.c	/^int docast (void) {$/;"	f
dochat	src/sounds.c	/^dochat (void) {$/;"	f	file:
dochug	src/monmove.c	/^int dochug (struct monst *mtmp) {$/;"	f
dochugw	src/monmove.c	/^int dochugw (struct monst *mtmp) {$/;"	f
doclose	src/lock.c	/^int doclose(void) {$/;"	f
doconduct	src/cmd.c	/^static int doconduct(void) {$/;"	f	file:
doconsult	src/rumors.c	/^int doconsult(struct monst *oracl) {$/;"	f
docorner	win/tty/wintty.c	/^void docorner(int xmin, int ymax) {$/;"	f
docrt	src/display.c	/^void docrt(void) {$/;"	f
doddoremarm	src/do_wear.c	/^int doddoremarm(void) {$/;"	f
doddrop	src/do.c	/^int doddrop(void) {$/;"	f
dodip	src/potion.c	/^int dodip (void) {$/;"	f
dodiscovered	src/o_init.c	/^dodiscovered (void) {			\/* free after Robert Viduya *\/$/;"	f
dodoor	src/mklev.c	/^void dodoor(int x, int y, struct mkroom *aroom) {$/;"	f
dodown	src/do.c	/^int dodown(void) {$/;"	f
dodrink	src/potion.c	/^int dodrink (void) {$/;"	f
dodrop	src/do.c	/^int dodrop(void) {$/;"	f
doeat	src/eat.c	/^int doeat(void)	{$/;"	f
doengrave	src/engrave.c	/^int doengrave(void) {$/;"	f
does_block	src/vision.c	/^does_block (int x, int y, struct rm *lev) {$/;"	f
doextcmd	src/cmd.c	/^static int doextcmd(void) {$/;"	f	file:
doextlist	src/cmd.c	/^int doextlist(void) {$/;"	f
dofindgem	src/fountain.c	/^static void dofindgem(void) {$/;"	f	file:
dofire	src/dothrow.c	/^int dofire(void) {$/;"	f
dofiretrap	src/trap.c	/^	static void dofiretrap(struct obj *box) {$/;"	f	file:
doforce	src/lock.c	/^int doforce(void)		{$/;"	f
dog_eat	src/dogmove.c	/^int dog_eat(struct monst *mtmp, struct obj *obj, int x, int y, boolean devour) {$/;"	f
dog_goal	src/dogmove.c	/^static int dog_goal(struct monst *mtmp, struct edog *edog, int after, int udist, int whappr) {$/;"	f	file:
dog_hunger	src/dogmove.c	/^static boolean dog_hunger(struct monst *mtmp, struct edog *edog) {$/;"	f	file:
dog_invent	src/dogmove.c	/^static int dog_invent(struct monst *mtmp, struct edog *edog, int udist) {$/;"	f	file:
dog_move	src/dogmove.c	/^int dog_move(struct monst *mtmp, int after \/* this is extra fast monster movement *\/) {$/;"	f
dog_nutrition	src/dogmove.c	/^int dog_nutrition (struct monst *mtmp, struct obj *obj) {$/;"	f
dogaze	src/polyself.c	/^int dogaze (void) {$/;"	f
dogfood	src/dog.c	/^int dogfood(struct monst *mon, struct obj *obj) {$/;"	f
dogname	src/decl.c	/^char dogname[PL_PSIZ] = DUMMY;$/;"	v
dogushforth	src/fountain.c	/^void dogushforth (int drinking) {$/;"	f
dohelp	src/pager.c	/^dohelp (void) {$/;"	f
dohide	src/polyself.c	/^dohide (void) {$/;"	f
dohistory	src/pager.c	/^int dohistory(void) {$/;"	f
doidtrap	src/pager.c	/^doidtrap (void) {$/;"	f
doinvbill	src/shk.c	/^int doinvbill(int mode) {$/;"	f
doinvoke	src/artifact.c	/^int doinvoke(void) {$/;"	f
dojump	src/apply.c	/^int dojump(void) {$/;"	f
dokeylist	src/cmd.c	/^dokeylist(void) {$/;"	f
dokick	src/dokick.c	/^int dokick(void) {$/;"	f
dolistvanq	src/end.c	/^int dolistvanq(void) {$/;"	f
dolook	src/invent.c	/^int dolook(void) {$/;"	f
doloot	src/pickup.c	/^int doloot()	{$/;"	f
domagicportal	src/teleport.c	/^domagicportal (struct trap *ttmp) {$/;"	f
domagictrap	src/trap.c	/^	static void domagictrap(void) {$/;"	f	file:
domenusystem	src/cmd.c	/^static int domenusystem(void) {$/;"	f	file:
domindblast	src/polyself.c	/^domindblast (void) {$/;"	f
domonability	src/cmd.c	/^static int domonability(void) {$/;"	f	file:
domonnoise	src/sounds.c	/^static int domonnoise (struct monst *mtmp) {$/;"	f	file:
domove	src/hack.c	/^void domove(void) {$/;"	f
doname	src/objnam.c	/^char * doname (struct obj *obj) {$/;"	f
done	src/end.c	/^void done(int how) {$/;"	f
done1	src/end.c	/^void done1(int sig_unused \/* called as signal() handler, so sent at least one arg *\/) {$/;"	f
done2	src/end.c	/^int done2(void) {$/;"	f
done_eating	src/eat.c	/^static void done_eating(boolean message) {$/;"	f	file:
done_hangup	src/end.c	/^static void done_hangup(int sig \/* signal() handler *\/) {$/;"	f	file:
done_hup	include/decl.h	/^	int done_hup;		\/* SIGHUP or moral equivalent received$/;"	m	struct:sinfo
done_in_by	src/end.c	/^void done_in_by(struct monst *mtmp) {$/;"	f
done_intr	src/end.c	/^static void done_intr(int sig_unused \/* called as signal() handler, so sent at least one arg *\/) {$/;"	f	file:
done_money	src/decl.c	/^long done_money = 0;$/;"	v
done_stopprint	src/end.c	62;"	d	file:
done_stopprint	src/topten.c	9;"	d	file:
donning	src/do_wear.c	/^boolean donning(struct obj *otmp)		{$/;"	f
donull	src/do.c	/^int donull(void) {$/;"	f
doopen	src/lock.c	/^int doopen(void) {$/;"	f
door	build-linux/include/lev_comp.h	/^		xchar door;$/;"	m	struct:YYSTYPE::__anon25
door	build-linux/src/lev_yacc.c	/^		xchar door;$/;"	m	struct:YYSTYPE::__anon1	file:
door	include/mkroom.h	/^struct door {$/;"	s
door	include/sp_lev.h	/^		xchar door;$/;"	m	struct:__anon54::__anon55
door	include/sp_lev.h	/^} door;$/;"	t	typeref:struct:__anon32
door	src/lock.c	/^	struct rm  *door;$/;"	m	struct:xlock_s	typeref:struct:xlock_s::rm	file:
doorct	include/mkroom.h	/^	schar doorct;		\/* door count *\/$/;"	m	struct:mkroom
doorganize	src/invent.c	/^int doorganize(void) {$/;"	f
doorhere	src/extralev.c	154;"	d	file:
doorindex	src/decl.c	/^int doorindex = 0;$/;"	v
doorlock	src/lock.c	/^boolean doorlock(struct obj *otmp, int x, int y) {$/;"	f
doormask	include/rm.h	447;"	d
doors	include/sp_lev.h	/^	door **doors;$/;"	m	struct:__anon52
doors	include/sp_lev.h	/^	room_door **doors;$/;"	m	struct:_room
doors	src/decl.c	/^struct door doors[DOORMAX] = {DUMMY};$/;"	v	typeref:struct:door
doortable	src/extralev.c	/^	uchar doortable;$/;"	m	struct:rogueroom	file:
dop_abil	src/attrib.c	/^dop_abil[] = {\/* {   1, &(HPolymorph), "", "" },*\/$/;"	v	typeref:struct:innate	file:
dop_tech	src/tech.c	/^dop_tech[] = { {   1, T_LIQUID_LEAP, 1},$/;"	v	typeref:struct:	file:
dopay	src/shk.c	/^int dopay (void) {$/;"	f
dopayobj	src/shk.c	/^static int dopayobj(struct monst *shkp, struct bill_x *bp, struct obj **obj_p, int	which, boolean itemize) {$/;"	f	file:
dopickup	src/hack.c	/^int dopickup(void) {$/;"	f
dopotion	src/potion.c	/^int dopotion (struct obj *otmp) {$/;"	f
dopramulet	src/invent.c	/^int dopramulet(void) {$/;"	f
doprarm	src/invent.c	/^int doprarm(void) {$/;"	f
dopray	src/pray.c	/^dopray (void) {$/;"	f
doprev_message	src/cmd.c	/^static int doprev_message(void) {$/;"	f	file:
doprgold	src/invent.c	/^int doprgold(void) {$/;"	f
doprinuse	src/invent.c	/^int doprinuse(void) {$/;"	f
doprring	src/invent.c	/^int doprring(void) {$/;"	f
doprtool	src/invent.c	/^int doprtool(void) {$/;"	f
doprwep	src/invent.c	/^int doprwep(void) {$/;"	f
doputon	src/do_wear.c	/^int doputon(void) {$/;"	f
doquickwhatis	src/pager.c	/^doquickwhatis (void) {$/;"	f
doread	src/read.c	/^int doread (void) {$/;"	f
dorecover	src/restore.c	/^int dorecover (int fd) {$/;"	f
doredraw	src/display.c	/^int doredraw(void) {$/;"	f
doremove	src/polyself.c	/^int doremove (void) {$/;"	f
doremring	src/do_wear.c	/^int doremring(void) {$/;"	f
doreset	src/eat.c	/^	bool doreset;	\/* stop eating at end of turn *\/$/;"	m	struct:__anon6	file:
doride	src/steed.c	/^int doride (void) {$/;"	f
dorub	src/apply.c	/^int dorub(void) {$/;"	f
dosacrifice	src/pray.c	/^int dosacrifice (void) {$/;"	f
dosave	src/save.c	/^dosave (void) {$/;"	f
dosave0	src/save.c	/^dosave0() {$/;"	f
dosdoor	src/mklev.c	/^static void dosdoor(xchar x, xchar y, struct mkroom *aroom, int type) {$/;"	f	file:
dosearch	src/detect.c	/^int dosearch(void) {$/;"	f
dosearch0	src/detect.c	/^void dosearch0(bool aflag) {$/;"	f
doseduce	src/mhitu.c	/^int doseduce (struct monst *mon) {$/;"	f
doset	src/options.c	/^int doset(void) {$/;"	f
doset_add_menu	src/options.c	/^static void doset_add_menu(winid win, const char *option, int indexoffset) {$/;"	f	file:
dosh	sys/share/pcsys.c	/^int dosh(void) {$/;"	f
dosh	sys/unix/unixunix.c	/^dosh()$/;"	f
dosinkfall	src/hack.c	/^static void dosinkfall(void) {$/;"	f	file:
dosinkring	src/do.c	/^static void dosinkring(struct obj *obj) {$/;"	f	file:
dosit	src/sit.c	/^dosit() {$/;"	f
dosounds	src/sounds.c	/^dosounds (void) {$/;"	f
dospellmenu	src/spell.c	/^static boolean dospellmenu(const char *prompt, int splaction, int *spell_no) {$/;"	f	file:
dospinweb	src/polyself.c	/^int dospinweb (void) {$/;"	f
dospit	src/polyself.c	/^int dospit (void) {$/;"	f
dosummon	src/polyself.c	/^dosummon (void) {$/;"	f
dosuspend	sys/share/ioctl.c	/^int dosuspend(void) {$/;"	f
doswapweapon	src/wield.c	/^int doswapweapon (void) {$/;"	f
dotakeoff	src/do_wear.c	/^int dotakeoff(void) {$/;"	f
dotalk	src/sounds.c	/^dotalk (void) {$/;"	f
dotech	src/tech.c	/^int dotech (void) {$/;"	f
dotechmenu	src/tech.c	/^static boolean dotechmenu(int how, int *tech_no) {$/;"	f	file:
dotele	src/teleport.c	/^dotele (void) {$/;"	f
dothrow	src/dothrow.c	/^int dothrow(void) {$/;"	f
dotogglepickup	src/options.c	/^int dotogglepickup (void) {$/;"	f
dotrap	src/trap.c	/^dotrap (struct trap *trap, unsigned trflags) {$/;"	f
dotravel	src/cmd.c	/^static int dotravel(void) {$/;"	f	file:
doturn	src/pray.c	/^int doturn (void) {$/;"	f
dotwoweapon	src/wield.c	/^int dotwoweapon (void) {$/;"	f
dotypeinv	src/invent.c	/^int dotypeinv(void) {$/;"	f
dounpaid	src/invent.c	/^static void dounpaid(void) {$/;"	f	file:
dountrap	src/trap.c	/^	int dountrap(void)	{$/;"	f
doup	src/do.c	/^int doup(void) {$/;"	f
doversion	src/version.c	/^int doversion(void) {$/;"	f
dovspell	src/spell.c	/^dovspell (void) {$/;"	f
dowaterdemon	src/fountain.c	/^static void dowaterdemon(void) {$/;"	f	file:
dowaternymph	src/fountain.c	/^static void dowaternymph(void) {$/;"	f	file:
dowatersnakes	src/fountain.c	/^static void dowatersnakes(void) {$/;"	f	file:
dowear	src/do_wear.c	/^int dowear(void) {$/;"	f
dowhatdoes	src/pager.c	/^dowhatdoes (void) {$/;"	f
dowhatdoes_core	src/pager.c	/^dowhatdoes_core (char q, char *cbuf) {$/;"	f
dowhatis	src/pager.c	/^dowhatis (void) {$/;"	f
dowield	src/wield.c	/^int dowield (void) {$/;"	f
dowieldquiver	src/wield.c	/^int dowieldquiver (void) {$/;"	f
dowipe	src/do.c	/^int dowipe(void) {$/;"	f
down	include/decl.h	/^	boolean down, chew, warned, quiet;$/;"	m	struct:dig_info
down_gate	src/dokick.c	/^schar down_gate(xchar x, xchar y) {$/;"	f
downgrade_obj	src/potion.c	/^static void downgrade_obj(struct obj *obj, int nomagic, boolean *used) {$/;"	f	file:
dowrite	src/write.c	/^dowrite (struct obj *pen) {$/;"	f
dozap	src/zap.c	/^int dozap(void) {$/;"	f
dp	src/explode.c	/^static int dp(int n, int p) {$/;"	f	file:
dprince	src/minion.c	/^int dprince(aligntyp atyp) {$/;"	f
draconic	src/polyself.c	/^} draconic;$/;"	v	typeref:struct:__anon17	file:
drag_ball	src/ball.c	/^boolean drag_ball(xchar x, xchar y, int *bc_control, xchar *ballx, xchar *bally, xchar *chainx, xchar *chainy, boolean *cause_delay, boolean allow_drag) {$/;"	f
drag_down	src/ball.c	/^void drag_down(void) {$/;"	f
drain_en	src/trap.c	/^	void drain_en(int n) {$/;"	f
drain_item	src/zap.c	/^boolean drain_item( struct obj *obj) {$/;"	f
drainlevel	include/obj.h	266;"	d
draw_bar	win/curses/cursstat.c	/^draw_bar(bool is_hp, int cur, int max, const char *title)$/;"	f	file:
draw_energy	src/tech.c	/^static int draw_energy() {$/;"	f	file:
draw_horizontal	win/curses/cursstat.c	/^draw_horizontal(int x, int y, int hp, int hpmax)$/;"	f	file:
draw_horizontal_new	win/curses/cursstat.c	/^draw_horizontal_new(int x, int y, int hp, int hpmax)$/;"	f	file:
draw_trouble_str	win/curses/cursstat.c	/^draw_trouble_str(const char *str)$/;"	f	file:
draw_vertical	win/curses/cursstat.c	/^draw_vertical(int x, int y, int hp, int hpmax)$/;"	f	file:
drawbridge	include/sp_lev.h	/^} drawbridge;$/;"	t	typeref:struct:__anon38
drawbridgemask	include/rm.h	451;"	d
drawbridges	include/sp_lev.h	/^	drawbridge **drawbridges;$/;"	m	struct:__anon52
drinkfountain	src/fountain.c	/^void drinkfountain(void) {$/;"	f
drinksink	src/fountain.c	/^void drinksink(void) {$/;"	f
drinktoilet	src/fountain.c	/^void drinktoilet(void) {$/;"	f
drop	src/do.c	/^static int drop(struct obj *obj) {$/;"	f	file:
drop_ball	src/ball.c	/^void drop_ball(xchar x, xchar y) {$/;"	f
drop_ripe_treefruit	src/hack.c	/^boolean drop_ripe_treefruit(xchar x, xchar y, boolean showmsg, boolean update) {$/;"	f
drop_throw	src/mthrowu.c	/^static int drop_throw(struct monst *mon, struct obj *obj, boolean ohit, int x, int y) {$/;"	f	file:
drop_to	src/dokick.c	/^static void drop_to(coord *cc, schar loc) {$/;"	f	file:
drop_types	src/do.c	/^static const char drop_types[] =$/;"	v	file:
drop_upon_death	src/bones.c	/^static void drop_upon_death(struct monst *mtmp, struct obj *cont) {$/;"	f	file:
drop_uswapwep	src/wield.c	/^void drop_uswapwep (void) {$/;"	f
drop_weapon	src/polyself.c	/^static void drop_weapon(int alone) {$/;"	f	file:
dropdist	include/edog.h	/^	unsigned dropdist;		\/* dist of drpped obj from @ *\/$/;"	m	struct:edog
dropped_container	src/shk.c	/^static void dropped_container(struct obj *obj, struct monst *shkp, boolean sale) {$/;"	f	file:
droptime	include/edog.h	/^	long droptime;			\/* moment dog dropped object *\/$/;"	m	struct:edog
dropx	src/do.c	/^void dropx(struct obj *obj) {$/;"	f
dropy	src/do.c	/^void dropy(struct obj *obj) {$/;"	f
drown	src/trap.c	/^	boolean drown(void) {$/;"	f
dryup	src/fountain.c	/^void dryup(xchar x, xchar y, boolean isyou) {$/;"	f
dst	include/trap.h	/^	d_level dst;	\/* destination for portals *\/$/;"	m	struct:trap
dtoxy	src/cmd.c	/^void dtoxy(coord *cc, int dd) {$/;"	f
dummy	src/objects.c	/^	struct monst *dummy;$/;"	m	struct:monst	typeref:struct:monst::monst	file:
dump	src/end.c	/^void dump(char *pre, char *str) {$/;"	f
dump_conduct	src/cmd.c	/^void dump_conduct(int final) {$/;"	f
dump_enlightenment	src/cmd.c	/^void dump_enlightenment(int final) {$/;"	f
dump_exit	src/end.c	/^void dump_exit(void) {$/;"	f
dump_fn	src/decl.c	/^char dump_fn[PL_PSIZ] = DUMMY;$/;"	v
dump_fn	src/decl.c	/^char dump_fn[] = DUMP_FN;$/;"	v
dump_fp	src/end.c	/^FILE *dump_fp = NULL;  \/* file pointer for dumps *\/$/;"	v
dump_init	src/end.c	/^void dump_init(void) {$/;"	f
dump_inventory	src/invent.c	/^char dump_inventory(const char *lets, boolean want_reply) {$/;"	f
dump_screen	src/display.c	/^void dump_screen(void) {$/;"	f
dump_spells	src/spell.c	/^void dump_spells (void) {$/;"	f
dump_weapon_skill	src/weapon.c	/^dump_weapon_skill (void) {$/;"	f
dumpit	src/dungeon.c	/^static void dumpit(void) {$/;"	f	file:
dungeon	include/dungeon.h	/^typedef struct dungeon {	\/* basic dungeon identifier *\/$/;"	s
dungeon	include/dungeon.h	/^} dungeon;$/;"	t	typeref:struct:dungeon
dungeon_branch	src/dungeon.c	/^branch *dungeon_branch(const char *s) {$/;"	f
dungeon_topology	src/decl.c	/^struct dgn_topology dungeon_topology = {DUMMY};$/;"	v	typeref:struct:dgn_topology
dungeons	src/decl.c	/^dungeon dungeons[MAXDUNGEON];	\/* ini'ed by init_dungeon() *\/$/;"	v
dunlev	src/dungeon.c	/^xchar dunlev(d_level *lev) {$/;"	f
dunlev_reached	include/decl.h	138;"	d
dunlev_ureached	include/dungeon.h	/^	xchar	dunlev_ureached; \/* how deep you have been in this dungeon *\/$/;"	m	struct:dungeon
dunlevs_in_dungeon	src/dungeon.c	/^xchar dunlevs_in_dungeon(d_level *lev) {$/;"	f
duplicate_opt_detection	src/options.c	/^static void duplicate_opt_detection(const char *opts, bool is_compound_option) {$/;"	f	file:
dvis	include/attk.h	/^	bool dvis;		\/* Player can see dmon *\/$/;"	m	struct:Attk
dwa_abil	src/attrib.c	/^dwa_abil[] = { { 1, &(HSearching), "", "" },$/;"	v	typeref:struct:innate	file:
dwa_tech	src/tech.c	/^dwa_tech[] = { {   1, T_RAGE, 1},$/;"	v	typeref:struct:	file:
dx	include/attk.h	/^	schar	dx, dy, dz;		\/* Direction of the attack *\/$/;"	m	struct:Attk
dx	include/lev.h	/^	schar dx, dy;	\/* the general direction of the bubble's movement *\/$/;"	m	struct:bubble
dx	include/you.h	/^	schar dx, dy, dz;	\/* direction of move (or zap or ... ) *\/$/;"	m	struct:you
dx	src/explode.c	/^	schar dx;			\/* direction of			*\/$/;"	m	struct:scatter_chain	file:
dx	src/extralev.c	/^	xchar dx, dy;$/;"	m	struct:rogueroom	file:
dy	include/attk.h	/^	schar	dx, dy, dz;		\/* Direction of the attack *\/$/;"	m	struct:Attk
dy	include/lev.h	/^	schar dx, dy;	\/* the general direction of the bubble's movement *\/$/;"	m	struct:bubble
dy	include/you.h	/^	schar dx, dy, dz;	\/* direction of move (or zap or ... ) *\/$/;"	m	struct:you
dy	src/explode.c	/^	schar dy;			\/*	travel			*\/$/;"	m	struct:scatter_chain	file:
dy	src/extralev.c	/^	xchar dx, dy;$/;"	m	struct:rogueroom	file:
dyou	include/attk.h	/^	bool dyou;		\/* You are the defender *\/$/;"	m	struct:Attk
dz	include/attk.h	/^	schar	dx, dy, dz;		\/* Direction of the attack *\/$/;"	m	struct:Attk
dz	include/you.h	/^	schar dx, dy, dz;	\/* direction of move (or zap or ... ) *\/$/;"	m	struct:you
e_at	src/dbridge.c	/^static struct entity *e_at(int x, int y) {$/;"	f	file:
e_atr2str	win/tty/termcap.c	/^static char *e_atr2str(int n) {$/;"	f	file:
e_canseemon	src/dbridge.c	265;"	d	file:
e_died	src/dbridge.c	/^static void e_died(struct entity *etmp, int dest, int how) {$/;"	f	file:
e_jumps	src/dbridge.c	/^static boolean e_jumps(struct entity *etmp) {$/;"	f	file:
e_missed	src/dbridge.c	/^static boolean e_missed(struct entity *etmp, boolean chunks) {$/;"	f	file:
e_nam	src/dbridge.c	/^static const char *e_nam(struct entity *etmp) {$/;"	f	file:
e_survives_at	src/dbridge.c	/^static boolean e_survives_at(struct entity *etmp, int x, int y) {$/;"	f	file:
earth_level	include/decl.h	98;"	d
eataccessory	src/eat.c	/^static void eataccessory(struct obj *otmp) {$/;"	f	file:
eatcorpse	src/eat.c	/^static int eatcorpse(struct obj *otmp) {$/;"	f	file:
eaten	include/decl.h	/^	uchar	eaten;		\/* WAC -- eaten memory *\/$/;"	m	struct:mvitals
eaten_stat	src/eat.c	/^int eaten_stat(int base, struct obj *obj) {$/;"	f
eatfood	src/eat.c	/^static int eatfood(void) {$/;"	f	file:
eating	src/eat.c	/^	bool eating;	\/* victual currently being eaten *\/$/;"	m	struct:__anon6	file:
eatmbuf	src/eat.c	/^static char *eatmbuf = 0;	\/* set by cpostfx() *\/$/;"	v	file:
eatmdone	src/eat.c	/^static int eatmdone(void) {$/;"	f	file:
eatspecial	src/eat.c	/^static void eatspecial(void) {$/;"	f	file:
ebubbles	src/mkmaze.c	/^static struct bubble *bbubbles, *ebubbles;$/;"	v	typeref:struct:	file:
echo	include/flag.h	/^	bool  echo;		\/* 1 to echo characters *\/$/;"	m	struct:instance_flags
echoflgs	sys/share/unixtty.c	106;"	d	file:
echoflgs	sys/share/unixtty.c	51;"	d	file:
edata	src/dbridge.c	/^	struct permonst *edata;   \/* must be non-zero for record to be valid *\/$/;"	m	struct:entity	typeref:struct:entity::permonst	file:
edge	include/rm.h	/^	bool edge;	\/* marks boundaries for special rooms*\/$/;"	m	struct:rm
edibility_prompts	src/eat.c	/^static int edibility_prompts(struct obj *otmp) {$/;"	f	file:
edog	include/edog.h	/^struct edog {$/;"	s
ef_desc	include/func_tab.h	/^	const char *ef_txt, *ef_desc;$/;"	m	struct:ext_func_tab
ef_funct	include/func_tab.h	/^	int (*ef_funct)(void);$/;"	m	struct:ext_func_tab
ef_txt	include/func_tab.h	/^	const char *ef_txt, *ef_desc;$/;"	m	struct:ext_func_tab
effort	include/decl.h	/^	int	effort;$/;"	m	struct:dig_info
egd	include/vault.h	/^struct egd {$/;"	s
egg_type_from_parent	src/mon.c	/^int egg_type_from_parent(int mnum, boolean force_ordinary) {$/;"	f
egyp	include/egyp.h	/^struct egyp {$/;"	s
eleash	include/eleash.h	/^struct eleash {$/;"	s
eleash	src/apply.c	/^	struct eleash *eleash;$/;"	m	struct:leash_check	typeref:struct:leash_check::eleash	file:
elf_abil	src/attrib.c	/^elf_abil[] = { {	4, &(HSleep_resistance), "awake", "tired" },$/;"	v	typeref:struct:innate	file:
elf_tech	src/tech.c	/^elf_tech[] = { \/* Put Tech here *\/$/;"	v	typeref:struct:	file:
emergency_disrobe	src/trap.c	/^	static boolean emergency_disrobe(boolean *lostsome) {$/;"	f	file:
emin	include/emin.h	/^struct emin {$/;"	s
emits_light	include/mondata.h	174;"	d
emon	src/dbridge.c	/^	struct monst *emon;	  \/* youmonst for the player *\/$/;"	m	struct:entity	typeref:struct:entity::monst	file:
en_win	src/cmd.c	/^static winid en_win;$/;"	v	file:
enadv	include/you.h	/^	struct RoleAdvance enadv; \/* energy advancement *\/$/;"	m	struct:Race	typeref:struct:Race::RoleAdvance
enadv	include/you.h	/^	struct RoleAdvance enadv; \/* energy advancement *\/$/;"	m	struct:Role	typeref:struct:Role::RoleAdvance
enc_abbrev_stat	src/botl.c	/^const char *enc_abbrev_stat[] = {$/;"	v
enc_stat	src/botl.c	/^const char *enc_stat[] = {$/;"	v
encode_escapes	win/proxy/getopt.c	/^encode_escapes(buf, syms, length)$/;"	f	file:
encodeachieve	src/topten.c	/^encodeachieve(void) {$/;"	f
encodeconduct	src/topten.c	/^encodeconduct(void) {$/;"	f
encumber_msg	src/pickup.c	/^int encumber_msg() {$/;"	f
end1	include/dungeon.h	/^	d_level	  end1;		\/* "primary" end point *\/$/;"	m	struct:branch
end1_up	include/dungeon.h	/^	boolean	  end1_up;	\/* does end1 go up? *\/$/;"	m	struct:branch
end2	include/dungeon.h	/^	d_level	  end2;		\/* other end point *\/$/;"	m	struct:branch
end_around	include/flag.h	/^	int	 end_top, end_around;	\/* describe desired score list *\/$/;"	m	struct:flag
end_burn	src/timeout.c	/^void end_burn(struct obj *obj, boolean timer_attached) {$/;"	f
end_color_option	src/botl.c	/^void end_color_option(struct color_option color_option) {$/;"	f
end_delay	src/spell.c	/^static int end_delay;        \/* when to stop studying *\/$/;"	v	file:
end_disclose	include/flag.h	/^	char     end_disclose[NUM_DISCLOSURE_OPTIONS + 1];  \/* disclose various info$/;"	m	struct:flag
end_engulf	src/uhitm.c	/^	static void end_engulf() {$/;"	f	file:
end_glyphout	win/tty/wintty.c	/^void end_glyphout(void) {$/;"	f
end_menu	include/winprocs.h	95;"	d
end_of_input	src/cmd.c	/^static void end_of_input(void) {$/;"	f	file:
end_own	include/flag.h	/^	bool  end_own;	\/* list all own scores *\/$/;"	m	struct:flag
end_ptr	sys/share/random.c	/^static  long		*end_ptr		= &randtbl[ DEG_3 + 1 ];$/;"	v	file:
end_screen	include/winprocs.h	136;"	d
end_top	include/flag.h	/^	int	 end_top, end_around;	\/* describe desired score list *\/$/;"	m	struct:flag
ends	src/end.c	/^static const char *ends[] = {		\/* "when you..." *\/$/;"	v	file:
enemy1num	include/you.h	/^	      enemy1num,	\/* specific quest enemies (NON_PM == random) *\/$/;"	m	struct:Role
enemy1sym	include/you.h	/^	char  enemy1sym,	\/* quest enemies by class (S_) *\/$/;"	m	struct:Role
enemy2num	include/you.h	/^	      enemy2num;$/;"	m	struct:Role
enemy2sym	include/you.h	/^	      enemy2sym;$/;"	m	struct:Role
enermod	src/exper.c	/^static int enermod(int en) {$/;"	f	file:
enexto	src/teleport.c	/^boolean enexto(coord *cc, xchar xx, xchar yy, struct permonst *mdat) {$/;"	f
enexto_core	src/teleport.c	/^boolean enexto_core(coord *cc, xchar xx, xchar yy, struct permonst *mdat, unsigned entflags) {$/;"	f
engr	include/engrave.h	/^struct engr {$/;"	s
engr	include/sp_lev.h	/^	Str_or_Len engr;$/;"	m	struct:__anon48
engr_at	src/engrave.c	/^struct engr *engr_at(xchar x, xchar y) {$/;"	f
engr_lth	include/engrave.h	/^	unsigned engr_lth;	\/* for save & restore; not length of text *\/$/;"	m	struct:engr
engr_time	include/engrave.h	/^	long engr_time;		\/* moment engraving was (will be) finished *\/$/;"	m	struct:engr
engr_txt	include/engrave.h	/^	char *engr_txt;$/;"	m	struct:engr
engr_type	include/engrave.h	/^	xchar engr_type;$/;"	m	struct:engr
engr_x	include/engrave.h	/^	xchar engr_x, engr_y;$/;"	m	struct:engr
engr_y	include/engrave.h	/^	xchar engr_x, engr_y;$/;"	m	struct:engr
engraving	include/sp_lev.h	/^} engraving;$/;"	t	typeref:struct:__anon48
engravings	include/sp_lev.h	/^	engraving **engravings;$/;"	m	struct:__anon52
engravings	include/sp_lev.h	/^	engraving **engravings;$/;"	m	struct:_room
enhance_skill	src/weapon.c	/^int enhance_skill(boolean want_dump)$/;"	f
enhance_weapon_skill	src/weapon.c	/^int enhance_weapon_skill (void)$/;"	f
enl_msg	src/cmd.c	1076;"	d	file:
enlght_combatinc	src/cmd.c	/^static char *enlght_combatinc(const char *inctyp, int incamt, int final, char *outbuf) {$/;"	f	file:
enlght_line	src/cmd.c	/^static void enlght_line(const char *start, const char *middle, const char *end) {$/;"	f	file:
enlightenment	src/cmd.c	/^void enlightenment(int final	\/* 0 => still in progress; 1 => over, survived; 2 => dead *\/ ) {$/;"	f
enter_explore_mode	src/cmd.c	/^static int enter_explore_mode(void) {$/;"	f	file:
enter_f	include/region.h	/^	short enter_f;			\/* Function to call when the player enters*\/$/;"	m	struct:__anon29
enter_gehennom	include/decl.h	/^	bool enter_gehennom;  \/* Entered Gehennom (including the$/;"	m	struct:u_achieve
enter_msg	include/region.h	/^	const char* enter_msg;		\/* Message when entering *\/$/;"	m	struct:__anon29
entity	src/dbridge.c	/^struct entity {$/;"	s	file:
entries	win/curses/cursdial.c	/^    nhmenu_item *entries;       \/* Menu entries *\/$/;"	m	struct:nhm	file:
entry_lev	include/dgn_file.h	/^	int	entry_lev;	\/* entry level in target dungeon *\/$/;"	m	struct:tmpbranch
entry_lev	include/dungeon.h	/^	xchar	entry_lev;	\/* entry level *\/$/;"	m	struct:dungeon
eos	src/hacklib.c	/^char *eos(char *s) {$/;"	f
eos	util/dlb_main.c	/^char *eos(char *s) {$/;"	f
epathto	src/teleport.c	/^int epathto(coord *cc, int nc, xchar xx, xchar yy, struct permonst *mdat) {$/;"	f
epathto_debug_cc	src/teleport.c	/^coord epathto_debug_cc[100];$/;"	v
epitaphs	src/engrave.c	/^static const char *epitaphs[] = {$/;"	v	file:
epri	include/epri.h	/^struct epri {$/;"	s
equipname	src/steal.c	/^static const char * equipname(struct obj *otmp) {$/;"	f	file:
erase_char	sys/share/pctty.c	/^char erase_char, kill_char;$/;"	v
erase_char	sys/share/unixtty.c	/^	char erase_char, intr_char, kill_char;$/;"	v
erase_char	sys/winnt/nttty.c	/^char erase_char,kill_char;$/;"	v
erase_menu_or_text	win/tty/wintty.c	/^static void erase_menu_or_text(winid window, struct WinDesc *cw, bool clear) {$/;"	f	file:
erase_sym	sys/share/unixtty.c	102;"	d	file:
erase_sym	sys/share/unixtty.c	43;"	d	file:
eraseoldlocks	sys/share/pcunix.c	/^static int eraseoldlocks(void) {$/;"	f	file:
eraseoldlocks	sys/unix/unixunix.c	/^static int eraseoldlocks(void) {$/;"	f	file:
erode_armor	src/do_wear.c	/^void erode_armor(struct monst *victim, boolean acid_dmg) {$/;"	f
erode_obj	src/wield.c	/^void erode_obj(struct obj *target	, boolean acid_dmg, boolean fade_scrolls) {$/;"	f
erodeable_wep	src/wield.c	56;"	d	file:
error	sys/share/pctty.c	/^void error(const char *s, ...) {$/;"	f
error	sys/share/unixtty.c	/^void error(const char *s, ...) {$/;"	f
error	sys/winnt/nttty.c	/^void error(const char *s, ...) {$/;"	f
error	sys/winnt/winnt.c	/^void error(const char *s, ...) {$/;"	f
error4	src/display.c	/^static void error4(int x, int y, int a, int b, int c, int dd) {$/;"	f	file:
escapes	src/options.c	/^static void escapes(const char	*cp, char *tp) {$/;"	f	file:
eshk	include/eshk.h	/^struct eshk {$/;"	s
etype	include/sp_lev.h	/^	xchar etype;$/;"	m	struct:__anon48
evades_destruction	include/obj.h	141;"	d
ex	src/dbridge.c	/^	int ex, ey;$/;"	m	struct:entity	file:
exclam	src/zap.c	/^const char * exclam(int force) {$/;"	f
exepath	sys/share/pcmain.c	/^char *exepath(char *str) {$/;"	f
exepath	util/recover.c	/^char *exepath(char *str) {$/;"	f
exepathbuf	sys/share/pcmain.c	/^char exepathbuf[EXEPATHBUFSZ];$/;"	v
exepathbuf	util/recover.c	/^char exepathbuf[EXEPATHBUFSZ];$/;"	v
exerchk	src/attrib.c	/^void exerchk(void) {$/;"	f
exercise	src/attrib.c	/^void exercise(int i, boolean inc_or_dec) {$/;"	f
exercise_steed	src/steed.c	/^exercise_steed (void) {$/;"	f
exerper	src/attrib.c	/^static void exerper(void) {$/;"	f	file:
exist_artifact	src/artifact.c	/^boolean exist_artifact(int otyp, const char *name) {$/;"	f
exit_nhwindows	include/winprocs.h	83;"	d
exiting	include/decl.h	/^	int exiting;		\/* an exit handler is executing *\/$/;"	m	struct:sinfo
expels	src/mhitu.c	/^void expels(struct monst *mtmp, struct permonst *mdat, boolean message) {$/;"	f
experience	src/exper.c	/^int experience (struct monst *mtmp, int nk) {$/;"	f
expire_f	include/region.h	/^	short expire_f;			\/* Function to call when region's ttl expire *\/$/;"	m	struct:__anon29
expire_gas_cloud	src/region.c	/^bool expire_gas_cloud(void * p1, void * p2) {$/;"	f
explanation	include/rm.h	/^	const char *explanation;$/;"	m	struct:symdef
explcolors	src/mapglyph.c	/^int explcolors[] = {$/;"	v
explmm	src/mhitm.c	/^static int explmm(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f	file:
explmu	src/mhitu.c	/^static int explmu(struct monst *mtmp, struct attack *mattk, boolean ufound) {$/;"	f	file:
explode	src/explode.c	/^void explode(xchar x, xchar y, \/* WAC was int...i think it's supposed to be xchar *\/$/;"	f
explode_color	src/mapglyph.c	37;"	d	file:
explodes	src/spell.c	/^static const char explodes[] = "radiates explosive energy";$/;"	v	file:
explore	include/flag.h	/^	bool  explore;	\/* in exploration mode *\/$/;"	m	struct:flag
explosion_to_glyph	include/display.h	306;"	d
explosion_types	win/proxy/glyphmap.c	/^static char *explosion_types[] = {	\/* hack.h, see also tilemap.c *\/$/;"	v	file:
explum	src/uhitm.c	/^	static int explum(struct monst *mdef, struct attack *mattk) {$/;"	f	file:
expulsion	src/quest.c	/^static void expulsion(boolean seal) {$/;"	f	file:
ext_cmd_getlin_hook	win/tty/getline.c	/^static bool ext_cmd_getlin_hook(char *base) {$/;"	f	file:
ext_func_tab	include/func_tab.h	/^struct ext_func_tab {$/;"	s
ext_sacrifice_types	src/pray.c	/^static const char ext_sacrifice_types[] = { ALLOW_FLOOROBJ,$/;"	v	file:
extcmd	include/func_tab.h	/^	char *extcmd;   \/\/ extended command key is going to be rebound to$/;"	m	struct:binding_list_tab
extcmd_via_menu	src/cmd.c	/^int extcmd_via_menu (void) {$/;"	f
extcmdlist	src/cmd.c	/^struct ext_func_tab extcmdlist[] = {$/;"	v	typeref:struct:ext_func_tab
extend_bill	src/shk.c	/^static int extend_bill(struct eshk *eshkp, int to_add) {$/;"	f	file:
extend_spine	src/mkmaze.c	/^static int extend_spine(int locale[3][3], int wall_there, int dx, int dy) {$/;"	f	file:
extmenu	include/flag.h	/^	bool  extmenu;	\/* extended commands use menu interface *\/$/;"	m	struct:instance_flags
extra_nasty	include/mondata.h	118;"	d
extra_pref	src/worn.c	/^extra_pref (struct monst *mon, struct obj *obj) {$/;"	f	file:
extract_nexthere	src/mkobj.c	/^extract_nexthere (struct obj *obj, struct obj **head_ptr) {$/;"	f
extract_nobj	src/mkobj.c	/^extract_nobj (struct obj *obj, struct obj **head_ptr) {$/;"	f
extrinsic	include/prop.h	/^	long extrinsic;$/;"	m	struct:prop
ey	src/dbridge.c	/^	int ex, ey;$/;"	m	struct:entity	file:
eyecount	include/mondata.h	53;"	d
f	include/you.h	/^	const char	*f;	\/* when female; null if same as male *\/$/;"	m	struct:RoleName
f	src/timeout.c	/^	timeout_proc f, cleanup;$/;"	m	struct:__anon19	file:
f_o_range	src/objnam.c	/^	int  f_o_range, l_o_range;$/;"	m	struct:o_range	file:
f_text	include/func_tab.h	/^	const char *f_text;$/;"	m	struct:ext_func_tab
fakecorr	include/vault.h	/^	struct fakecorridor fakecorr[FCSIZ];$/;"	m	struct:egd	typeref:struct:egd::fakecorridor
fakecorridor	include/vault.h	/^struct fakecorridor {$/;"	s
fall_asleep	src/timeout.c	/^void fall_asleep(int how_long, boolean wakeup_msg) {$/;"	f
fall_through	src/trap.c	/^void fall_through(boolean td) {$/;"	f
false	win/tty/termcap.c	607;"	d	file:
fancy_splash_text	win/curses/cursinit.c	/^static const char *fancy_splash_text[] = {$/;"	v	file:
far_noise	src/mhitm.c	/^static boolean vis, far_noise;$/;"	v	file:
fatal_error	util/dgn_main.c	/^int fatal_error = 0;$/;"	v
fatal_error	util/lev_main.c	/^int fatal_error = 0;$/;"	v
fcbeg	include/vault.h	/^	int fcbeg, fcend;	\/* fcend: first unused pos *\/$/;"	m	struct:egd
fcend	include/vault.h	/^	int fcbeg, fcend;	\/* fcend: first unused pos *\/$/;"	m	struct:egd
fd	include/dlb.h	/^	int fd;		\/* HandleFile file descriptor *\/$/;"	m	struct:__anon28
fd	src/files.c	/^	int fd;					\/* file descriptor for level file     *\/$/;"	m	struct:level_ftrack	file:
fdata	include/dlb.h	/^	FILE *fdata;	\/* opened data file *\/$/;"	m	struct:dlb_library
fdoor	include/mkroom.h	/^	schar fdoor;		\/* index for the first door of the room *\/$/;"	m	struct:mkroom
fe	include/timeout.h	/^typedef struct fe {$/;"	s
feature_alert_opts	src/options.c	/^static int feature_alert_opts(char *op, const char *optn) {$/;"	f	file:
feel_cockatrice	src/invent.c	/^void feel_cockatrice(struct obj *otmp, boolean force_touch) {$/;"	f
feel_location	src/display.c	/^void feel_location(xchar x, xchar y) {$/;"	f
fell_on_sink	src/hack.c	/^static const char fell_on_sink[] = "fell onto a sink";$/;"	v	file:
female	include/flag.h	/^	bool  female;$/;"	m	struct:flag
female	include/monst.h	/^	bool female;	\/* is female *\/$/;"	m	struct:monst
femalenum	include/you.h	/^	      femalenum,	\/* ...or as a female (NON_PM == same) *\/$/;"	m	struct:Race
femalenum	include/you.h	/^	      femalenum,	\/* ...or as a female (NON_PM == same) *\/$/;"	m	struct:Role
ffd	sys/winnt/winnt.c	/^WIN32_FIND_DATA ffd;$/;"	v
ffhandle	sys/winnt/winnt.c	/^HANDLE ffhandle = (HANDLE)0;$/;"	v
ffruit	src/decl.c	/^struct fruit *ffruit = NULL;$/;"	v	typeref:struct:fruit
fg	include/sp_lev.h	/^	char	fg, bg;$/;"	m	struct:__anon31
fid	include/objclass.h	/^	int fid;$/;"	m	struct:fruit
fiery_area	src/explode.c	/^	ExplodeRegion *fiery_area, *gas_area, *dig_area;$/;"	m	struct:grenade_callback	file:
fig_transform	src/apply.c	/^void fig_transform(void * arg, long timeout) {$/;"	f
fightm	src/mhitm.c	/^int fightm(struct monst *mtmp) {$/;"	f
figurine_location_checks	src/apply.c	/^static boolean figurine_location_checks(struct obj *obj, coord *cc, boolean quietly) {$/;"	f	file:
file	include/decl.h	/^	char file[TILESET_MAX_FILENAME];$/;"	m	struct:tileset
filecode	include/you.h	/^	const char *filecode;	\/* abbreviation for use in file names *\/$/;"	m	struct:Role
filecode	include/you.h	/^	const char *filecode;	\/* code for filenames *\/$/;"	m	struct:Race
filecode	include/you.h	/^	const char *filecode;	\/* file code *\/$/;"	m	struct:Align
filecode	include/you.h	/^	const char *filecode;	\/* file code *\/$/;"	m	struct:Gender
filename	include/nhlan.h	/^	char filename[_MAX_PATH];$/;"	m	struct:lan_mail_struct
filename	src/sounds.c	/^	char *filename;$/;"	m	struct:audio_mapping_rec	file:
filesize	sys/winnt/winnt.c	/^filesize(file)$/;"	f
fill_pit	src/trap.c	/^	void fill_pit(int x, int y) {$/;"	f
fill_point	src/vision.c	/^fill_point(row,col)$/;"	f	file:
fill_room	src/sp_lev.c	/^void fill_room(struct mkroom *croom, boolean prefilled) {$/;"	f
fill_zoo	src/mkroom.c	/^void fill_zoo (struct mkroom *sroom) {$/;"	f
filled	include/sp_lev.h	/^	xchar rtype, chance, rlit, filled;$/;"	m	struct:_room
fillholetyp	src/dig.c	/^static schar fillholetyp(int x, int y) {$/;"	f	file:
filling	include/sp_lev.h	/^	schar filling;$/;"	m	struct:__anon53
final_lev	src/dungeon.c	/^	s_level *final_lev[LEV_LIMIT];	\/* corresponding level pointers *\/$/;"	m	struct:proto_dungeon	file:
final_level	src/do.c	/^static void final_level(void) {$/;"	f	file:
find_ac	src/do_wear.c	/^void find_ac(void) {$/;"	f
find_branch	src/dungeon.c	/^static int find_branch(const char *s, struct proto_dungeon *pd) {$/;"	f	file:
find_branch_room	src/mklev.c	/^static struct mkroom *find_branch_room(coord *mp) {$/;"	f	file:
find_defensive	src/muse.c	/^boolean find_defensive(struct monst *mtmp) {$/;"	f
find_drawbridge	src/dbridge.c	/^boolean find_drawbridge(int *x, int *y) {$/;"	f
find_file	src/dlb.c	/^static boolean find_file(const char *name, library **lib, long *startp, long *sizep) {$/;"	f	file:
find_hell	src/dungeon.c	/^void find_hell(d_level *lev) {$/;"	f
find_lev_obj	src/restore.c	/^static void find_lev_obj() {$/;"	f	file:
find_level	src/dungeon.c	/^s_level *find_level(const char *s) {$/;"	f
find_mac	src/worn.c	/^find_mac (struct monst *mon) {$/;"	f
find_mid	src/light.c	/^struct monst *find_mid(unsigned nid, unsigned fmflags) {$/;"	f
find_misc	src/muse.c	/^boolean find_misc(struct monst *mtmp) {$/;"	f
find_offensive	src/muse.c	/^boolean find_offensive(struct monst *mtmp) {$/;"	f
find_oid	src/shk.c	/^struct obj * find_oid(unsigned id) {$/;"	f
find_roll_to_hit	src/uhitm.c	/^schar find_roll_to_hit(struct monst *mtmp) {$/;"	f
find_skates	src/o_init.c	/^find_skates (void) {$/;"	f
find_trap	src/detect.c	/^void find_trap(struct trap *trap) {$/;"	f
find_unpaid	src/invent.c	/^static struct obj *find_unpaid(struct obj *list, struct obj **last_found) {$/;"	f	file:
finddpos	src/mklev.c	/^static void finddpos(coord *cc, xchar xl, xchar yl, xchar xh, xchar yh) {$/;"	f	file:
findfirst	sys/winnt/winnt.c	/^findfirst(path)$/;"	f
findgd	src/vault.c	/^findgd() {$/;"	f	file:
findgold	src/steal.c	/^findgold (struct obj *chain) {$/;"	f
findit	src/detect.c	/^int findit(void) {$/;"	f
findnext	sys/winnt/winnt.c	/^findnext()$/;"	f
findone	src/detect.c	/^static void findone(int zx, int zy, void * num) {$/;"	f	file:
findpriest	src/priest.c	/^findpriest (char roomno) {$/;"	f
findtravelpath	src/hack.c	/^static boolean findtravelpath(boolean guess) {$/;"	f	file:
finish_map	src/mkmap.c	/^static void finish_map(schar	fg_typ, schar bg_typ, boolean	lit, boolean walled) {$/;"	f	file:
finish_paybill	src/shk.c	/^void finish_paybill() {$/;"	f
finish_quest	src/quest.c	/^void finish_quest ( struct obj *obj	) {$/;"	f
finish_sokoban	include/decl.h	/^	bool finish_sokoban;  \/* You obtained the sokoban prize. *\/$/;"	m	struct:u_achieve
fire_damage	src/trap.c	/^	int fire_damage(struct obj *chain, boolean force, boolean here, xchar x, xchar y) {$/;"	f
fire_level	include/decl.h	100;"	d
first	src/weapon.c	/^	short first, last;$/;"	m	struct:skill_range	file:
first	win/curses/cursstat.c	/^static bool first = true;$/;"	v	file:
first_cmap	win/proxy/glyphmap.c	/^    int group, first_cmap, next_cmap;	\/* first <= cmap < next *\/$/;"	m	struct:__anon23	file:
first_locate	include/quest.h	/^	bool first_locate;	\/* only set the first time *\/$/;"	m	struct:q_score
first_mesg	win/curses/cursmesg.c	/^static nhprev_mesg *first_mesg = NULL;$/;"	v	file:
first_start	include/quest.h	/^	bool first_start;	\/* only set the first time *\/$/;"	m	struct:q_score
fix_petrification	src/eat.c	/^void fix_petrification(void) {$/;"	f
fix_stair_rooms	src/sp_lev.c	/^static void fix_stair_rooms() {$/;"	f	file:
fix_worst_trouble	src/pray.c	/^static void fix_worst_trouble(int trouble) {$/;"	f	file:
fixup_special	src/mkmaze.c	/^static void fixup_special(void) {$/;"	f	file:
fla_abil	src/attrib.c	/^fla_abil[] = { {   1, &(HFire_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
fla_tech	src/tech.c	/^fla_tech[] = { {   1, T_REINFORCE, 1},$/;"	v	typeref:struct:	file:
flag	include/flag.h	/^struct flag {$/;"	s
flag	src/options.c	/^	unsigned long flag;$/;"	m	struct:Bool_Tile_Opt	file:
flags	include/decl.h	/^	unsigned long flags;$/;"	m	struct:tileset
flags	include/dgn_file.h	/^	int	chance, rndlevs, chain, flags;$/;"	m	struct:tmplevel
flags	include/dgn_file.h	/^	int	flags,$/;"	m	struct:tmpdungeon
flags	include/dungeon.h	/^	d_flags	flags;		\/* dungeon flags *\/$/;"	m	struct:dungeon
flags	include/dungeon.h	/^	d_flags	flags;		\/* type flags *\/$/;"	m	struct:s_level
flags	include/dungeon.h	/^	unsigned char	flags;$/;"	m	struct:linfo
flags	include/lev.h	/^	short flags;$/;"	m	struct:ls_t
flags	include/rm.h	/^	struct levelflags	flags;$/;"	m	struct:__anon30	typeref:struct:__anon30::levelflags
flags	include/sp_lev.h	/^	long flags;$/;"	m	struct:__anon53
flags	include/sp_lev.h	/^	long flags;$/;"	m	struct:__anon56
flags	include/wintty.h	/^	int flags;			\/* window flags *\/$/;"	m	struct:WinDesc
flags	src/decl.c	/^struct flag flags = DUMMY;$/;"	v	typeref:struct:flag
flaming	include/mondata.h	65;"	d
flash_hits_mon	src/uhitm.c	/^	int flash_hits_mon(struct monst *mtmp, struct obj *otmp) {$/;"	f
flash_types	src/zap.c	/^const char * const flash_types[] = {	\/* also used in buzzmu(mcastu.c) *\/$/;"	v
flex_int16_t	build-linux/src/dgn_lex.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	build-linux/src/dgn_lex.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int16_t	build-linux/src/lev_lex.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	build-linux/src/lev_lex.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	build-linux/src/dgn_lex.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	build-linux/src/dgn_lex.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int32_t	build-linux/src/lev_lex.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	build-linux/src/lev_lex.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	build-linux/src/dgn_lex.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	build-linux/src/dgn_lex.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int8_t	build-linux/src/lev_lex.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	build-linux/src/lev_lex.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	build-linux/src/dgn_lex.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	build-linux/src/dgn_lex.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint16_t	build-linux/src/lev_lex.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	build-linux/src/lev_lex.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	build-linux/src/dgn_lex.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	build-linux/src/dgn_lex.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint32_t	build-linux/src/lev_lex.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	build-linux/src/lev_lex.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	build-linux/src/dgn_lex.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	build-linux/src/dgn_lex.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flex_uint8_t	build-linux/src/lev_lex.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	build-linux/src/lev_lex.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
float_down	src/trap.c	/^	int float_down(long hmask, long emask) {$/;"	f
float_up	src/trap.c	/^	void float_up(void) {$/;"	f
floating_above	src/fountain.c	/^void floating_above(const char *what) {$/;"	f
flood_fill_rm	src/mkmap.c	/^void flood_fill_rm(int sx, int sy, int rmno, boolean lit, boolean anyroom) {$/;"	f
flooreffects	src/do.c	/^boolean flooreffects(struct obj *obj, int x, int y, const char *verb) {$/;"	f
floorfood	src/eat.c	/^static struct obj *floorfood(const char *verb) {$/;"	f	file:
flush_screen	src/display.c	/^void flush_screen(int cursor_on_u) {$/;"	f
flushout	sys/share/pcsys.c	/^void flushout(void) {$/;"	f
flyl	src/mondata.c	/^static const char *flyl[4]	= { "fly", "Fly", "stagger", "Stagger" };$/;"	v	file:
flys	src/mondata.c	/^static const char *flys[4]	= { "fly", "Fly", "flutter", "Flutter" };$/;"	v	file:
fmark	include/dlb.h	/^	long fmark;		\/* current file mark *\/$/;"	m	struct:dlb_library
fmon	include/rm.h	515;"	d
fmt_ptr	src/alloc.c	/^char *fmt_ptr(const void *ptr, char *buf) {$/;"	f
fmtstr_doset_add_menu	src/options.c	/^static char fmtstr_doset_add_menu[] = "%s%-15s [%s]   ";$/;"	v	file:
fmtstr_doset_add_menu_tab	src/options.c	/^static char fmtstr_doset_add_menu_tab[] = "%s\\t[%s]";$/;"	v	file:
fname	include/dlb.h	/^	char *fname;	\/* file name as seen from calling code *\/$/;"	m	struct:dlb_directory
fname	include/objclass.h	/^	char fname[PL_FSIZ];$/;"	m	struct:fruit
fname	util/dgn_main.c	/^const char *fname = "(stdin)";$/;"	v
fname	util/lev_main.c	/^const char *fname = "(stdin)";$/;"	v
fname_decode	src/files.c	/^char *fname_decode(char quotechar, char *s, char *callerbuf, int bufsz) {$/;"	f
fname_encode	src/files.c	/^char *fname_encode(const char *legal, char quotechar, char *s, char *callerbuf, int bufsz) {$/;"	f
fobj	include/rm.h	514;"	d
foffset	include/dlb.h	/^	long foffset;	\/* offset in lib file to start of this file *\/$/;"	m	struct:dlb_directory
following	include/eshk.h	/^	boolean following;	\/* following customer since he owes us sth *\/$/;"	m	struct:eshk
followmsg	src/shk.c	/^static long int followmsg;	\/* last time of follow message *\/$/;"	v	file:
food	include/you.h	/^	long	food;		\/* ... or any comestible *\/$/;"	m	struct:u_conduct
food_detect	src/detect.c	/^int food_detect(struct obj *sobj) {$/;"	f
food_disappears	src/eat.c	/^void food_disappears(struct obj *obj) {$/;"	f
food_substitution	src/eat.c	/^void food_substitution(struct obj *old_obj, struct obj *new_obj) {$/;"	f
food_xname	src/eat.c	/^static const char *food_xname(struct obj *food, boolean the_pfx) {$/;"	f	file:
foodword	src/eat.c	/^static const char *foodword(struct obj *otmp) {$/;"	f	file:
foodwords	src/eat.c	/^static const char *foodwords[] = {$/;"	v	file:
fopen_config_file	src/files.c	/^static FILE *fopen_config_file(const char *filename) {$/;"	f	file:
fopen_datafile	src/files.c	/^FILE *fopen_datafile(const char *filename, const char *mode, int prefix) {$/;"	f
fopen_datafile	util/dlb_main.c	/^FILE *fopen_datafile(const char *filename, const char *mode) {$/;"	f
fopen_wizkit_file	src/files.c	/^static FILE *fopen_wizkit_file(void) {$/;"	f	file:
fopenp	sys/share/pcsys.c	/^FILE *fopenp(const char *name, const char *mode) {$/;"	f
force_bungle	src/apply.c	/^	boolean force_bungle;$/;"	m	struct:trapinfo	file:
force_save_hs	src/eat.c	/^static boolean force_save_hs = false;$/;"	v	file:
forcedoor	src/lock.c	/^static int forcedoor(void) {$/;"	f	file:
forcefight	include/flag.h	/^	bool  forcefight;$/;"	m	struct:flag
forcelock	src/lock.c	/^static int forcelock(void) {$/;"	f	file:
foreground	sys/winnt/nttty.c	/^static WORD foreground = (FOREGROUND_GREEN|FOREGROUND_BLUE|FOREGROUND_RED);$/;"	v	file:
forget	src/read.c	/^void forget (int howmuch) {$/;"	f
forget_levels	src/read.c	/^void forget_levels (int percent) {$/;"	f
forget_map	src/read.c	/^void forget_map (int howmuch) {$/;"	f
forget_objects	src/read.c	/^void forget_objects (int percent) {$/;"	f
forget_single_object	src/read.c	/^forget_single_object (int obj_id) {$/;"	f	file:
forget_traps	src/read.c	/^void forget_traps (void) {$/;"	f
fortune	src/gypsy.c	/^static void fortune(struct monst *mtmp) {$/;"	f	file:
fortune_lev	src/gypsy.c	/^static void fortune_lev(struct monst *mtmp, char *name, char *txt) {$/;"	f	file:
foundfile_buffer	sys/winnt/winnt.c	/^foundfile_buffer()$/;"	f
fountain	include/sp_lev.h	/^} fountain;$/;"	t	typeref:struct:__anon49
fountains	include/sp_lev.h	/^	fountain **fountains;$/;"	m	struct:__anon52
fountains	include/sp_lev.h	/^	fountain **fountains;$/;"	m	struct:_room
fp	include/dlb.h	/^	FILE *fp;		\/* pointer to an external file, use if non-null *\/$/;"	m	struct:__anon28
fpMAPIFindNext	sys/winnt/mapimail.c	/^LPMAPIFINDNEXT  fpMAPIFindNext;$/;"	v
fpMAPIFreeBuffer	sys/winnt/mapimail.c	/^LPMAPIFREEBUFFER fpMAPIFreeBuffer;$/;"	v
fpMAPILogoff	sys/winnt/mapimail.c	/^LPMAPILOGOFF    fpMAPILogoff;$/;"	v
fpMAPILogon	sys/winnt/mapimail.c	/^LPMAPILOGON     fpMAPILogon;$/;"	v
fpMAPIReadMail	sys/winnt/mapimail.c	/^LPMAPIREADMAIL  fpMAPIReadMail;$/;"	v
fpostfx	src/eat.c	/^static void fpostfx(struct obj *otmp) {$/;"	f	file:
fprefx	src/eat.c	/^static void fprefx(struct obj *otmp) {$/;"	f	file:
fptr	sys/share/random.c	/^static  long		*fptr			= &randtbl[ SEP_3 + 1 ];$/;"	v	file:
fqn_filename_buffer	src/files.c	/^static char fqn_filename_buffer[FQN_NUMBUF][FQN_MAX_FILENAME];$/;"	v	file:
fqn_prefix	src/decl.c	/^char *fqn_prefix[PREFIX_COUNT] = { NULL, NULL, NULL, NULL,$/;"	v
fqn_prefix_names	src/decl.c	/^char *fqn_prefix_names[PREFIX_COUNT] = { "hackdir", "leveldir", "savedir",$/;"	v
fqname	src/files.c	/^const char *fqname(const char *basename, int whichprefix, int buffnum) {$/;"	f
fracture_rock	src/zap.c	/^void fracture_rock(struct obj *obj) {$/;"	f
free	include/extern.h	12;"	d
free_animals	src/save.c	713;"	d	file:
free_autopickup_exceptions	src/options.c	/^void free_autopickup_exceptions (void) {$/;"	f
free_dungeons	src/save.c	/^free_dungeons() {$/;"	f
free_engravings	src/save.c	711;"	d	file:
free_explode_region	src/explode.c	/^static void free_explode_region(ExplodeRegion *reg) {$/;"	f	file:
free_glyph_mapping	win/proxy/glyphmap.c	/^free_glyph_mapping(mapping)$/;"	f
free_invbuf	src/invent.c	/^void free_invbuf(void) {$/;"	f
free_light_sources	src/save.c	710;"	d	file:
free_menu_coloring	src/save.c	/^free_menu_coloring() {$/;"	f
free_oracles	src/save.c	706;"	d	file:
free_percent_color_options	src/save.c	/^void free_percent_color_options(const struct percent_color_option *list_head) {$/;"	f
free_region	src/region.c	/^void free_region(NhRegion *reg) {$/;"	f
free_rooms	src/sp_lev.c	/^static void free_rooms(room **ro, int n) {$/;"	f	file:
free_rooms	util/lev_main.c	/^void free_rooms(splev *lev) {$/;"	f
free_saved_games	src/files.c	/^void free_saved_games(char** saved) {$/;"	f
free_status_colors	src/save.c	/^free_status_colors() {$/;"	f
free_text_color_options	src/save.c	/^void free_text_color_options(const struct text_color_option *list_head) {$/;"	f
free_timers	src/save.c	709;"	d	file:
free_ttlist	src/topten.c	/^static void free_ttlist(struct toptenentry *tt) {$/;"	f	file:
free_waterlevel	src/save.c	707;"	d	file:
free_window_info	win/tty/wintty.c	/^static void free_window_info(struct WinDesc *cw, bool free_data) {$/;"	f	file:
free_worm	src/save.c	708;"	d	file:
free_youbuf	src/pline.c	/^void free_youbuf(void) {$/;"	f
freedamage	src/save.c	712;"	d	file:
freediskspace	sys/winnt/winnt.c	/^freediskspace(path)$/;"	f
freedynamicdata	src/save.c	/^freedynamicdata() {$/;"	f
freefruitchn	src/restore.c	/^static void freefruitchn(struct fruit *flist) {$/;"	f	file:
freefruitchn	src/save.c	704;"	d	file:
freehand	src/engrave.c	/^boolean freehand(void) {$/;"	f
freeinv	src/invent.c	/^void freeinv(struct obj *obj) {$/;"	f
freeinv_core	src/invent.c	/^void freeinv_core(struct obj *obj) {$/;"	f
freemonchn	src/save.c	702;"	d	file:
freenames	src/save.c	705;"	d	file:
freeobjchn	src/save.c	701;"	d	file:
freetrapchn	src/save.c	703;"	d	file:
friday13	include/flag.h	/^	bool  friday13;	\/* it's Friday the 13th *\/$/;"	m	struct:flag
friday_13th	src/hacklib.c	/^boolean friday_13th(void) {$/;"	f
from_file	src/options.c	/^static boolean initial, from_file;$/;"	v	file:
fromsink	include/obj.h	107;"	d
fruit	include/objclass.h	/^struct fruit {$/;"	s
fruitadd	src/options.c	/^int fruitadd (char *str) {$/;"	f
fruitname	src/objnam.c	/^char * fruitname(boolean juice) {$/;"	f
fry_by_god	src/pray.c	/^static void fry_by_god(aligntyp resp_god) {$/;"	f	file:
fsize	include/dlb.h	/^	long fsize;		\/* file size *\/$/;"	m	struct:dlb_directory
ftrap	src/decl.c	/^struct trap *ftrap = NULL;$/;"	v	typeref:struct:trap
ftyp	include/vault.h	/^	xchar fx,fy,ftyp;$/;"	m	struct:fakecorridor
full	sys/winnt/nh340key.c	/^int full;$/;"	v
full	sys/winnt/nhdefkey.c	/^int full;$/;"	v
full	sys/winnt/nhraykey.c	/^int full;$/;"	v
full_version_string_tmp	src/version.c	/^char *full_version_string_tmp(void) {$/;"	f
fullwarn	src/eat.c	/^	bool fullwarn;	\/* have warned about being full *\/$/;"	m	struct:__anon6	file:
fully_identify_obj	src/invent.c	/^void fully_identify_obj(struct obj *otmp) {$/;"	f
func_index	include/timeout.h	/^	short func_index;		\/* what to call when we time out *\/$/;"	m	struct:fe
fungus	src/mkroom.c	/^static struct permonst * fungus() {$/;"	f	file:
fuzzymatch	src/hacklib.c	/^boolean fuzzymatch(const char *s1, const char *s2, const char *ignore_chars, boolean caseblind) {$/;"	f
fx	include/vault.h	/^	xchar fx,fy,ftyp;$/;"	m	struct:fakecorridor
fy	include/vault.h	/^	xchar fx,fy,ftyp;$/;"	m	struct:fakecorridor
g	win/curses/cursinit.c	/^    short g;$/;"	m	struct:nhrgb_type	file:
g_at	src/invent.c	/^struct obj *g_at(int x, int y) {$/;"	f
g_monnam	src/vault.c	10;"	d	file:
g_putch	sys/winnt/nttty.c	/^g_putch(in_ch)$/;"	f
g_putch	win/tty/wintty.c	/^void g_putch(int in_ch) {$/;"	f
gainstr	src/attrib.c	/^	const char *gainstr, *losestr;$/;"	m	struct:innate	file:
gainstr	src/attrib.c	/^void gainstr(struct obj *otmp, int incr) {$/;"	f
game_menu	src/cmd.c	/^static const struct menu_tab game_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
gameover	include/decl.h	/^	int gameover;		\/* self explanatory? *\/$/;"	m	struct:sinfo
gas_area	src/explode.c	/^	ExplodeRegion *fiery_area, *gas_area, *dig_area;$/;"	m	struct:grenade_callback	file:
gate_str	src/dokick.c	/^static const char *gate_str;$/;"	v	file:
gazemm	src/mhitm.c	/^static int gazemm(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f	file:
gazemu	src/mhitu.c	/^int gazemu(struct monst *mtmp, struct attack *mattk) {$/;"	f
gbuf	src/display.c	/^static gbuf_entry gbuf[ROWNO][COLNO];$/;"	v	file:
gbuf_entry	src/display.c	/^} gbuf_entry;$/;"	t	typeref:struct:__anon3	file:
gbuf_start	src/display.c	/^static char gbuf_start[ROWNO];$/;"	v	file:
gbuf_stop	src/display.c	/^static char gbuf_stop[ROWNO];$/;"	v	file:
gcrownu	src/pray.c	/^static void gcrownu() {$/;"	f	file:
gd_move	src/vault.c	/^gd_move (struct monst *grd) {$/;"	f
gd_sound	src/vault.c	/^gd_sound() {$/;"	f
gddone	include/vault.h	/^	bool gddone;	\/* true iff guard has released player *\/$/;"	m	struct:egd
gdlevel	include/vault.h	/^	d_level gdlevel;	\/* level (& dungeon) guard was created in *\/$/;"	m	struct:egd
gdx	include/vault.h	/^	xchar gdx, gdy;		\/* goal of guard's walk *\/$/;"	m	struct:egd
gdy	include/vault.h	/^	xchar gdx, gdy;		\/* goal of guard's walk *\/$/;"	m	struct:egd
gehennom_entered	include/you.h	/^	bool gehennom_entered;	\/* entered Gehennom via Valley *\/$/;"	m	struct:u_event
gem_accept	src/dothrow.c	/^static int gem_accept(struct monst *mon, struct obj *obj) {$/;"	f	file:
gem_class	src/monmove.c	/^static const char gem_class[] = { GEM_CLASS, 0 };$/;"	v	file:
gems	src/end.c	/^	gems[LAST_GEM+1 - FIRST_GEM + 1], \/* 1 extra for glass *\/$/;"	v	typeref:struct:valuable_data	file:
gender	src/mondata.c	/^gender (struct monst *mtmp) {$/;"	f
genders	src/role.c	/^const struct Gender genders[] = {$/;"	v	typeref:struct:Gender
genl_message_menu	src/windows.c	/^genl_message_menu (char let, int how, const char *mesg) {$/;"	f
genl_outrip	src/rip.c	/^genl_outrip(tmpwin, how)$/;"	f
genl_preference_update	src/windows.c	/^genl_preference_update (const char *pref) {$/;"	f
geno	include/permonst.h	/^	unsigned short	geno;			\/* creation\/geno mask value *\/$/;"	m	struct:permonst
genus	src/mon.c	/^int genus (int mndx, int mode) {$/;"	f
geryon_level	include/decl.h	92;"	d
get_adjacent_loc	src/cmd.c	/^int get_adjacent_loc(const char *prompt, const char *emsg, xchar x, xchar y, coord *cc) {$/;"	f
get_amulet	include/decl.h	/^	bool get_amulet;      \/* You have obtained the amulet$/;"	m	struct:u_achieve
get_artifact	src/artifact.c	17;"	d	file:
get_artifact_id	util/lev_main.c	/^int get_artifact_id(char *s) {$/;"	f
get_bell	include/decl.h	/^	bool get_bell;        \/* You have obtained the bell of$/;"	m	struct:u_achieve
get_book	include/decl.h	/^	bool get_book;        \/* You have obtained the book of$/;"	m	struct:u_achieve
get_candelabrum	include/decl.h	/^	bool get_candelabrum; \/* You have obtained the candelabrum *\/$/;"	m	struct:u_achieve
get_color_string	include/winprocs.h	124;"	d
get_compopt_value	src/options.c	/^static const char * get_compopt_value(const char *optname, char *buf) {$/;"	f	file:
get_container_location	src/zap.c	/^struct monst * get_container_location(struct obj *obj, int *loc, int *container_nesting) {$/;"	f
get_cost	src/shk.c	/^static long get_cost(struct obj *obj, struct monst *shkp) {$/;"	f	file:
get_current_feature_ver	src/version.c	/^unsigned long get_current_feature_ver(void) {$/;"	f
get_ext_cmd	include/winprocs.h	115;"	d
get_feature_notice_ver	src/version.c	/^unsigned long get_feature_notice_ver (char *str) {$/;"	f
get_floor_type	util/lev_main.c	/^int get_floor_type(char c) {$/;"	f
get_free_room_loc	src/sp_lev.c	/^static void get_free_room_loc(schar		*x, schar *y, struct mkroom	*croom) {$/;"	f	file:
get_glyph_char	src/display.c	/^static uchar get_glyph_char(int glyph) {$/;"	f	file:
get_glyph_mapping	win/proxy/glyphmap.c	/^get_glyph_mapping()$/;"	f
get_glyph_mapping_cmap	win/proxy/glyphmap.c	/^get_glyph_mapping_cmap(map)$/;"	f	file:
get_glyph_mapping_cmap_submapping	win/proxy/glyphmap.c	/^get_glyph_mapping_cmap_submapping(submap, desc, first, next)$/;"	f	file:
get_glyph_mapping_explosions	win/proxy/glyphmap.c	/^get_glyph_mapping_explosions(map, base)$/;"	f	file:
get_glyph_mapping_invisible_monster	win/proxy/glyphmap.c	/^get_glyph_mapping_invisible_monster(map)$/;"	f	file:
get_glyph_mapping_monster_corpses	win/proxy/glyphmap.c	/^get_glyph_mapping_monster_corpses(map, base)$/;"	f	file:
get_glyph_mapping_monsters	win/proxy/glyphmap.c	/^get_glyph_mapping_monsters(map)$/;"	f	file:
get_glyph_mapping_monsters_based	win/proxy/glyphmap.c	/^get_glyph_mapping_monsters_based(map, base, type)$/;"	f	file:
get_glyph_mapping_objects	win/proxy/glyphmap.c	/^get_glyph_mapping_objects(map)$/;"	f	file:
get_glyph_mapping_swallow	win/proxy/glyphmap.c	/^get_glyph_mapping_swallow(map, base)$/;"	f	file:
get_glyph_mapping_warning	win/proxy/glyphmap.c	/^get_glyph_mapping_warning(map)$/;"	f	file:
get_glyph_mapping_zaps	win/proxy/glyphmap.c	/^get_glyph_mapping_zaps(map, base)$/;"	f	file:
get_graphics_opts	win/proxy/getopt.c	/^get_graphics_opts(buf, maxlen, offset)$/;"	f	file:
get_killer_string	win/proxy/riputil.c	/^get_killer_string(how)$/;"	f
get_level	src/dungeon.c	/^void get_level(d_level *newlevel, int levnum) {$/;"	f
get_location	src/sp_lev.c	/^static boolean get_location(schar *x, schar *y, int humidity) {$/;"	f	file:
get_luckstone	include/decl.h	/^	bool get_luckstone;   \/* You obtained the luckstone at the$/;"	m	struct:u_achieve
get_map	src/mkmap.c	/^static schar get_map(int col, int row, schar bg_typ) {$/;"	f	file:
get_menu	win/curses/cursdial.c	/^get_menu(winid wid)$/;"	f	file:
get_menu_coloring	win/curses/cursdial.c	/^bool get_menu_coloring(char *str, int *color, attr_t *attr) {$/;"	f
get_menu_coloring	win/tty/wintty.c	/^static bool get_menu_coloring(char *str, int *color, int *attr) {$/;"	f	file:
get_mleash	src/apply.c	/^struct obj *get_mleash (struct monst *mtmp \/* assuming mtmp->mleashed has been checked *\/) {$/;"	f
get_mon_location	src/zap.c	/^boolean get_mon_location(struct monst *mon, xchar *xp, xchar *yp, int locflags) {$/;"	f
get_monster_id	util/lev_main.c	/^int get_monster_id(char *s, char c) {$/;"	f
get_monsym	src/mapglyph.c	/^static glyph_t get_monsym(int glyph) {$/;"	f	file:
get_mplname	src/mplayer.c	/^static void get_mplname(struct monst *mtmp, char *nam) {$/;"	f	file:
get_msg_line	win/curses/cursmesg.c	/^get_msg_line(bool reverse, int mindex)$/;"	f	file:
get_mtraits	src/mkobj.c	/^struct monst * get_mtraits(struct obj *obj, boolean copyof) {$/;"	f
get_nh_event	include/winprocs.h	82;"	d
get_no_glyph	win/proxy/glyphmap.c	/^get_no_glyph()$/;"	f
get_obj_location	src/zap.c	/^boolean get_obj_location(struct obj *obj, xchar *xp, xchar *yp, int locflags) {$/;"	f
get_obj_skill	src/weapon.c	/^static int get_obj_skill (struct obj *obj) {$/;"	f	file:
get_object_id	util/lev_main.c	/^int get_object_id(char *s, char c) {$/;"	f
get_objsym	src/mapglyph.c	/^static glyph_t get_objsym(int glyph) {$/;"	f	file:
get_option	win/proxy/getopt.c	/^char *get_option(const char *option)$/;"	f
get_option_bool	win/proxy/getopt.c	/^get_option_bool(const char *option)$/;"	f	file:
get_playerrank	win/curses/cursstat.c	/^get_playerrank(char *rank)$/;"	f
get_qtlen	src/questpgr.c	134;"	d	file:
get_qtlen	src/questpgr.c	86;"	d	file:
get_qtlist	src/questpgr.c	133;"	d	file:
get_qtlist	src/questpgr.c	85;"	d	file:
get_realtime	src/allmain.c	/^time_t get_realtime(void) {$/;"	f
get_rect	src/rect.c	/^get_rect(r)$/;"	f
get_rect_ind	src/rect.c	/^get_rect_ind(r)$/;"	f
get_room_loc	src/sp_lev.c	/^static void get_room_loc(schar		*x, schar *y, struct mkroom	*croom) {$/;"	f	file:
get_room_type	util/lev_main.c	/^int get_room_type(char *s) {$/;"	f
get_scr_size	sys/winnt/nttty.c	/^get_scr_size()$/;"	f
get_shop_item	src/shknam.c	/^get_shop_item(type)$/;"	f
get_tech_no	src/tech.c	/^static int get_tech_no (int tech) {$/;"	f	file:
get_trap_type	util/lev_main.c	/^int get_trap_type(char *s) {$/;"	f
get_trouble_color	win/curses/cursstat.c	/^get_trouble_color(const char *stat)$/;"	f	file:
get_uchar_list	src/files.c	/^get_uchar_list(buf, list, size)$/;"	f
get_uchars	src/files.c	/^static int get_uchars($/;"	f	file:
get_unused_cs	src/vision.c	/^get_unused_cs(rows, rmin, rmax)$/;"	f	file:
get_username	sys/winnt/winnt.c	/^char *get_username(lan_username_size)$/;"	f
get_valuables	src/end.c	/^static void get_valuables(struct obj *list \/* inventory or container contents *\/) {$/;"	f	file:
get_wall_for_db	src/dbridge.c	/^static void get_wall_for_db(int *x, int *y) {$/;"	f	file:
get_wet	src/potion.c	/^boolean get_wet(struct obj *obj, boolean amnesia) {$/;"	f
get_wormno	src/worm.c	/^get_wormno (void) {$/;"	f
getbones	src/bones.c	/^int getbones(void) {$/;"	f
getchain	build-linux/src/dgn_yacc.c	/^getchain(s)$/;"	f
getcomspec	sys/share/pcsys.c	36;"	d	file:
getdir	src/cmd.c	/^int getdir(const char *s) {$/;"	f
getegid	sys/unix/unixunix.c	/^(getegid)()$/;"	f
geteuid	sys/unix/unixunix.c	/^(geteuid)()$/;"	f
getgid	sys/unix/unixunix.c	/^(getgid)()$/;"	f
gethungry	src/eat.c	/^void gethungry(void) {$/;"	f
getioctls	sys/share/ioctl.c	/^void getioctls(void) {$/;"	f
getlev	src/restore.c	/^void getlev(int fd, int pid, xchar lev, boolean ghostly) {$/;"	f
getlin	include/winprocs.h	114;"	d
getlin_hook_proc	win/tty/getline.c	/^typedef bool (*getlin_hook_proc)(char *);$/;"	t	file:
getlock	sys/share/pcunix.c	/^void getlock(void) {$/;"	f
getlock	sys/unix/unixunix.c	/^void getlock(void) {$/;"	f
getlogin	include/ntconf.h	116;"	d
getlt	src/hacklib.c	/^static struct tm *getlt(void) {$/;"	f	file:
getmailstatus	src/mail.c	/^void getmailstatus(void) {$/;"	f
getmattk	src/mhitu.c	/^struct attack *getmattk(struct permonst *mptr, int indx, int prev_result[], struct attack *alt_attk_buf) {$/;"	f
getmonth	src/hacklib.c	/^int getmonth(void) {$/;"	f
getmouse	include/wincurs.h	43;"	d
getobj	src/invent.c	/^struct obj *getobj(const char *let, const char *word) {$/;"	f
getpos	src/do_name.c	/^int getpos(coord *cc, boolean force, const char *goal) {$/;"	f
getpos_help	src/do_name.c	/^static void getpos_help(boolean force, const char *goal) {$/;"	f	file:
getprice	src/shk.c	/^static long getprice(struct obj *obj, boolean shk_buying) {$/;"	f	file:
getresgid	sys/unix/unixunix.c	/^(getresgid)(rgid, egid, sgid)$/;"	f
getresuid	sys/unix/unixunix.c	/^(getresuid)(ruid, euid, suid)$/;"	f
getret	win/tty/wintty.c	/^static void getret(void) {$/;"	f	file:
getret	win/tty/wintty.c	131;"	d	file:
getreturn	sys/share/pcsys.c	/^void getreturn(const char *str) {$/;"	f
getreturn_enabled	sys/share/pcsys.c	/^bool getreturn_enabled;$/;"	v
getrumor	src/rumors.c	/^char *getrumor(int truth, char *rumor_buf, bool exclude_cookie) {$/;"	f
getspell	src/spell.c	/^static boolean getspell(int *spell_no) {$/;"	f	file:
gettech	src/tech.c	/^static boolean gettech(int *tech_no) {$/;"	f	file:
gettrack	src/track.c	/^gettrack(x, y)$/;"	f
gettty	sys/share/pctty.c	/^void gettty(void) {$/;"	f
gettty	sys/share/unixtty.c	/^void gettty(void) {$/;"	f
gettty	sys/winnt/nttty.c	/^gettty()$/;"	f
getuid	include/ntconf.h	115;"	d
getuid	sys/unix/unixunix.c	/^(getuid)()$/;"	f
getwindowsz	sys/share/ioctl.c	/^void getwindowsz(void) {$/;"	f
getyear	src/hacklib.c	/^int getyear(void) {$/;"	f
ggetobj	src/invent.c	/^int ggetobj(const char *word, int (*fn)(struct obj*), int mx, boolean combo \/* combination menu flag *\/, unsigned *resultflags) {$/;"	f
ghitm	src/dokick.c	/^boolean ghitm(struct monst *mtmp, struct obj *gold) {$/;"	f
ghod_hitsu	src/priest.c	/^void ghod_hitsu(struct monst *priest) {$/;"	f
ghost_count	include/flag.h	/^	int	 djinni_count, ghost_count;	\/* potion effect tuning *\/$/;"	m	struct:flag
ghost_from_bottle	src/potion.c	/^static void ghost_from_bottle() {$/;"	f	file:
ghostfruit	src/restore.c	/^static void ghostfruit(struct obj *otmp) {$/;"	f	file:
ghostnames	src/do_name.c	/^static const char * const ghostnames[] = {$/;"	v	file:
ghoulname	src/decl.c	/^char ghoulname[PL_PSIZ] = DUMMY;$/;"	v
gid	src/restore.c	/^		unsigned gid;	\/* ghost ID *\/$/;"	m	struct:bucket::__anon18	file:
give_may_advance_msg	src/weapon.c	/^static void give_may_advance_msg(int skill) {$/;"	f	file:
givit	src/eat.c	/^static void givit(int type, struct permonst *ptr) {$/;"	f	file:
glibr	src/do_wear.c	/^void glibr(void) {$/;"	f
glyph	include/region.h	/^	int glyph;			\/* Which glyph to use if visible *\/$/;"	m	struct:__anon29
glyph	include/wintty.h	/^	int glyph;			\/* glyph display in menu *\/$/;"	m	struct:tty_mi
glyph	src/display.c	/^	int   glyph;$/;"	m	struct:__anon3	file:
glyph	src/display.c	/^	int glyph;		\/* glyph to use when printing *\/$/;"	m	struct:tmp_glyph	file:
glyph	win/curses/cursdial.c	/^    int glyph;                  \/* Menu glyphs *\/$/;"	m	struct:nhmi	file:
glyph2proxy	win/proxy/glyphmap.c	/^short glyph2proxy[MAX_GLYPH];$/;"	v
glyph_at	src/display.c	/^int glyph_at(xchar x, xchar y) {$/;"	f
glyph_is_body	include/display.h	376;"	d
glyph_is_cmap	include/display.h	391;"	d
glyph_is_detected_monster	include/display.h	380;"	d
glyph_is_explosion	include/display.h	393;"	d
glyph_is_floating	src/display.c	/^int glyph_is_floating(int glyph) {$/;"	f
glyph_is_invisible	include/display.h	382;"	d
glyph_is_monster	include/display.h	367;"	d
glyph_is_normal_monster	include/display.h	372;"	d
glyph_is_normal_object	include/display.h	383;"	d
glyph_is_object	include/display.h	385;"	d
glyph_is_pet	include/display.h	374;"	d
glyph_is_ridden_monster	include/display.h	378;"	d
glyph_is_swallow	include/display.h	398;"	d
glyph_is_trap	include/display.h	388;"	d
glyph_is_warning	include/display.h	400;"	d
glyph_is_zap_beam	include/display.h	396;"	d
glyph_t	include/config.h	/^typedef long glyph_t;$/;"	t
glyph_to_body	include/display.h	345;"	d
glyph_to_cmap	include/display.h	356;"	d
glyph_to_mon	include/display.h	339;"	d
glyph_to_obj	include/display.h	348;"	d
glyph_to_swallow	include/display.h	359;"	d
glyph_to_trap	include/display.h	352;"	d
gno_abil	src/attrib.c	/^gno_abil[] = { {   5, &(HStealth), "stealthy", "" },$/;"	v	typeref:struct:innate	file:
gno_tech	src/tech.c	/^gno_tech[] = { {   1, T_VANISH, 1},$/;"	v	typeref:struct:	file:
gnostic	include/you.h	/^	long	gnostic;	\/* used prayer, priest, or altar *\/$/;"	m	struct:u_conduct
god_gives_benefit	src/pray.c	/^void god_gives_benefit(aligntyp alignment) {$/;"	f
god_gives_pet	src/pray.c	/^void god_gives_pet(aligntyp alignment) {$/;"	f
god_zaps_you	src/pray.c	/^static void god_zaps_you(aligntyp resp_god) {$/;"	f	file:
gods_angry	src/pray.c	/^static void gods_angry(aligntyp g_align) {$/;"	f	file:
gods_upset	src/pray.c	/^static void gods_upset(aligntyp g_align) {$/;"	f	file:
godvoice	src/pray.c	/^static void godvoice(aligntyp g_align, const char *words) {$/;"	f	file:
godvoices	src/pray.c	/^static const char *godvoices[] = {$/;"	v	file:
gold	include/sp_lev.h	/^} gold;$/;"	t	typeref:struct:__anon47
gold_detect	src/detect.c	/^int gold_detect(struct obj *sobj) {$/;"	f
golds	include/sp_lev.h	/^	gold **golds;$/;"	m	struct:__anon52
golds	include/sp_lev.h	/^	gold **golds;$/;"	m	struct:_room
goldseen	src/mklev.c	/^boolean goldseen;$/;"	v
golemeffects	src/mon.c	/^void golemeffects(struct monst *mon, int damtype, int dam) {$/;"	f
golemhp	src/makemon.c	/^int golemhp(int type) {$/;"	f
good_row	src/vision.c	1075;"	d	file:
goodfruit	src/bones.c	/^static void goodfruit(int id) {$/;"	f	file:
goodpos	src/teleport.c	/^boolean goodpos(int x, int y, struct monst *mtmp, unsigned gpflags) {$/;"	f
goodtype	src/hack.c	1892;"	d	file:
got_final	include/quest.h	/^	bool got_final;		\/* got the final quest assignment *\/$/;"	m	struct:q_score
got_quest	include/quest.h	/^	bool got_quest;		\/* got the quest assignment *\/$/;"	m	struct:q_score
got_thanks	include/quest.h	/^	bool got_thanks;		\/* final message from leader *\/$/;"	m	struct:q_score
goto_hell	src/dungeon.c	/^void goto_hell(boolean at_stairs, boolean falling)	{$/;"	f
goto_level	src/do.c	/^void goto_level(d_level *newlevel, boolean at_stairs, boolean falling, boolean portal) {$/;"	f
grab	include/decl.h	/^	boolean grab;$/;"	m	struct:autopickup_exception
graph_off	win/tty/termcap.c	/^void graph_off(void) {$/;"	f
graph_on	win/tty/termcap.c	/^void graph_on(void) {$/;"	f
graphics	include/flag.h	/^	int graphics;$/;"	m	struct:instance_flags
graphics_opts	src/options.c	/^static void graphics_opts(char *opts, const char *optype, int maxlen, int offset) {$/;"	f	file:
graphicses	src/options.c	/^static const char *graphicses[] = {$/;"	v	file:
graveyard	include/rm.h	/^	bool graveyard;		\/* has_morgue, but remains set *\/$/;"	m	struct:levelflags
grddead	src/vault.c	/^boolean grddead(struct monst *grd) {$/;"	f
grease_protect	src/trap.c	/^grease_protect (struct obj *otmp, const char *ostr, struct monst *victim) {$/;"	f
greased	include/obj.h	/^	bool greased;	\/* covered with grease *\/$/;"	m	struct:obj
greatest_erosion	include/obj.h	74;"	d
grenade_callback	src/explode.c	/^struct grenade_callback {$/;"	s	file:
grenade_dig_callback	src/explode.c	/^static int grenade_dig_callback(void *data, int x, int y) {$/;"	f	file:
grenade_effects	src/explode.c	/^static void grenade_effects(struct obj *source, xchar x, xchar y, ExplodeRegion *fiery_area, ExplodeRegion *gas_area, ExplodeRegion *dig_area, boolean isyou) {$/;"	f	file:
grenade_explode	src/explode.c	/^void grenade_explode(struct obj *obj, int x, int y, boolean isyou, int dest) {$/;"	f
grenade_fiery_callback	src/explode.c	/^static int grenade_fiery_callback(void *data, int x, int y) {$/;"	f	file:
grenade_gas_callback	src/explode.c	/^static int grenade_gas_callback(void *data, int x, int y) {$/;"	f	file:
groundhog_day	src/hacklib.c	/^boolean groundhog_day(void) {$/;"	f
groundhogday	include/flag.h	/^	bool  groundhogday;	\/* KMH -- February 2 *\/$/;"	m	struct:flag
group	win/proxy/glyphmap.c	/^    int group, first_cmap, next_cmap;	\/* first <= cmap < next *\/$/;"	m	struct:__anon23	file:
group_accel	win/curses/cursdial.c	/^    char group_accel;           \/* Group accelerator for menu item, if any *\/$/;"	m	struct:nhmi	file:
grow_herbs	src/hack.c	/^boolean grow_herbs(int herb, xchar x, xchar y, boolean showmsg, boolean update) {$/;"	f
grow_up	src/makemon.c	/^struct permonst *grow_up(struct monst *mtmp, struct monst *victim) {$/;"	f
grow_water_herbs	src/hack.c	/^boolean grow_water_herbs(int herb, xchar x, xchar y) {$/;"	f
growl	include/extern.h	1823;"	d
growl_sound	src/sounds.c	/^growl_sound (struct monst *mtmp) {$/;"	f
grownups	src/mondata.c	/^static const short grownups[][2] = {$/;"	v	file:
gselector	include/wintty.h	/^	char gselector;		\/* group accelerator *\/$/;"	m	struct:tty_mi
gtyp	src/dogmove.c	/^static xchar gtyp, gx, gy;	\/* type and position of dog's current goal *\/$/;"	v	file:
guardname	src/questpgr.c	/^static const char *guardname(void) {$/;"	f	file:
guardnum	include/you.h	/^	      guardnum,		\/* PM_ of quest guardians (questpgr.c) *\/$/;"	m	struct:Role
gulpmm	src/mhitm.c	/^static int gulpmm(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f	file:
gulpmu	src/mhitu.c	/^static int gulpmu(struct monst *mtmp, struct attack  *mattk) {$/;"	f	file:
gulpum	src/uhitm.c	/^	static int gulpum(struct monst *mdef, struct attack *mattk) {$/;"	f	file:
gush	src/fountain.c	/^static void gush(int x, int y, void *poolcnt) {$/;"	f	file:
gx	src/dogmove.c	/^static xchar gtyp, gx, gy;	\/* type and position of dog's current goal *\/$/;"	v	file:
gy	src/dogmove.c	/^static xchar gtyp, gx, gy;	\/* type and position of dog's current goal *\/$/;"	v	file:
gypsy_bet	src/gypsy.c	/^static long gypsy_bet(struct monst *mtmp, long minimum) {$/;"	f	file:
gypsy_charge	src/gypsy.c	/^static void gypsy_charge(struct monst *mtmp, long amount) {$/;"	f	file:
gypsy_chat	src/gypsy.c	/^void gypsy_chat(struct monst *mtmp) {$/;"	f
gypsy_init	src/gypsy.c	/^void gypsy_init(struct monst *mtmp) {$/;"	f
gypsy_offer	src/gypsy.c	/^static boolean gypsy_offer(struct monst *mtmp, long cost, char *txt) {$/;"	f	file:
h	include/sp_lev.h	/^	xchar x, y, w, h;$/;"	m	struct:_room
hConIn	sys/winnt/nttty.c	/^HANDLE hConIn;$/;"	v
hConOut	sys/winnt/nttty.c	/^HANDLE hConOut;$/;"	v
hLibrary	sys/winnt/mapimail.c	/^HANDLE hLibrary;                        \/* Handle for MAPI32.DLL     *\/$/;"	v
hLibrary	sys/winnt/nttty.c	/^HANDLE hLibrary;$/;"	v
h_sounds	src/sounds.c	/^static const char * const h_sounds[] = {$/;"	v	file:
hack_artifacts	src/artifact.c	/^static void hack_artifacts(void) {$/;"	f	file:
hackdir	src/decl.c	/^char hackdir[PATHLEN];		\/* where rumors, help, record are *\/$/;"	v
hackpid	src/decl.c	/^int hackpid = 0;		\/* current process id *\/$/;"	v
had	src/cmd.c	/^                                     have[] = "have ", had[]   = "had ",$/;"	v	file:
halign	include/sp_lev.h	/^	char halign, valign;$/;"	m	struct:__anon52
halu_gname	src/pray.c	/^const char * halu_gname(aligntyp alignment) {$/;"	f
handles	win/proxy/dlbh.c	/^    dlb *handles[HANDLES_PER_NODE];$/;"	m	struct:dlb_node	file:
handling	include/dlb.h	/^	char handling;	\/* how to handle the file (compression, etc) *\/$/;"	m	struct:dlb_directory
hangup	src/save.c	/^void hangup(int sig_unused) {$/;"	f
hardfloor	include/rm.h	/^	bool hardfloor;$/;"	m	struct:levelflags
has_barracks	include/rm.h	/^	bool has_barracks;$/;"	m	struct:levelflags
has_beehive	include/rm.h	/^	bool has_beehive;$/;"	m	struct:levelflags
has_blood	include/mondata.h	232;"	d
has_color	src/mapglyph.c	23;"	d	file:
has_color	sys/winnt/nttty.c	/^int has_color(int color) {$/;"	f
has_color	win/tty/termcap.c	/^int has_color(int color) {$/;"	f
has_court	include/rm.h	/^	bool has_court;$/;"	m	struct:levelflags
has_defense	src/muse.c	/^	int has_offense, has_defense, has_misc;$/;"	m	struct:musable	file:
has_dnstairs	src/mkroom.c	/^boolean has_dnstairs(struct mkroom *sroom) {$/;"	f
has_fungusfarm	include/rm.h	/^	bool has_fungusfarm;$/;"	m	struct:levelflags
has_head	include/mondata.h	59;"	d
has_horns	include/mondata.h	60;"	d
has_lemurepit	include/rm.h	/^	bool has_lemurepit;$/;"	m	struct:levelflags
has_migohive	include/rm.h	/^	bool has_migohive;$/;"	m	struct:levelflags
has_misc	src/muse.c	/^	int has_offense, has_defense, has_misc;$/;"	m	struct:musable	file:
has_morgue	include/rm.h	/^	bool has_morgue;$/;"	m	struct:levelflags
has_offense	src/muse.c	/^	int has_offense, has_defense, has_misc;$/;"	m	struct:musable	file:
has_shop	include/rm.h	/^	bool has_shop;$/;"	m	struct:levelflags
has_shrine	src/priest.c	/^static boolean has_shrine(struct monst *pri) {$/;"	f	file:
has_swamp	include/rm.h	/^	bool has_swamp;$/;"	m	struct:levelflags
has_temple	include/rm.h	/^	bool has_temple;$/;"	m	struct:levelflags
has_upstairs	src/mkroom.c	/^boolean has_upstairs(struct mkroom *sroom) {$/;"	f
has_vault	include/rm.h	/^	bool has_vault;$/;"	m	struct:levelflags
has_zoo	include/rm.h	/^	bool has_zoo;$/;"	m	struct:levelflags
haseyes	include/mondata.h	52;"	d
hassound	include/flag.h	/^	bool hassound;	\/* has a sound card *\/$/;"	m	struct:instance_flags
hatch_egg	src/timeout.c	/^void hatch_egg(void *arg, long timeout) {$/;"	f
hatemask	include/you.h	/^	      hatemask;		\/* bit mask of always hostile *\/$/;"	m	struct:Race
hates_silver	include/mondata.h	210;"	d
have	src/cmd.c	/^                                     have[] = "have ", had[]   = "had ",$/;"	v	file:
have_been	src/cmd.c	/^have_been[]  = "have been ",$/;"	v	file:
have_lizard	src/invent.c	/^boolean have_lizard(void) {$/;"	f
have_never	src/cmd.c	/^               have_never[] = "have never ", never[] = "never ";$/;"	v	file:
hbuf	sys/share/pcunix.c	/^static struct stat hbuf;$/;"	v	typeref:struct:stat	file:
hc	include/unixconf.h	295;"	d
hcolor	src/do_name.c	/^const char *hcolor(const char *colorpref) {$/;"	f
hcolors	src/do_name.c	/^static const char * const hcolors[] = {$/;"	v	file:
he	include/you.h	/^	const char *he;		\/* he\/she\/it *\/$/;"	m	struct:Gender
hea_abil	src/attrib.c	/^hea_abil[] = { {	 1, &(HPoison_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
hea_tech	src/tech.c	/^hea_tech[] = { {   1, T_SURGERY, 1},$/;"	v	typeref:struct:	file:
head_engr	src/engrave.c	/^static struct engr *head_engr;$/;"	v	typeref:struct:engr	file:
heal_legs	src/do.c	/^void heal_legs(void) {$/;"	f
healup	src/potion.c	/^void healup(int nhp, int nxtra, boolean curesick, boolean cureblind) {$/;"	f
healup_mon	src/potion.c	/^void healup_mon(struct monst *mtmp, int nhp, int nxtra, boolean curesick, boolean cureblind) {$/;"	f
height	build-linux/src/lev_yacc.c	/^	int height;$/;"	m	struct:size	file:
height	win/curses/cursdial.c	/^    int height;                 \/* Window height of menu *\/$/;"	m	struct:nhm	file:
height	win/curses/curswins.c	/^    int height;                 \/* Usable height not counting border *\/$/;"	m	struct:__anon22	file:
hellish	include/dungeon.h	/^	bool hellish;	\/* is this part of hell? *\/$/;"	m	struct:d_flags
hellprobs	src/mkobj.c	/^const struct icp hellprobs[] = {$/;"	v	typeref:struct:icp
help	include/flag.h	/^	bool  help;		\/* look in data file for info about stuff *\/$/;"	m	struct:flag
help_dir	src/cmd.c	/^static boolean help_dir(char sym, const char *msg) {$/;"	f	file:
help_menu	src/cmd.c	/^static const struct menu_tab help_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
help_menu	src/pager.c	/^static boolean help_menu(int *sel) {$/;"	f	file:
help_menu_items	src/pager.c	/^static const char *help_menu_items[] = {$/;"	v	file:
help_monster_out	src/trap.c	/^	static int help_monster_out( struct monst *mtmp, struct trap *ttmp) {$/;"	f	file:
herb	src/hack.c	/^	int herb;$/;"	m	struct:herb_info	file:
herb_can_grow_at	src/hack.c	/^boolean herb_can_grow_at(xchar x, xchar y, boolean watery) {$/;"	f
herb_info	src/hack.c	/^static const struct herb_info {$/;"	s	file:
herb_info	src/hack.c	/^} herb_info[] = {$/;"	v	typeref:struct:herb_info	file:
herbivorous	include/mondata.h	88;"	d
here	src/extralev.c	216;"	d	file:
hero_breaks	src/dothrow.c	/^int hero_breaks(struct obj *obj, xchar x, xchar y, boolean from_invent) {$/;"	f
hero_glyph	include/display.h	321;"	d
hero_inside	include/region.h	26;"	d
hero_memory	include/rm.h	/^	bool hero_memory;	\/* hero has memory *\/$/;"	m	struct:levelflags
heros_fault	include/region.h	27;"	d
hidden_gold	src/vault.c	/^hidden_gold (void) {$/;"	f
hide_privileges	sys/unix/unixres.c	/^int hide_privileges(bool flag) {$/;"	f
hides_under	include/mondata.h	50;"	d
hiding_privileges	sys/unix/unixres.c	/^static uint hiding_privileges = 0;$/;"	v	file:
hifix	include/you.h	/^	xchar hifix, hirnd;	\/* gained per level >= urole.xlev *\/$/;"	m	struct:RoleAdvance
highc	src/hacklib.c	/^char highc(char c) {$/;"	f
highlight_color	win/curses/cursstat.c	/^    int highlight_color;$/;"	m	struct:nhs	file:
highlight_turns	win/curses/cursstat.c	/^    int highlight_turns;$/;"	m	struct:nhs	file:
hilite_hidden_stairs	include/flag.h	/^	bool  hilite_hidden_stairs;$/;"	m	struct:instance_flags
hilite_obj_piles	include/flag.h	/^	bool  hilite_obj_piles;$/;"	m	struct:instance_flags
hilite_pet	include/flag.h	277;"	d
hilites	util/lev_main.c	/^char *hilites[CLR_MAX];$/;"	v
hilites	win/tty/termcap.c	/^char *hilites[CLR_MAX]; \/* terminal escapes for the various colors *\/$/;"	v
him	include/you.h	/^	const char *him;	\/* him\/her\/it *\/$/;"	m	struct:Gender
hirnd	include/you.h	/^	xchar hifix, hirnd;	\/* gained per level >= urole.xlev *\/$/;"	m	struct:RoleAdvance
his	include/you.h	/^	const char *his;	\/* his\/her\/its *\/$/;"	m	struct:Gender
histemple_at	src/priest.c	/^static boolean histemple_at(struct monst *priest, xchar x, xchar y) {$/;"	f	file:
hit	src/zap.c	/^void hit(const char *str, struct monst *mtmp, const char *force) {$/;"	f
hit_as_four	include/mondata.h	32;"	d
hit_as_one	include/mondata.h	29;"	d
hit_as_three	include/mondata.h	31;"	d
hit_as_two	include/mondata.h	30;"	d
hitfloor	src/dothrow.c	/^void hitfloor(struct obj *obj) {$/;"	f
hitmm	src/mhitm.c	/^static int hitmm(struct monst *magr, struct monst *mdef, struct	attack *mattk) {$/;"	f	file:
hitmsg	include/attk.h	/^	bool hitmsg;$/;"	m	struct:Attk
hitmsg	src/mhitu.c	/^static void hitmsg(struct monst *mtmp, struct attack *mattk) {$/;"	f	file:
hitmu	src/mhitu.c	/^static int hitmu(struct monst *mtmp, struct attack  *mattk) {$/;"	f	file:
hitpointbar	include/flag.h	/^	bool hitpointbar;$/;"	m	struct:instance_flags
hits_bars	src/mthrowu.c	/^boolean hits_bars(struct obj **obj_p,	int x, int y, int always_hit,	int whodidit)		{$/;"	f
hitval	src/weapon.c	/^int hitval (struct obj *otmp, struct monst *mon) {$/;"	f
hmon	src/uhitm.c	/^boolean			hmon(struct monst *mon, struct obj *obj, int thrown) {$/;"	f
hmon_hitmon	src/uhitm.c	/^static boolean hmon_hitmon(struct monst *mon, struct obj *obj, int thrown) {$/;"	f	file:
hmonas	src/uhitm.c	/^	static boolean hmonas(struct monst *mon, int tmp) {$/;"	f	file:
hname	src/decl.c	/^const char *hname = 0;		\/* name of the game (argv[0] of main) *\/$/;"	v
hob_abil	src/attrib.c	/^hob_abil[] = { {  1, &(HStealth), "", "" },$/;"	v	typeref:struct:innate	file:
hob_tech	src/tech.c	/^hob_tech[] = { {   1, T_BLINK, 1},$/;"	v	typeref:struct:	file:
hold_another_object	src/invent.c	/^struct obj *hold_another_object(struct obj *obj, const char *drop_fmt, const char *drop_arg, const char *hold_msg) {$/;"	f
holetime	src/dig.c	/^int holetime(void) {$/;"	f
hollow_str	src/apply.c	/^static const char hollow_str[] = "a hollow sound.  This must be a secret %s!";$/;"	v	file:
home	sys/winnt/nttty.c	/^home()$/;"	f
home	win/tty/termcap.c	/^void home(void) {$/;"	f
home_shk	src/shk.c	/^void home_shk(struct monst *shkp, boolean killkops) {$/;"	f
homebase	include/you.h	/^	const char *homebase;	\/* quest leader's location (from questpgr.c) *\/$/;"	m	struct:Role
homebase	src/questpgr.c	/^static const char *homebase(void) {$/;"	f	file:
hooked_tty_getlin	win/tty/getline.c	/^static void hooked_tty_getlin(const char *query, char *bufp, getlin_hook_proc hook) {$/;"	f	file:
horiz	src/shk.c	3139;"	d	file:
horiz	src/shk.c	3199;"	d	file:
horizontal	include/rm.h	/^	bool horizontal; \/* wall\/door\/etc is horiz. (more typ info) *\/$/;"	m	struct:rm
horsename	src/decl.c	/^char horsename[PL_PSIZ] = DUMMY;$/;"	v
hot_pursuit	src/shk.c	/^void hot_pursuit (struct monst *shkp) {$/;"	f
how	include/wintty.h	/^	short how;			\/* menu mode - pick 1 or N (MENU) *\/$/;"	m	struct:WinDesc
hp	src/topten.c	/^	int maxlvl, hp, maxhp, deaths;$/;"	m	struct:toptenentry	file:
hp_colors	src/options.c	/^struct percent_color_option *hp_colors = NULL;$/;"	v	typeref:struct:percent_color_option
hpadv	include/you.h	/^	struct RoleAdvance hpadv; \/* hit point advancement *\/$/;"	m	struct:Race	typeref:struct:Race::RoleAdvance
hpadv	include/you.h	/^	struct RoleAdvance hpadv; \/* hit point advancement *\/$/;"	m	struct:Role	typeref:struct:Role::RoleAdvance
hpen_color	win/curses/cursstat.c	/^hpen_color(bool is_hp, int cur, int max)$/;"	f	file:
hpen_color_attr	win/curses/cursstat.c	/^hpen_color_attr(bool is_hp, int cur, int max)$/;"	f	file:
hu_abbrev_stat	src/botl.c	/^const char *hu_abbrev_stat[] = {$/;"	v
hu_stat	src/botl.c	/^const char *hu_stat[] = {$/;"	v
humanoid	include/mondata.h	72;"	d
hungrytime	include/edog.h	/^	long hungrytime;		\/* will get hungry at this time *\/$/;"	m	struct:edog
hurtarmor	src/mhitu.c	/^static void hurtarmor(int attk) {$/;"	f	file:
hurtle	src/dothrow.c	/^void hurtle(int dx, int dy, int range, boolean verbose) {$/;"	f
hurtle_step	src/dothrow.c	/^boolean hurtle_step(void *arg, int x, int y) {$/;"	f
hurtmarmor	src/uhitm.c	/^void hurtmarmor(struct monst *mdef, int attk) {$/;"	f
hurtmon	src/tech.c	/^static void hurtmon (struct monst *mtmp, int tmp) {$/;"	f	file:
hwep	src/weapon.c	/^static const short hwep[] = {$/;"	v	file:
hx	include/dungeon.h	/^	xchar	hx, hy;		\/* "upper" right corner (near [COLNO,ROWNO]) *\/$/;"	m	struct:dest_area
hx	include/mkroom.h	/^	schar lx,hx,ly,hy;	\/* usually xchar, but hx may be -1 *\/$/;"	m	struct:mkroom
hx	include/rect.h	/^	xchar hx, hy;$/;"	m	struct:nhrect
hy	include/dungeon.h	/^	xchar	hx, hy;		\/* "upper" right corner (near [COLNO,ROWNO]) *\/$/;"	m	struct:dest_area
hy	include/mkroom.h	/^	schar lx,hx,ly,hy;	\/* usually xchar, but hx may be -1 *\/$/;"	m	struct:mkroom
hy	include/rect.h	/^	xchar hx, hy;$/;"	m	struct:nhrect
i	build-linux/include/dgn_comp.h	/^	int	i;$/;"	m	union:YYSTYPE
i	build-linux/include/lev_comp.h	/^	int	i;$/;"	m	union:YYSTYPE
i	build-linux/src/dgn_yacc.c	/^	int	i;$/;"	m	union:YYSTYPE	file:
i	build-linux/src/lev_yacc.c	/^	int	i;$/;"	m	union:YYSTYPE	file:
i	include/decl.h	/^	int n, i;$/;"	m	struct:multishot
ice_abil	src/attrib.c	/^ice_abil[] = { {   1, &(HCold_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
ice_tech	src/tech.c	/^ice_tech[] = { {   1, T_REINFORCE, 1},$/;"	v	typeref:struct:	file:
icedpool	include/rm.h	453;"	d
iclass	src/mkobj.c	/^	char iclass;	\/* item class *\/$/;"	m	struct:icp	file:
icp	src/mkobj.c	/^struct icp {$/;"	s	file:
id	include/dungeon.h	/^	int		  id;		\/* branch identifier *\/$/;"	m	struct:branch
id	include/lev.h	/^	anything id;	\/* source's identifier *\/$/;"	m	struct:ls_t
id	include/sp_lev.h	/^	short id, spe;$/;"	m	struct:__anon36
id	include/sp_lev.h	/^	short id;$/;"	m	struct:__anon35
id	win/proxy/mapid.c	/^    winid id;$/;"	m	struct:mapid__window	file:
id_map	src/restore.c	/^static struct bucket *id_map = 0;$/;"	v	typeref:struct:bucket	file:
ident	include/flag.h	/^	unsigned ident;		\/* social security number for each monster *\/$/;"	m	struct:flag
ident_chars	src/shk.c	/^static const char ident_chars[] = "bp";$/;"	v	file:
identifier	include/wintty.h	/^	anything identifier;	\/* user identifier *\/$/;"	m	struct:tty_mi
identifier	win/curses/cursdial.c	/^    anything identifier;        \/* Value returned if item selected *\/$/;"	m	struct:nhmi	file:
identifiers	win/proxy/mapid.c	/^    anything *identifiers;$/;"	m	struct:mapid__window	file:
identify	src/invent.c	/^int identify(struct obj *otmp) {$/;"	f
identify_pack	src/invent.c	/^void identify_pack(int id_limit) {$/;"	f
identify_types	src/shk.c	/^static const char identify_types[] = { ALL_CLASSES, 0 };$/;"	v	file:
idx	src/dungeon.c	/^	int idx;$/;"	m	struct:lchoice	file:
iflags	src/decl.c	/^struct instance_flags iflags = DUMMY;$/;"	v	typeref:struct:instance_flags
ignintr	include/flag.h	/^	bool  ignintr;	\/* ignore interrupts *\/$/;"	m	struct:flag
ignitable	include/obj.h	336;"	d
immobile	src/mondata.c	/^static const char *immobile[4]	= { "wiggle", "Wiggle", "pulsate", "Pulsate" };$/;"	v	file:
impact_drop	src/dokick.c	/^void impact_drop(struct obj *missile, xchar x, xchar y, xchar dlev) {$/;"	f
impossible	src/pline.c	/^void impossible(const char *s, ...) {$/;"	f
in_battle	include/quest.h	/^	bool in_battle;		\/* set when nemesis fighting you *\/$/;"	m	struct:q_score
in_container	src/pickup.c	/^static int in_container(struct obj *obj) {$/;"	f	file:
in_doagain	src/decl.c	/^int in_doagain = 0;$/;"	v
in_dungeon	build-linux/src/dgn_yacc.c	/^static int in_dungeon = 0, n_dgns = -1, n_levs = -1, n_brs = -1;$/;"	v	file:
in_fcorridor	src/vault.c	/^static boolean in_fcorridor(struct monst *grd, int x, int y) {$/;"	f	file:
in_impossible	include/decl.h	/^	int in_impossible;$/;"	m	struct:sinfo
in_islev	include/sp_lev.h	/^	boolean in_islev, del_islev;$/;"	m	struct:__anon44
in_line	src/questpgr.c	/^static char	in_line[80], cvt_buf[64], out_line[128];$/;"	v	file:
in_mklev	src/decl.c	/^boolean in_mklev = false;$/;"	v
in_or_out_menu	src/pickup.c	/^static int in_or_out_menu(const char *prompt, struct obj *obj, boolean outokay, boolean inokay) {$/;"	f	file:
in_out_region	src/region.c	/^boolean in_out_region(xchar x, xchar y) {$/;"	f
in_paniclog	include/decl.h	/^	int in_paniclog;$/;"	m	struct:sinfo
in_room	build-linux/src/lev_yacc.c	/^static xchar in_room;$/;"	v	file:
in_rooms	src/hack.c	/^char *in_rooms(xchar x, xchar y, int typewanted) {$/;"	f
in_steed_dismounting	src/decl.c	/^boolean in_steed_dismounting = false;$/;"	v
in_town	src/hack.c	/^boolean in_town(int x, int y) {$/;"	f
in_trouble	src/pray.c	/^static int in_trouble() {$/;"	f	file:
in_use	include/obj.h	/^	bool in_use;	\/* for magic items before useup items *\/$/;"	m	struct:obj
in_water	src/hack.c	/^	boolean in_water;$/;"	m	struct:herb_info	file:
in_your_sanctuary	src/priest.c	/^boolean in_your_sanctuary(struct monst *mon, xchar x, xchar y) {$/;"	f
inarea	include/sp_lev.h	/^	} inarea;$/;"	m	struct:__anon44	typeref:struct:__anon44::__anon45
incarnation	include/global.h	/^	unsigned long	incarnation;	\/* actual version number *\/$/;"	m	struct:version_info
incr_itimeout	src/potion.c	/^void incr_itimeout (long *which, int incr) {$/;"	f
incrnknow	src/spell.c	27;"	d	file:
indent	src/dungeon.c	/^static void indent(int d) {$/;"	f	file:
index	include/ntconf.h	79;"	d
index	include/unixconf.h	267;"	d
index	sys/share/uudecode.c	/^char *index(char *sp, char c) {$/;"	f
indigestion	src/monmove.c	/^static const char indigestion[] = { BALL_CLASS, ROCK_CLASS, 0 };$/;"	v	file:
individual	include/you.h	/^	struct RoleName individual; \/* individual as a noun ("man", "elf") *\/$/;"	m	struct:Race	typeref:struct:Race::RoleName
induced_align	src/dungeon.c	/^int induced_align(int pct) {$/;"	f
infix	include/you.h	/^	xchar infix, inrnd;	\/* at character initialization *\/$/;"	m	struct:RoleAdvance
infravisible	include/mondata.h	155;"	d
infravision	include/mondata.h	154;"	d
inherits	src/shk.c	/^static boolean inherits(struct monst *shkp, int numsk, int croaked) {$/;"	f	file:
inhishop	src/shk.c	/^int inhishop (struct monst *mtmp) {$/;"	f
ini_inv	src/u_init.c	/^static void ini_inv(struct trobj *trop) {$/;"	f	file:
ini_routine	src/windows.c	/^	void (*ini_routine)(void);		\/* optional (can be 0) *\/$/;"	m	struct:win_choices	file:
init	src/files.c	/^	int init;$/;"	m	struct:level_ftrack	file:
init_artifacts	src/artifact.c	/^void init_artifacts (void) {$/;"	f
init_artifacts1	src/artifact.c	/^void init_artifacts1(void) {$/;"	f
init_attr	src/attrib.c	/^void init_attr (int np) {$/;"	f
init_bind_list	src/cmd.c	/^static void init_bind_list(void) {$/;"	f	file:
init_branch	build-linux/src/dgn_yacc.c	/^init_branch()$/;"	f
init_dungeon	build-linux/src/dgn_yacc.c	/^init_dungeon()$/;"	f
init_dungeons	src/dungeon.c	/^void init_dungeons(void) {$/;"	f
init_fill	src/mkmap.c	/^static void init_fill(schar bg_typ, schar fg_typ) {$/;"	f	file:
init_hilite	win/tty/termcap.c	/^static void init_hilite(void) {$/;"	f	file:
init_lan_features	sys/share/nhlan.c	/^void init_lan_features(void) {$/;"	f
init_lev	build-linux/src/lev_yacc.c	/^static lev_init init_lev;$/;"	v	file:
init_lev	include/sp_lev.h	/^	lev_init init_lev;$/;"	m	struct:__anon53
init_lev	include/sp_lev.h	/^	lev_init init_lev;$/;"	m	struct:__anon56
init_lev	src/sp_lev.c	/^lev_init init_lev;$/;"	v
init_level	build-linux/src/dgn_yacc.c	/^init_level()$/;"	f
init_level	src/dungeon.c	/^static void init_level(int dgn, int proto_index, struct proto_dungeon *pd) {$/;"	f	file:
init_linux_cons	sys/share/unixtty.c	/^void init_linux_cons(void) {$/;"	f
init_map	src/mkmap.c	/^static void init_map(schar bg_typ) {$/;"	f	file:
init_nhwindows	include/winprocs.h	79;"	d
init_obj_classes	util/lev_main.c	/^static void init_obj_classes(void) {$/;"	f	file:
init_objects	src/o_init.c	/^init_objects (void) {$/;"	f
init_present	include/sp_lev.h	/^	boolean	init_present, padding;$/;"	m	struct:__anon31
init_rect	src/rect.c	/^init_rect (void) {$/;"	f
init_sco_cons	sys/share/unixtty.c	/^void init_sco_cons(void) {$/;"	f
init_shk_services	src/shknam.c	/^static void init_shk_services(struct monst *shk) {$/;"	f	file:
init_ttycolor	sys/winnt/nttty.c	/^static void init_ttycolor(void) {$/;"	f	file:
init_ttycolor	win/tty/termcap.c	/^void init_ttycolor(void) {$/;"	f
init_uasmon	src/polyself.c	/^init_uasmon (void) {$/;"	f
init_uhunger	src/eat.c	/^void init_uhunger(void) {$/;"	f
init_vault	src/mklev.c	45;"	d	file:
init_yyin	build-linux/src/dgn_lex.c	/^void init_yyin( input_f )$/;"	f
init_yyin	build-linux/src/lev_lex.c	/^void init_yyin( input_f )$/;"	f
init_yyout	build-linux/src/dgn_lex.c	/^void init_yyout( output_f )$/;"	f
init_yyout	build-linux/src/lev_lex.c	/^void init_yyout( output_f )$/;"	f
initalign	include/flag.h	/^	int	 initalign;	\/* starting alignment (index into aligns[])  *\/$/;"	m	struct:flag
initedog	src/dog.c	/^void initedog(struct monst *mtmp) {$/;"	f
initgend	include/flag.h	/^	int	 initgend;	\/* starting gender    (index into genders[]) *\/$/;"	m	struct:flag
initial	src/options.c	/^static boolean initial, from_file;$/;"	v	file:
initialspell	src/spell.c	/^void initialspell (struct obj *obj) {$/;"	f
initoptions	src/options.c	/^void initoptions(void) {$/;"	f
initrace	include/flag.h	/^	int	 initrace;	\/* starting race      (index into races[])   *\/$/;"	m	struct:flag
initrack	src/track.c	/^initrack() {$/;"	f
initrecord	include/you.h	/^	xchar initrecord;	\/* initial alignment record *\/$/;"	m	struct:Role
initrole	include/flag.h	/^	int	 initrole;	\/* starting role      (index into roles[])   *\/$/;"	m	struct:flag
initstate	sys/share/random.c	/^char *initstate(unsigned seed, char *arg_state, int n) {$/;"	f
inittyb	sys/share/unixtty.c	/^struct termstruct inittyb, curttyb;$/;"	v	typeref:struct:termstruct
inittyb2	sys/share/unixtty.c	/^struct tchars inittyb2, curttyb2;$/;"	v	typeref:struct:tchars
inittyb2	sys/share/unixtty.c	89;"	d	file:
initvalue	src/options.c	/^	bool	*addr, initvalue;$/;"	m	struct:Bool_Opt	file:
initvalue	src/options.c	/^	unsigned long initvalue;$/;"	m	struct:Bool_Tile_Opt	file:
initvalue	win/proxy/getopt.c	/^    bool *addr, initvalue;$/;"	m	struct:Bool_Opt	file:
initworm	src/worm.c	/^initworm (struct monst *worm, int wseg_count) {$/;"	f
inmap	sys/winnt/nh340key.c	91;"	d	file:
inmap	sys/winnt/nhdefkey.c	97;"	d	file:
inmap	sys/winnt/nhraykey.c	250;"	d	file:
inmore	include/wintty.h	/^	int inmore;			\/* non-zero if more() is active *\/$/;"	m	struct:DisplayDesc
innate	src/attrib.c	/^static const struct innate {$/;"	s	file:
innate_tech	include/tech.h	/^struct innate_tech {$/;"	s
input	build-linux/src/dgn_lex.c	/^input()		\/* Under MPW \\n is chr(13)! Compensate for this. *\/$/;"	f
input	build-linux/src/dgn_lex.c	649;"	d	file:
input	build-linux/src/lev_lex.c	/^input()		\/* Under MPW \\n is chr(13)! Compensate for this. *\/$/;"	f
input	build-linux/src/lev_lex.c	951;"	d	file:
inputflags	sys/share/unixtty.c	110;"	d	file:
inputflags	sys/share/unixtty.c	64;"	d	file:
inread	include/wintty.h	/^	int inread;			\/* non-zero if reading a character *\/$/;"	m	struct:DisplayDesc
inrnd	include/you.h	/^	xchar infix, inrnd;	\/* at character initialization *\/$/;"	m	struct:RoleAdvance
ins_chkpt	include/flag.h	/^	bool  ins_chkpt;	\/* checkpoint as appropriate *\/$/;"	m	struct:flag
insert_branch	src/dungeon.c	/^void insert_branch(branch *new_branch, boolean extract_first) {$/;"	f
insert_timer	src/timeout.c	/^static void insert_timer(timer_element *gnu) {$/;"	f	file:
inside_f	include/region.h	/^	short inside_f;			\/* Function to call every turn if player's$/;"	m	struct:__anon29
inside_gas_cloud	src/region.c	/^bool inside_gas_cloud(void *p1, void * p2) {$/;"	f
inside_rect	src/region.c	/^boolean inside_rect(NhRect *r, int x, int y) {$/;"	f
inside_region	src/region.c	/^boolean inside_region(NhRegion *reg, int x, int y) {$/;"	f
inside_room	src/mkroom.c	/^boolean inside_room(struct mkroom *croom, xchar x, xchar y) {$/;"	f
inside_shop	src/shk.c	/^char inside_shop(xchar x, xchar y) {$/;"	f
instance_flags	include/flag.h	/^struct instance_flags {$/;"	s
instapetrify	src/trap.c	/^	void instapetrify(const char *str) {$/;"	f
int_to_any	src/hack.c	/^anything int_to_any(int i) {$/;"	f
intemple	src/priest.c	/^intemple (int roomno) {$/;"	f
interesting_to_discover	src/o_init.c	/^static boolean interesting_to_discover(int i) {$/;"	f	file:
interject	sys/winnt/winnt.c	/^interject(interjection_type)$/;"	f
interject_assistance	sys/winnt/winnt.c	/^interject_assistance(num, interjection_type, ptr1, ptr2)$/;"	f
interjection	sys/winnt/winnt.c	/^static int interjection[INTERJECTION_TYPES];$/;"	v	file:
interjection_buf	sys/winnt/winnt.c	/^static char interjection_buf[INTERJECTION_TYPES][1024];$/;"	v	file:
intermed	include/you.h	/^	const char *intermed;	\/* quest intermediate goal (from questpgr.c) *\/$/;"	m	struct:Role
intermed	src/questpgr.c	/^static const char *intermed(void) {$/;"	f	file:
intersect	src/rect.c	/^intersect(r1, r2, r3)$/;"	f	file:
intervene	src/wizard.c	/^intervene (void) {$/;"	f
intr	include/wintty.h	/^	int intr;			\/* non-zero if inread was interrupted *\/$/;"	m	struct:DisplayDesc
intr_char	sys/share/unixtty.c	/^	char erase_char, intr_char, kill_char;$/;"	v
intr_sym	sys/share/unixtty.c	103;"	d	file:
intr_sym	sys/share/unixtty.c	44;"	d	file:
intrinsic	include/prop.h	/^	long intrinsic;$/;"	m	struct:prop
intrinsic_possible	src/eat.c	/^static int intrinsic_possible(int type, struct permonst *ptr) {$/;"	f	file:
introff	sys/share/unixtty.c	/^void introff(void) {$/;"	f
intron	sys/share/unixtty.c	/^void intron(void) {$/;"	f
inv_asub	src/u_init.c	/^struct inv_asub {$/;"	s	file:
inv_asubs	src/u_init.c	/^static struct inv_asub inv_asubs[] = {$/;"	v	typeref:struct:inv_asub	file:
inv_cnt	src/hack.c	/^int inv_cnt(void) {$/;"	f
inv_menu	src/cmd.c	/^static const struct menu_tab inv_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
inv_order	include/flag.h	/^	char	 inv_order[MAXOCLASSES];$/;"	m	struct:flag
inv_pos	src/decl.c	/^coord inv_pos = { 0, 0 };$/;"	v
inv_prop	include/artifact.h	/^	uchar	    inv_prop;	\/* property obtained by invoking artifact *\/$/;"	m	struct:artifact
inv_rank	src/invent.c	113;"	d	file:
inv_rank	src/invent.c	83;"	d	file:
inv_sub	src/u_init.c	/^static struct inv_sub {$/;"	s	file:
inv_subs	src/u_init.c	/^} inv_subs[] = {$/;"	v	typeref:struct:inv_sub	file:
inv_update	win/curses/cursmain.c	/^static int inv_update = 0;$/;"	v	file:
inv_weight	src/hack.c	/^int inv_weight(void) {$/;"	f
invault	src/vault.c	/^invault (void) {$/;"	f
invbuf	src/invent.c	/^static char *invbuf = NULL;$/;"	v	file:
invbufsiz	src/invent.c	/^static unsigned invbufsiz = 0;$/;"	v	file:
invdisp_nothing	src/invent.c	/^static void invdisp_nothing(const char *hdr, const char *txt) {$/;"	f	file:
inven_inuse	src/restore.c	/^void inven_inuse(boolean quietly) {$/;"	f
invent	src/decl.c	/^struct obj *invent = NULL,$/;"	v	typeref:struct:obj
invert_all	win/tty/wintty.c	/^static void invert_all(winid window, tty_menu_item *page_start, tty_menu_item *page_end, char acc) {$/;"	f	file:
invert_all_on_page	win/tty/wintty.c	/^static void invert_all_on_page(winid window, tty_menu_item *page_start, tty_menu_item *page_end, char acc) {$/;"	f	file:
invis_blkd	include/monst.h	/^	bool invis_blkd; \/* invisibility blocked *\/$/;"	m	struct:monst
invis_color	src/mapglyph.c	34;"	d	file:
invisexplain	src/drawing.c	/^const char invisexplain[] = "remembered, unseen, creature";$/;"	v
invlet	include/obj.h	/^	char	invlet;		\/* designation in inventory *\/$/;"	m	struct:obj
invlet_constant	include/flag.h	/^	bool  invlet_constant; \/* let objects keep their inventory symbol *\/$/;"	m	struct:flag
invocation_message	src/hack.c	/^void invocation_message(void) {$/;"	f
invocation_pos	src/hack.c	/^boolean invocation_pos(xchar x, xchar y) {$/;"	f
invoke_types	src/artifact.c	/^static const char invoke_types[] = { ALL_CLASSES, 0 };$/;"	v	file:
invoked	include/you.h	/^	bool invoked;		\/* invoked Gate to the Sanctum level *\/$/;"	m	struct:u_event
invweight	include/flag.h	/^	bool  invweight;    \/* show weight in inventory and when picking up *\/$/;"	m	struct:flag
iprob	include/mkroom.h	/^		int iprob;		\/* probability of an item type *\/$/;"	m	struct:shclass::itp
iprob	src/mkobj.c	/^	int  iprob;		\/* probability of an item type *\/$/;"	m	struct:icp	file:
iprobs	include/mkroom.h	/^	} iprobs[8];$/;"	m	struct:shclass	typeref:struct:shclass::itp
ir	sys/winnt/nh340key.c	/^INPUT_RECORD *ir;$/;"	v
ir	sys/winnt/nhdefkey.c	/^INPUT_RECORD *ir;$/;"	v
ir	sys/winnt/nhraykey.c	/^INPUT_RECORD *ir;$/;"	v
ir	sys/winnt/nttty.c	/^INPUT_RECORD ir;$/;"	v
irregular	include/mkroom.h	/^	boolean irregular;	\/* true if room is non-rectangular *\/$/;"	m	struct:mkroom
is_altseq	sys/winnt/nhraykey.c	/^is_altseq(shiftstate)$/;"	f	file:
is_ammo	include/obj.h	184;"	d
is_animal	include/mondata.h	73;"	d
is_armed	include/mondata.h	84;"	d
is_autopickup_exception	src/pickup.c	/^boolean is_autopickup_exception(struct obj *obj, boolean grab	) {$/;"	f
is_axe	include/obj.h	179;"	d
is_bat	include/mondata.h	101;"	d
is_bigfoot	src/dokick.c	8;"	d	file:
is_bird	include/mondata.h	104;"	d
is_blade	include/obj.h	169;"	d
is_boots	include/obj.h	231;"	d
is_bullet	include/obj.h	223;"	d
is_cavernous_lev	include/rm.h	/^	bool is_cavernous_lev;$/;"	m	struct:levelflags
is_chargeable	src/read.c	/^boolean is_chargeable(struct obj *obj) {$/;"	f
is_clear	src/vision.c	1078;"	d	file:
is_clinger	include/mondata.h	41;"	d
is_cloak	include/obj.h	235;"	d
is_cmap_drawbridge	src/pager.c	638;"	d	file:
is_cmap_trap	src/pager.c	637;"	d	file:
is_corrodeable	include/objclass.h	76;"	d
is_covetous	include/mondata.h	153;"	d
is_damageable	include/objclass.h	78;"	d
is_db_wall	src/dbridge.c	/^boolean is_db_wall(int x, int y) {$/;"	f
is_demon	include/mondata.h	108;"	d
is_digging	src/dig.c	/^boolean is_digging(void) {$/;"	f
is_dlord	include/mondata.h	135;"	d
is_domestic	include/mondata.h	107;"	d
is_dprince	include/mondata.h	136;"	d
is_drawbridge_wall	src/dbridge.c	/^int is_drawbridge_wall (int x, int y) {$/;"	f
is_dwarf	include/mondata.h	95;"	d
is_dwarvish_armor	include/obj.h	252;"	d
is_dwarvish_obj	include/obj.h	311;"	d
is_edible	src/eat.c	/^boolean is_edible(struct obj *obj) {$/;"	f
is_elf	include/mondata.h	94;"	d
is_elven_armor	include/obj.h	241;"	d
is_elven_obj	include/obj.h	300;"	d
is_elven_weapon	include/obj.h	294;"	d
is_fainted	src/eat.c	/^boolean is_fainted(void) {$/;"	f
is_female	include/mondata.h	111;"	d
is_fire	include/mondata.h	63;"	d
is_firearm	include/obj.h	220;"	d
is_flammable	src/mkobj.c	/^boolean is_flammable(struct obj *otmp) {$/;"	f
is_flimsy	include/obj.h	354;"	d
is_floater	include/mondata.h	40;"	d
is_flyer	include/mondata.h	39;"	d
is_fshk	src/shk.c	/^boolean is_fshk(struct monst *mtmp) {$/;"	f
is_giant	include/mondata.h	105;"	d
is_gloves	include/obj.h	233;"	d
is_gnome	include/mondata.h	96;"	d
is_gnomish_armor	include/obj.h	256;"	d
is_gnomish_obj	include/obj.h	317;"	d
is_golem	include/mondata.h	106;"	d
is_graystone	include/obj.h	346;"	d
is_grenade	include/obj.h	192;"	d
is_hazy	include/obj.h	135;"	d
is_helmet	include/obj.h	229;"	d
is_hero_spell	src/zap.c	38;"	d	file:
is_hider	include/mondata.h	51;"	d
is_hobbit	include/mondata.h	99;"	d
is_home_elemental	src/makemon.c	/^boolean is_home_elemental(struct permonst *ptr) {$/;"	f
is_human	include/mondata.h	98;"	d
is_ice	src/dbridge.c	/^boolean is_ice(int x, int y) {$/;"	f
is_launcher	include/obj.h	181;"	d
is_lava	src/dbridge.c	/^boolean is_lava(int x,int y) {$/;"	f
is_lightsaber	include/obj.h	218;"	d
is_lminion	include/mondata.h	34;"	d
is_longworm	include/mondata.h	150;"	d
is_lord	include/mondata.h	131;"	d
is_main_window	win/curses/curswins.c	/^static bool is_main_window(winid wid) {$/;"	f	file:
is_male	include/mondata.h	110;"	d
is_maze_lev	include/rm.h	/^	bool is_maze_lev;$/;"	m	struct:levelflags
is_mega_spell	src/zap.c	39;"	d	file:
is_mercenary	include/mondata.h	109;"	d
is_metallic	include/objclass.h	68;"	d
is_mind_flayer	include/mondata.h	204;"	d
is_minion	include/mondata.h	137;"	d
is_missile	include/obj.h	188;"	d
is_mplayer	include/mondata.h	158;"	d
is_multigen	include/obj.h	194;"	d
is_ndemon	include/mondata.h	133;"	d
is_neuter	include/mondata.h	112;"	d
is_ok_location	src/sp_lev.c	/^static boolean is_ok_location(schar x, schar y, int humidity) {$/;"	f	file:
is_orc	include/mondata.h	97;"	d
is_orcish_armor	include/obj.h	246;"	d
is_orcish_obj	include/obj.h	303;"	d
is_organic	include/objclass.h	67;"	d
is_pick	include/obj.h	207;"	d
is_placeholder	include/mondata.h	163;"	d
is_plural	include/obj.h	358;"	d
is_poisonable	include/obj.h	199;"	d
is_pole	include/obj.h	172;"	d
is_pool	src/dbridge.c	/^boolean is_pool(int x, int y) {$/;"	f
is_prince	include/mondata.h	132;"	d
is_pure	src/quest.c	/^static int is_pure(boolean talk) {$/;"	f	file:
is_quest_artifact	src/questpgr.c	/^bool is_quest_artifact(struct obj *otmp) {$/;"	f
is_reviver	include/mondata.h	168;"	d
is_rider	include/mondata.h	160;"	d
is_rottable	src/mkobj.c	/^boolean is_rottable(struct obj *otmp) {$/;"	f
is_rustprone	include/objclass.h	73;"	d
is_safepet	include/display.h	129;"	d
is_shield	include/obj.h	227;"	d
is_shirt	include/obj.h	237;"	d
is_silent	include/mondata.h	69;"	d
is_solid	src/mkmaze.c	/^static boolean is_solid(int x, int y) {$/;"	f	file:
is_spear	include/obj.h	176;"	d
is_suit	include/obj.h	239;"	d
is_swallow_sym	src/pager.c	/^static boolean is_swallow_sym( int c) {$/;"	f	file:
is_swimmer	include/mondata.h	42;"	d
is_sword	include/obj.h	166;"	d
is_u	src/dbridge.c	264;"	d	file:
is_undead	include/mondata.h	91;"	d
is_undirected_spell	src/mcastu.c	/^static boolean is_undirected_spell(uint adtyp, int spellnum) {$/;"	f	file:
is_unicorn	include/mondata.h	149;"	d
is_unpoisonable_firearm_ammo	include/obj.h	197;"	d
is_vampire	include/mondata.h	93;"	d
is_wanderer	include/mondata.h	113;"	d
is_wc2_option	src/options.c	/^static boolean is_wc2_option(const char *optnam) {$/;"	f	file:
is_wc_option	src/options.c	/^static boolean is_wc_option(const char *optnam) {$/;"	f	file:
is_weptool	include/obj.h	205;"	d
is_were	include/mondata.h	92;"	d
is_whirly	include/mondata.h	61;"	d
is_wooden	include/mondata.h	75;"	d
is_worm_tail	src/display.c	323;"	d	file:
is_worm_tail	src/display.c	852;"	d	file:
is_worn	src/invent.c	/^bool is_worn(struct obj *otmp) {$/;"	f
is_worn_by_type	src/pickup.c	/^bool is_worn_by_type(struct obj *otmp) {$/;"	f
isbig	src/mkroom.c	/^static boolean isbig(struct mkroom *sroom) {$/;"	f	file:
isclearpath	src/trap.c	/^static boolean isclearpath(coord *cc, int distance, schar dx, schar dy) {$/;"	f	file:
isgd	include/monst.h	/^	bool isgd;	\/* is guard *\/$/;"	m	struct:monst
isgyp	include/monst.h	/^	bool isgyp;	\/* is a gypsy *\/$/;"	m	struct:monst
isize	include/global.h	/^typedef ssize_t isize;$/;"	t
iskeypad	sys/winnt/nh340key.c	51;"	d	file:
iskeypad	sys/winnt/nhdefkey.c	57;"	d	file:
iskeypad	sys/winnt/nhraykey.c	209;"	d	file:
isminion	include/monst.h	/^	bool isminion;	\/* is a minion *\/$/;"	m	struct:monst
isnumkeypad	sys/winnt/nhraykey.c	210;"	d	file:
isok	src/cmd.c	/^int isok(int x, int y) {$/;"	f
ispriest	include/monst.h	/^	bool ispriest;	\/* is a priest *\/$/;"	m	struct:monst
isqrt	src/spell.c	/^static int isqrt(int val) {$/;"	f	file:
isshk	include/monst.h	/^	bool isshk;	\/* is shopkeeper *\/$/;"	m	struct:monst
isspell	include/monst.h	/^	bool isspell;	\/* is a temporary spell being *\/$/;"	m	struct:monst
iswall	src/mkmaze.c	/^static boolean iswall(int x,int y) {$/;"	f	file:
iswall_or_stone	src/mkmaze.c	/^static boolean iswall_or_stone(int x,int y) {$/;"	f	file:
iswiz	include/monst.h	/^	bool iswiz;	\/* is the Wizard of Yendor *\/$/;"	m	struct:monst
isyou	src/explode.c	/^	boolean isyou;$/;"	m	struct:grenade_callback	file:
item	include/wintype.h	/^	anything item;		\/* identifier *\/$/;"	m	struct:__anon58
item	src/objnam.c	/^	int item;$/;"	m	struct:Jitem	file:
item_otyp	src/u_init.c	/^	short item_otyp, subs_otyp;$/;"	m	struct:inv_asub	file:
item_otyp	src/u_init.c	/^	short race_pm, item_otyp, subs_otyp;$/;"	m	struct:inv_sub	file:
itimeout	src/potion.c	/^static long itimeout(long val) {$/;"	f	file:
itimeout_incr	src/potion.c	/^static long itimeout_incr(long old, int incr) {$/;"	f	file:
itp	include/mkroom.h	/^	struct itp {$/;"	s	struct:shclass
its_dead	src/apply.c	/^static boolean its_dead(int rx, int ry, int *resp) {$/;"	f	file:
itsstuck	src/monmove.c	/^boolean itsstuck(struct monst *mtmp) {$/;"	f
itype	include/mkroom.h	/^		int itype;		\/* item type: if >=0 a class, if < 0 a specific item *\/$/;"	m	struct:shclass::itp
join	src/mklev.c	/^static void join(int a, int b, boolean nxcor) {$/;"	f	file:
join_map	src/mkmap.c	/^static void join_map(schar bg_typ, schar fg_typ) {$/;"	f	file:
joined	include/sp_lev.h	/^	boolean	smoothed, joined;$/;"	m	struct:__anon31
joust	src/uhitm.c	/^	static int	joust(struct monst *target,	struct obj *weapon)	{$/;"	f	file:
juiblex_level	include/decl.h	88;"	d
jumble_pack	src/invent.c	/^int jumble_pack(void) {$/;"	f
jump	src/apply.c	/^int jump( int magic \/* 0=Physical, otherwise skill level *\/) {$/;"	f
junk	sys/winnt/nttty.c	/^volatile int junk;	\/* prevent optimizer from eliminating loop below *\/$/;"	v
kbhit	include/winprocs.h	126;"	d
kebabable	src/weapon.c	/^static const char kebabable[] = {$/;"	v	file:
keep_saddle_with_steedcorpse	src/trap.c	/^static boolean keep_saddle_with_steedcorpse(unsigned steed_mid, struct obj *objchn, struct obj *saddle) {$/;"	f	file:
keep_savefile	include/flag.h	/^	bool  keep_savefile; \/* Keep Old Save files*\/$/;"	m	struct:flag
keepdogs	src/dog.c	/^void keepdogs(boolean pets_only \/* true for ascension or final escape *\/) {$/;"	f
key	include/func_tab.h	/^	char key;       \/\/ ascii code for key$/;"	m	struct:binding_list_tab
key	src/lock.c	/^	int key;			\/* Key being used (doors only) *\/$/;"	m	struct:xlock_s	file:
key2txt	src/cmd.c	/^char *key2txt(char c, char* txt \/* sufficiently long buffer *\/) {$/;"	f
key_overrides	sys/winnt/nttty.c	/^unsigned char key_overrides[MAX_OVERRIDES];$/;"	v
key_tab	include/func_tab.h	/^struct key_tab {$/;"	s
keypad	sys/winnt/nh340key.c	/^} keypad[PADKEYS] = {$/;"	v	typeref:struct:pad	file:
keypad	sys/winnt/nhdefkey.c	/^} keypad[PADKEYS] = {$/;"	v	typeref:struct:pad	file:
keypad	sys/winnt/nhraykey.c	/^} keypad[PADKEYS] = {$/;"	v	typeref:struct:pad	file:
kick_monster	src/dokick.c	/^static void kick_monster(xchar x, xchar y) {$/;"	f	file:
kick_object	src/dokick.c	/^static int kick_object(xchar x, xchar y) {$/;"	f	file:
kick_passes_thru	src/dokick.c	/^static const char kick_passes_thru[] = "kick passes harmlessly through";$/;"	v	file:
kick_steed	src/steed.c	/^kick_steed (void) {$/;"	f
kickdmg	src/dokick.c	/^static void kickdmg(struct monst *mon, boolean clumsy) {$/;"	f	file:
kickobj	src/dokick.c	/^static struct obj *kickobj;$/;"	v	typeref:struct:obj	file:
kickstr	src/dokick.c	/^static char *kickstr(char *buf) {$/;"	f	file:
kill_char	sys/share/pctty.c	/^char erase_char, kill_char;$/;"	v
kill_char	sys/share/unixtty.c	/^	char erase_char, intr_char, kill_char;$/;"	v
kill_char	sys/winnt/nttty.c	/^char erase_char,kill_char;$/;"	v
kill_egg	src/timeout.c	/^void kill_egg(struct obj *egg) {$/;"	f
kill_eggs	src/mon.c	/^static void kill_eggs(struct obj *obj_list) {$/;"	f	file:
kill_genocided_monsters	src/mon.c	/^void kill_genocided_monsters() {$/;"	f
kill_hilite	win/tty/termcap.c	/^static void kill_hilite(void) {$/;"	f	file:
kill_sym	sys/share/unixtty.c	101;"	d	file:
kill_sym	sys/share/unixtty.c	42;"	d	file:
killed	src/mon.c	/^void killed (struct monst *mtmp) {$/;"	f
killed_by_prefix	src/topten.c	/^const char * const killed_by_prefix[] = {$/;"	v
killed_by_u	include/edog.h	/^	bool killed_by_u;	\/* you attempted to kill him *\/$/;"	m	struct:edog
killed_medusa	include/decl.h	/^	bool killed_medusa;   \/* You defeated Medusa. *\/$/;"	m	struct:u_achieve
killed_nemesis	include/quest.h	/^	bool killed_nemesis;	\/* set when the nemesis is killed *\/$/;"	m	struct:q_score
killer	include/you.h	/^	long	killer;		\/* killed a monster yourself *\/$/;"	m	struct:u_conduct
killer	src/decl.c	/^const char *killer = 0;$/;"	v
killer_buf	src/decl.c	/^char killer_buf[BUFSZ] = DUMMY;$/;"	v
killer_cxname	src/objnam.c	/^char * killer_cxname( struct obj *obj, boolean force_singular) {$/;"	f
killer_format	src/decl.c	/^int killer_format = 0;$/;"	v
killer_xname	src/objnam.c	/^char * killer_xname (struct obj *obj) {$/;"	f
kind	include/timeout.h	/^	short kind;			\/* kind of use *\/$/;"	m	struct:fe
kind_name	src/timeout.c	/^static const char *kind_name(short kind) {$/;"	f	file:
kits	src/tech.c	/^static const char kits[] = { TOOL_CLASS, 0 };$/;"	v	file:
kni_abil	src/attrib.c	/^kni_abil[] = { {	 7, &(HFast), "quick", "slow" },$/;"	v	typeref:struct:innate	file:
kni_tech	src/tech.c	/^kni_tech[] = { {   1, T_TURN_UNDEAD, 1},$/;"	v	typeref:struct:	file:
known	include/obj.h	/^	bool known;	\/* exact nature known *\/$/;"	m	struct:obj
known	src/read.c	/^boolean	known;$/;"	v
known_hitum	src/uhitm.c	/^static boolean known_hitum(struct monst *mon, int mattack, int *mhit, struct attack *uattk) {$/;"	f	file:
knowninvisible	include/display.h	113;"	d
knows_class	src/u_init.c	/^static void knows_class(char sym) {$/;"	f	file:
knows_object	src/u_init.c	/^static void knows_object(int obj) {$/;"	f	file:
knox_level	include/decl.h	110;"	d
kops_gone	src/shk.c	/^static void kops_gone(boolean silent) {$/;"	f	file:
l_monnam	src/do_name.c	/^char *l_monnam(struct monst *mtmp) {$/;"	f
l_o_range	src/objnam.c	/^	int  f_o_range, l_o_range;$/;"	m	struct:o_range	file:
lad	include/sp_lev.h	/^} lad;$/;"	t	typeref:struct:__anon41
ladder	include/rm.h	450;"	d
lads	include/sp_lev.h	/^	lad **lads;$/;"	m	struct:__anon52
lamplit	include/obj.h	/^	bool lamplit;	\/* a light-source -- can be lit *\/$/;"	m	struct:obj
lan_mail	include/flag.h	/^	bool lan_mail;	\/* mail is initialized *\/$/;"	m	struct:instance_flags
lan_mail_check	sys/share/nhlan.c	/^bool lan_mail_check(void) {$/;"	f
lan_mail_fetched	include/flag.h	/^	bool lan_mail_fetched; \/* mail is awaiting display *\/$/;"	m	struct:instance_flags
lan_mail_finish	sys/share/nhlan.c	/^void lan_mail_finish(void) {$/;"	f
lan_mail_init	sys/share/nhlan.c	/^void lan_mail_init(void) {$/;"	f
lan_mail_read	sys/share/nhlan.c	/^void lan_mail_read(struct obj *otmp) {$/;"	f
lan_mail_struct	include/nhlan.h	/^struct lan_mail_struct {$/;"	s
lan_mail_terminate	sys/share/nhlan.c	/^void lan_mail_terminate(void) {$/;"	f
lan_username	sys/share/nhlan.c	/^char *lan_username(void) {$/;"	f
landing_spot	src/steed.c	/^static boolean landing_spot(coord *spot, int reason, int forceit) {$/;"	f	file:
lantern_message	src/timeout.c	/^static void lantern_message(struct obj *obj) {$/;"	f	file:
last	src/weapon.c	/^	short first, last;$/;"	m	struct:skill_range	file:
last_displayed_time	include/decl.h	/^	time_t last_displayed_time; \/* Last time displayed on the status line *\/$/;"	m	struct:realtime_data
last_hit	src/hack.c	/^int last_hit = 0;$/;"	v
last_mesg	win/curses/cursmesg.c	/^static nhprev_mesg *last_mesg = NULL;$/;"	v	file:
last_multi	src/cmd.c	/^static int last_multi;$/;"	v	file:
last_str_turn	include/you.h	/^	int last_str_turn;	\/* 0: none, 1: half turn, 2: full turn *\/$/;"	m	struct:you
lastdigtime	include/decl.h	/^	long lastdigtime;$/;"	m	struct:dig_info
lastinvnr	src/invent.c	/^static int lastinvnr = 51;	\/* 0 ... 51 (never saved&restored) *\/$/;"	v	file:
laststattime	src/mail.c	/^static long laststattime;$/;"	v	file:
lastwin	include/wintty.h	/^	winid lastwin;		\/* last window used for I\/O *\/$/;"	m	struct:DisplayDesc
launch	include/trap.h	/^	coord launch;$/;"	m	struct:trap
launch2	include/trap.h	32;"	d
launch_obj	src/trap.c	/^int launch_obj (short otyp, int x1, int y1, int x2, int y2, int style) {$/;"	f
launch_otyp	include/trap.h	31;"	d
lava_effects	src/trap.c	/^	boolean lava_effects(void) {$/;"	f
lava_killer	src/trap.c	/^	static const char lava_killer[] = "molten lava";$/;"	v	file:
lawful_god_gives_angel	src/pray.c	/^static void lawful_god_gives_angel (void) {$/;"	f	file:
lawful_minion	src/minion.c	/^int lawful_minion(int difficulty) {$/;"	f
lawful_quest_level	include/decl.h	114;"	d
lays_eggs	include/mondata.h	77;"	d
lcase	src/hacklib.c	/^char *lcase(char *s) {$/;"	f
lchoice	src/dungeon.c	/^struct lchoice {$/;"	s	file:
ldrname	src/questpgr.c	/^const char *ldrname(void) {$/;"	f
ldrnum	include/you.h	/^	      ldrnum,		\/* PM_ of quest leader (questpgr.c) *\/$/;"	m	struct:Role
leader_is_dead	include/quest.h	/^	bool leader_is_dead;$/;"	m	struct:q_score
leader_m_id	include/quest.h	/^	unsigned leader_m_id;$/;"	m	struct:q_score
leader_speaks	src/quest.c	/^leader_speaks (struct monst *mtmp) {$/;"	f
learn	src/spell.c	/^static int learn() {$/;"	f	file:
learn_egg_type	src/timeout.c	/^void learn_egg_type (int mnum) {$/;"	f
learntech	src/tech.c	/^void learntech (short tech, long mask, int tlevel) {$/;"	f
leash_check	src/apply.c	/^struct leash_check {$/;"	s	file:
leashmon	include/obj.h	105;"	d
leave_f	include/region.h	/^	short leave_f;			\/* Function to call when the player leaves *\/$/;"	m	struct:__anon29
leave_msg	include/region.h	/^	const char* leave_msg;		\/* Message when leaving *\/$/;"	m	struct:__anon29
ledger_no	src/dungeon.c	/^xchar ledger_no(d_level *lev) {$/;"	f
ledger_start	include/dungeon.h	/^	int	ledger_start,	\/* the starting depth in "real" terms *\/$/;"	m	struct:dungeon
ledger_to_dlev	src/dungeon.c	/^xchar ledger_to_dlev(xchar ledgerno) {$/;"	f
ledger_to_dnum	src/dungeon.c	/^xchar ledger_to_dnum(xchar ledgerno) {$/;"	f
left_ptrs	src/vision.c	/^static char  left_ptrs[ROWNO][COLNO];		\/* LOS algorithm helpers *\/$/;"	v	file:
left_side	src/vision.c	/^left_side(row, left_mark, right, limits)$/;"	f	file:
legacy	include/flag.h	/^	bool  legacy;	\/* print game entry "story" *\/$/;"	m	struct:flag
len	include/sp_lev.h	/^	int   len;$/;"	m	union:str_or_len
lesshungry	src/eat.c	/^void lesshungry(int num) {$/;"	f
let_to_name	src/invent.c	/^char *let_to_name(char let, boolean unpaid) {$/;"	f
lethe	include/rm.h	/^	bool lethe;			\/* All water on level causes amnesia *\/$/;"	m	struct:levelflags
letter	src/hacklib.c	/^boolean letter(char c) {$/;"	f
lev	include/dgn_file.h	/^	struct	couple	lev;$/;"	m	struct:tmpbranch	typeref:struct:tmpbranch::couple
lev	include/dgn_file.h	/^	struct	couple	lev;$/;"	m	struct:tmpdungeon	typeref:struct:tmpdungeon::couple
lev	include/dgn_file.h	/^	struct	couple	lev;$/;"	m	struct:tmplevel	typeref:struct:tmplevel::couple
lev	src/dungeon.c	/^	schar lev[MAXLINFO];$/;"	m	struct:lchoice	file:
lev_by_name	src/dungeon.c	/^schar lev_by_name(const char *nam) {$/;"	f
lev_flags	build-linux/src/lev_yacc.c	/^static int lev_flags = 0;$/;"	v	file:
lev_init	include/sp_lev.h	/^} lev_init;$/;"	t	typeref:struct:__anon31
lev_message	src/sp_lev.c	/^char *lev_message = 0;$/;"	v
lev_name	src/dungeon.c	/^	const char *lev_name;$/;"	m	struct:level_map	file:
lev_region	include/sp_lev.h	/^} lev_region;$/;"	t	typeref:struct:__anon44
lev_spec	src/dungeon.c	/^	d_level *lev_spec;$/;"	m	struct:level_map	file:
level	include/decl.h	/^	d_level level;$/;"	m	struct:dig_info
level	src/decl.c	/^dlevel_t level;		\/* level map *\/$/;"	v
level_detects	src/detect.c	/^} level_detects[] = {$/;"	v	typeref:struct:__anon2	file:
level_difficulty	src/dungeon.c	/^xchar level_difficulty(void) {$/;"	f
level_distance	src/detect.c	/^const char *level_distance(d_level *where) {$/;"	f
level_ftrack	src/files.c	/^struct level_ftrack {$/;"	s	file:
level_info	src/decl.c	/^struct linfo level_info[MAXLINFO];$/;"	v	typeref:struct:linfo
level_map	src/dungeon.c	/^struct level_map {$/;"	s	file:
level_map	src/dungeon.c	/^} level_map[] = {$/;"	v	typeref:struct:level_map
level_range	src/dungeon.c	/^static int level_range(xchar dgn, int base, int rand, int chain, struct proto_dungeon *pd, int *adjusted_base) {$/;"	f	file:
level_tele	src/teleport.c	/^level_tele (void) {$/;"	f
level_tele_trap	src/teleport.c	/^level_tele_trap (struct trap *trap) {$/;"	f
levelflags	include/rm.h	/^struct levelflags {$/;"	s
levels	include/dgn_file.h	/^	        levels,$/;"	m	struct:tmpdungeon
levitate	src/mondata.c	/^static const char *levitate[4]	= { "float", "Float", "wobble", "Wobble" };$/;"	v	file:
levl	include/rm.h	513;"	d
levl_follower	src/mondata.c	/^boolean levl_follower(struct monst *mtmp) {$/;"	f
lftrack	src/files.c	/^} lftrack;$/;"	v	typeref:struct:level_ftrack
lgod	include/you.h	/^	const char *lgod, *ngod, *cgod; \/* god names (from pray.c) *\/$/;"	m	struct:Role
lib	include/dlb.h	/^	library *lib;	\/* pointer to library structure *\/$/;"	m	struct:__anon28
lib_dlb_cleanup	src/dlb.c	/^static void lib_dlb_cleanup(void) {$/;"	f	file:
lib_dlb_fclose	src/dlb.c	/^static int lib_dlb_fclose(dlb *dp) {$/;"	f	file:
lib_dlb_fgetc	src/dlb.c	/^static int lib_dlb_fgetc(dlb *dp) {$/;"	f	file:
lib_dlb_fgets	src/dlb.c	/^static char *lib_dlb_fgets(char *buf, int len, dlb *dp) {$/;"	f	file:
lib_dlb_fopen	src/dlb.c	/^static boolean lib_dlb_fopen(dlb *dp, const char *name, const char *mode) {$/;"	f	file:
lib_dlb_fread	src/dlb.c	/^static int lib_dlb_fread(char *buf, int size, int quan, dlb *dp) {$/;"	f	file:
lib_dlb_fseek	src/dlb.c	/^static int lib_dlb_fseek(dlb *dp, long pos, int whence) {$/;"	f	file:
lib_dlb_ftell	src/dlb.c	/^static long lib_dlb_ftell(dlb *dp) {$/;"	f	file:
lib_dlb_init	src/dlb.c	/^static boolean lib_dlb_init(void) {$/;"	f	file:
lib_dlb_procs	src/dlb.c	/^const dlb_procs_t lib_dlb_procs = {$/;"	v
libdir	include/dlb.h	/^} libdir;$/;"	t	typeref:struct:dlb_directory
library	include/dlb.h	/^} library;$/;"	t	typeref:struct:dlb_library
library_file	util/dlb_main.c	/^static const char *library_file = DLBFILE;$/;"	v	file:
lifesaved_monster	src/mon.c	/^static void lifesaved_monster(struct monst *mtmp) {$/;"	f	file:
lift_object	src/pickup.c	/^static int lift_object(struct obj *obj, struct obj *container, long *cnt_p, boolean telekinesis) {$/;"	f	file:
light_base	src/light.c	/^static light_source *light_base = 0;$/;"	v	file:
light_cocktail	src/apply.c	/^static void light_cocktail(struct obj *obj \/* obj is a potion of oil or a stick of dynamite *\/ ) {$/;"	f	file:
light_region	src/sp_lev.c	/^static void light_region(region  *tmpregion) {$/;"	f	file:
light_source	include/lev.h	/^} light_source;$/;"	t	typeref:struct:ls_t
lightsaber_deactivate	src/timeout.c	/^void lightsaber_deactivate(struct obj *obj, boolean timer_attached) {$/;"	f
likes_fire	include/mondata.h	190;"	d
likes_gems	include/mondata.h	139;"	d
likes_gold	include/mondata.h	138;"	d
likes_lava	include/mondata.h	183;"	d
likes_magic	include/mondata.h	142;"	d
likes_objs	include/mondata.h	140;"	d
line_num	win/curses/cursdial.c	/^    int line_num;               \/* Line number on page where entry begins *\/$/;"	m	struct:nhmi	file:
line_number	build-linux/src/dgn_lex.c	/^int line_number = 1;$/;"	v
line_number	build-linux/src/lev_lex.c	/^int line_number = 1, colon_line_number = 1;$/;"	v
lined_up	src/mthrowu.c	/^boolean lined_up(struct monst *mtmp) {$/;"	f
linedup	src/mthrowu.c	/^boolean linedup(xchar ax, xchar ay, xchar bx, xchar by) {$/;"	f
linfo	include/dungeon.h	/^struct linfo {$/;"	s
linux_flag_console	sys/share/unixtty.c	/^int linux_flag_console = 0;$/;"	v
linux_mapoff	sys/share/unixtty.c	/^void linux_mapoff(void) {$/;"	f
linux_mapon	sys/share/unixtty.c	/^void linux_mapon(void) {$/;"	f
list	include/lev.h	/^	void * list;$/;"	m	struct:container
list	src/end.c	/^	struct valuable_data *list;$/;"	m	struct:val_list	typeref:struct:val_list::valuable_data	file:
list_file	util/dlb_main.c	/^static const char *list_file = LIBLISTFILE;$/;"	v	file:
list_genocided	src/end.c	/^static void list_genocided(int defquery, boolean ask, boolean want_dump)$/;"	f	file:
list_vanquished	src/end.c	/^static boolean list_vanquished(char defquery, boolean ask)$/;"	f	file:
lit	include/rm.h	/^	bool lit;	\/* speed hack for lit rooms *\/$/;"	m	struct:rm
lit	include/sp_lev.h	/^	xchar   lit, walled;$/;"	m	struct:__anon31
lit_corridor	include/flag.h	/^	bool  lit_corridor;	\/* show a dark corr as lit if it is in sight *\/$/;"	m	struct:flag
literate	include/you.h	/^	long	literate;	\/* read something (other than BotD) *\/$/;"	m	struct:u_conduct
litroom	src/read.c	/^void litroom(boolean on, struct obj *obj) {$/;"	f
litter	src/ball.c	/^static void litter(void) {$/;"	f	file:
little_to_big	src/mondata.c	/^int little_to_big(int montype) {$/;"	f
llord	src/minion.c	/^int llord(void) {$/;"	f
lminion	src/minion.c	/^int lminion(void) {$/;"	f
load_common_data	src/sp_lev.c	/^static void load_common_data(dlb *fd, int typ) {$/;"	f	file:
load_keyboard_handler	sys/winnt/nttty.c	/^load_keyboard_handler()$/;"	f
load_maze	src/sp_lev.c	/^static boolean load_maze(dlb *fd) {$/;"	f	file:
load_one_engraving	src/sp_lev.c	/^static void load_one_engraving(dlb *fd, engraving *e) {$/;"	f	file:
load_one_monster	src/sp_lev.c	/^static void load_one_monster(dlb *fd, monster *m) {$/;"	f	file:
load_one_object	src/sp_lev.c	/^static void load_one_object(dlb *fd, object *o) {$/;"	f	file:
load_qtlist	src/questpgr.c	/^void load_qtlist(void) {$/;"	f
load_rooms	src/sp_lev.c	/^static boolean load_rooms(dlb *fd) {$/;"	f	file:
load_special	src/sp_lev.c	/^boolean load_special(const char *name) {$/;"	f
loadfruitchn	src/restore.c	/^static struct fruit * loadfruitchn(int fd) {$/;"	f	file:
loan	include/eshk.h	/^	long loan;		\/* shop-gold picked (part of debit) *\/$/;"	m	struct:eshk
locations	include/rm.h	/^	struct rm		locations[COLNO][ROWNO];$/;"	m	struct:__anon30	typeref:struct:__anon30::rm
locations	src/explode.c	/^	ExplodeLocation *locations;$/;"	m	struct:__anon9	file:
lock	src/files.c	/^char lock[PL_NSIZ+14] = "1lock"; \/* long enough for uid+name+.99 *\/$/;"	v
lock	src/files.c	/^char lock[PL_NSIZ+25];		\/* long enough for username+-+name+.99 *\/$/;"	v
lock	util/lev_main.c	/^char lock[ARBITRARY_SIZE];$/;"	v
lock	util/recover.c	/^static char lock[256];$/;"	v	file:
lock_action	src/lock.c	/^static const char *lock_action(void) {$/;"	f	file:
lock_file	src/files.c	/^boolean lock_file(const char *filename, int whichprefix, int retryct) {$/;"	f
lock_windows	src/windows.c	/^lock_windows (int flag) {$/;"	f
lockfd	src/files.c	/^static int lockfd;	\/\/ for lock_file() to pass to unlock_file()$/;"	v	file:
locknum	src/decl.c	/^int locknum = 0;		\/* max num of simultaneous users *\/$/;"	v
lockptr	src/files.c	/^static int lockptr;$/;"	v	file:
locomotion	src/mondata.c	/^locomotion (const struct permonst *ptr, const char *def) {$/;"	f
lofix	include/you.h	/^	xchar lofix, lornd;	\/* gained per level <  urole.xlev *\/$/;"	m	struct:RoleAdvance
look_here	src/invent.c	/^int look_here(int obj_cnt \/* obj_cnt > 0 implies that autopickup is in progess *\/, boolean picked_some) {$/;"	f
lookaround	src/hack.c	/^void lookaround(void) {$/;"	f
lookat	src/pager.c	/^static struct permonst * lookat( int x, int y, char *buf, char *monbuf) {$/;"	f	file:
lookup_id_mapping	src/restore.c	/^boolean lookup_id_mapping(uint gid, uint *nidp) {$/;"	f
loot_mon	src/pickup.c	/^int loot_mon(struct monst *mtmp, int *passed_info, boolean *prev_loot) {$/;"	f
lootabc	include/flag.h	/^	bool  lootabc;	\/* use "a\/b\/c" rather than "o\/i\/b" when looting *\/$/;"	m	struct:instance_flags
looted	include/rm.h	452;"	d
lornd	include/you.h	/^	xchar lofix, lornd;	\/* gained per level <  urole.xlev *\/$/;"	m	struct:RoleAdvance
lose_weapon_skill	src/weapon.c	/^void lose_weapon_skill ( int n	) {$/;"	f
losedogs	src/dog.c	/^void losedogs(void) {$/;"	f
losehp	src/hack.c	/^void losehp(int n, const char *knam, int k_format \/* WAC k_format is an int *\/) {$/;"	f
losespells	src/spell.c	/^void losespells (void) {$/;"	f
losestr	src/attrib.c	/^	const char *gainstr, *losestr;$/;"	m	struct:innate	file:
losestr	src/attrib.c	/^void losestr(int num) {$/;"	f
losexp	src/exper.c	/^void losexp(const char *drainer \/* cause of death, if drain should be fatal *\/, boolean force \/* Force the loss of an experience level *\/) {$/;"	f
lovemask	include/you.h	/^	      lovemask,		\/* bit mask of always peaceful *\/$/;"	m	struct:Race
lowc	src/hacklib.c	/^char lowc(char c) {$/;"	f
lregions	include/sp_lev.h	/^	lev_region **lregions;$/;"	m	struct:__anon52
lregions	src/sp_lev.c	/^lev_region *lregions = 0;$/;"	v
ls_t	include/lev.h	/^typedef struct ls_t {$/;"	s
lubricables	src/apply.c	/^static const char lubricables[] = { ALL_CLASSES, ALLOW_NONE, 0 };$/;"	v	file:
lusername	sys/share/nhlan.c	/^char lusername[MAX_LAN_USERNAME];$/;"	v
lusername_size	sys/share/nhlan.c	/^int lusername_size = MAX_LAN_USERNAME;$/;"	v
lx	include/dungeon.h	/^	xchar	lx, ly;		\/* "lower" left corner (near [0,0]) *\/$/;"	m	struct:dest_area
lx	include/mkroom.h	/^	schar lx,hx,ly,hy;	\/* usually xchar, but hx may be -1 *\/$/;"	m	struct:mkroom
lx	include/rect.h	/^	xchar lx, ly;$/;"	m	struct:nhrect
ly	include/dungeon.h	/^	xchar	lx, ly;		\/* "lower" left corner (near [0,0]) *\/$/;"	m	struct:dest_area
ly	include/mkroom.h	/^	schar lx,hx,ly,hy;	\/* usually xchar, but hx may be -1 *\/$/;"	m	struct:mkroom
ly	include/rect.h	/^	xchar lx, ly;$/;"	m	struct:nhrect
lyc_abil	src/attrib.c	/^lyc_abil[] = { \/*{   1, &(HPoison_resistance), "", "" },*\/$/;"	v	typeref:struct:innate	file:
lyc_tech	src/tech.c	/^lyc_tech[] = { {   1, T_EVISCERATE, 1},$/;"	v	typeref:struct:	file:
m	include/you.h	/^	const char	*m;	\/* name when character is male *\/$/;"	m	struct:RoleName
m	src/muse.c	/^} m;$/;"	v	typeref:struct:musable	file:
m_ap_type	include/monst.h	/^	uchar	 m_ap_type;	\/* what mappearance is describing: *\/$/;"	m	struct:monst
m_arrival	src/monmove.c	/^static int m_arrival(struct monst *mon) {$/;"	f	file:
m_at	include/rm.h	535;"	d
m_buried_at	include/rm.h	537;"	d
m_cansee	include/vision.h	49;"	d
m_canseeu	include/vision.h	51;"	d
m_carrying	src/mthrowu.c	/^struct obj * m_carrying (struct monst *mtmp, int type) {$/;"	f
m_char	include/func_tab.h	/^	char m_char;$/;"	m	struct:menu_tab
m_detach	src/mon.c	/^static void m_detach(struct monst *mtmp, struct permonst *mptr) {$/;"	f	file:
m_dowear	src/worn.c	/^void m_dowear(struct monst *mon, boolean creation) {$/;"	f
m_dowear_type	src/worn.c	/^static void m_dowear_type(struct monst *mon, long flag, boolean creation, boolean racialexception) {$/;"	f	file:
m_en	include/monst.h	/^	int m_en, m_enmax;	\/* Power level (for spells, etc.) *\/$/;"	m	struct:monst
m_enmax	include/monst.h	/^	int m_en, m_enmax;	\/* Power level (for spells, etc.) *\/$/;"	m	struct:monst
m_flee	src/muse.c	554;"	d	file:
m_flee	src/muse.c	960;"	d	file:
m_funct	include/func_tab.h	/^	int (*m_funct)(void);$/;"	m	struct:menu_tab
m_header	include/func_tab.h	/^	const char *m_header;$/;"	m	struct:menu_list
m_id	include/monst.h	/^	unsigned m_id;$/;"	m	struct:monst
m_in_out_region	src/region.c	/^boolean m_in_out_region(struct monst *mon, xchar x, xchar y) {$/;"	f
m_initgrp	src/makemon.c	/^static void m_initgrp(struct monst *mtmp, int x, int y, int n) {$/;"	f	file:
m_initinv	src/makemon.c	/^static void m_initinv(struct monst *mtmp) {$/;"	f	file:
m_initlgrp	src/makemon.c	32;"	d	file:
m_initsgrp	src/makemon.c	31;"	d	file:
m_initthrow	src/makemon.c	/^static void m_initthrow(struct monst *mtmp, int otyp, int oquan) {$/;"	f	file:
m_initvlgrp	src/makemon.c	33;"	d	file:
m_initweap	src/makemon.c	/^static void m_initweap(struct monst *mtmp) {$/;"	f	file:
m_initweap_normal	src/makemon.c	/^static void m_initweap_normal(struct monst *mtmp) {$/;"	f	file:
m_item	include/func_tab.h	/^	const char *m_item;$/;"	m	struct:menu_tab
m_lev	include/monst.h	/^	uchar m_lev;		\/* adjusted difficulty level of monster *\/$/;"	m	struct:monst
m_lose_armor	src/worn.c	/^static void m_lose_armor(struct monst *mon, struct obj *obj) {$/;"	f	file:
m_menu	include/func_tab.h	/^	const struct menu_tab *m_menu;$/;"	m	struct:menu_list	typeref:struct:menu_list::menu_tab
m_monnam	src/do_name.c	/^char *m_monnam(struct monst *mtmp) {$/;"	f
m_move	src/monmove.c	/^int m_move (struct monst *mtmp, int after) {$/;"	f
m_move	win/tty/termcap.c	608;"	d	file:
m_parent	include/func_tab.h	/^	const char *m_parent;$/;"	m	struct:menu_list
m_respond	src/mon.c	/^void m_respond (struct monst *mtmp) {$/;"	f
m_shot	src/decl.c	/^struct multishot m_shot = { 0, 0, STRANGE_OBJECT, false };$/;"	v	typeref:struct:multishot
m_slips_free	src/uhitm.c	/^	static boolean m_slips_free(struct monst *mdef, struct attack *mattk) {$/;"	f	file:
m_text	include/func_tab.h	/^	const char *m_text;$/;"	m	struct:menu_tab
m_throw	src/mthrowu.c	/^m_throw ($/;"	f
m_to_e	src/dbridge.c	/^static void m_to_e(struct monst *mtmp, int x, int y, struct entity *etmp) {$/;"	f	file:
m_unleash	src/apply.c	/^void m_unleash(struct monst *mtmp, boolean feedback) { \/* mtmp is about to die, or become untame *\/$/;"	f
m_useup	src/mthrowu.c	/^void m_useup (struct monst *mon, struct obj *obj) {$/;"	f
m_using	src/muse.c	/^boolean m_using = false;$/;"	v
macurr	include/you.h	/^	struct attribs	macurr,		\/* for monster attribs *\/$/;"	m	struct:you	typeref:struct:you::attribs
made_amulet	include/flag.h	/^	bool  made_amulet;$/;"	m	struct:flag
made_branch	src/mklev.c	/^static boolean made_branch;	\/* used only during level creation *\/$/;"	v	file:
made_of_rock	include/mondata.h	207;"	d
madeby_u	include/trap.h	/^	bool madeby_u; \/* So monsters may take offence when you trap$/;"	m	struct:trap
mage_transform	src/polyself.c	/^mage_transform() {$/;"	f	file:
magic_map_background	src/display.c	/^void magic_map_background(xchar x, xchar y, int show) {$/;"	f
magic_negation	src/mhitu.c	/^int magic_negation(struct monst *mon) {$/;"	f
magical	src/monmove.c	/^static const char magical[] = {$/;"	v	file:
mail_by_window	sys/share/nhlan.c	/^static void mail_by_window(struct lan_mail_struct *msg) {$/;"	f	file:
mail_check	sys/winnt/mapimail.c	/^boolean mail_check()$/;"	f
mail_fetch	sys/winnt/mapimail.c	/^boolean mail_fetch(msg)$/;"	f
mail_fetched	sys/winnt/mapimail.c	/^long mail_fetched = 0;$/;"	v
mail_finish	sys/winnt/mapimail.c	/^void mail_finish()$/;"	f
mail_info	include/mail.h	/^struct mail_info {$/;"	s
mail_init	sys/winnt/mapimail.c	/^void mail_init(uname)$/;"	f
mail_text	src/mail.c	/^static const char *mail_text[] = {$/;"	v	file:
mailbox	src/mail.c	/^static char *mailbox = NULL;$/;"	v	file:
mailmessage	sys/share/nhlan.c	/^struct lan_mail_struct mailmessage;$/;"	v	typeref:struct:lan_mail_struct
mailpasses	sys/winnt/mapimail.c	/^long mailpasses;        \/* counts the FindNext calls issued to MAPI *\/$/;"	v
mailthread	sys/winnt/mapimail.c	/^HANDLE mailthread = 0;          \/* handle for the mail-thread       *\/$/;"	v
mailthread_continue	sys/winnt/mapimail.c	/^long mailthread_continue = 0;   \/* nh -> mapi thread: shut down!    *\/$/;"	v
mailthread_stopping	sys/winnt/mapimail.c	/^long mailthread_stopping = 0;   \/* mapi -> nh thread: MAPI is ill!  *\/$/;"	v
main	src/music.c	/^main (int argc, char *argv[]) {$/;"	f
main	sys/share/pcmain.c	/^int main(int argc, char **argv) {$/;"	f
main	sys/share/uudecode.c	/^int main(int argc, char **argv) {$/;"	f
main	sys/unix/unixmain.c	/^int main(int argc, char **argv) {$/;"	f
main	util/dgn_main.c	/^int main(int argc, char **argv) {$/;"	f
main	util/dlb_main.c	/^main(argc, argv)$/;"	f
main	util/lev_main.c	/^int main(int argc, char **argv) {$/;"	f
main	util/recover.c	/^main(argc, argv)$/;"	f
main_menu	src/cmd.c	/^static const struct menu_tab main_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
main_menustruct	src/cmd.c	/^static struct menu_list main_menustruct[] = {$/;"	v	typeref:struct:menu_list	file:
major_oracle	include/you.h	/^	bool major_oracle;	\/*  "  expensive oracle *\/$/;"	m	struct:u_event
make_angry_shk	src/shk.c	/^void make_angry_shk(struct monst *shkp, xchar ox, xchar oy) {$/;"	f
make_blinded	src/potion.c	/^void make_blinded(long xtime, boolean talk) {$/;"	f
make_confused	src/potion.c	/^void make_confused(long xtime, boolean talk) {$/;"	f
make_corpse	src/mon.c	/^static struct obj * make_corpse(struct monst *mtmp) {$/;"	f	file:
make_engr_at	src/engrave.c	/^void make_engr_at(int x, int y, const char *s, long e_time, xchar e_type) {$/;"	f
make_familiar	src/dog.c	/^struct monst *make_familiar(struct obj *otmp, xchar x, xchar y, boolean quietly) {$/;"	f
make_grave	src/engrave.c	/^void make_grave(int x, int y, const char *str) {$/;"	f
make_hallucinated	src/potion.c	/^boolean make_hallucinated(long xtime, boolean talk, long mask) {$/;"	f
make_happy_shk	src/shk.c	/^void make_happy_shk(struct monst *shkp, boolean silentkops) {$/;"	f
make_helper	src/dog.c	/^struct monst *make_helper(int mnum, xchar x, xchar y) {$/;"	f
make_lockname	src/files.c	/^static char *make_lockname(const char *filename, char *lockname) {$/;"	f	file:
make_niches	src/mklev.c	/^static void make_niches(void) {$/;"	f	file:
make_pet_minion	src/dog.c	/^int make_pet_minion(int mnum, aligntyp alignment) {$/;"	f
make_sick	src/potion.c	/^void make_sick(long xtime, const char *cause, boolean talk, int type) {$/;"	f
make_stunned	src/potion.c	/^void make_stunned(long xtime, boolean talk) {$/;"	f
make_vomiting	src/potion.c	/^void make_vomiting(long xtime, boolean talk) {$/;"	f
makecorridors	src/mklev.c	/^void makecorridors(void) {$/;"	f
makedog	src/dog.c	/^struct monst *makedog(void) {$/;"	f
makeknown	include/hack.h	276;"	d
makekops	src/shk.c	/^static void makekops(coord *mm) {$/;"	f	file:
makelevel	src/mklev.c	/^static void makelevel(void) {$/;"	f	file:
makemaz	src/mkmaze.c	/^void makemaz(const char *s) {$/;"	f
makemenu	src/cmd.c	/^static int makemenu(const char *menuname, struct menu_list menu_struct[]) {$/;"	f	file:
makemon	src/makemon.c	/^struct monst *makemon(struct permonst *ptr, int x, int y, int mmflags) {$/;"	f
makeniche	src/mklev.c	/^static void makeniche(int trap_type) {$/;"	f	file:
makeplural	src/objnam.c	/^char * makeplural (const char *oldstr) {$/;"	f
makerogueghost	src/extralev.c	/^void makerogueghost(void) {$/;"	f
makeroguerooms	src/extralev.c	/^void makeroguerooms(void) {$/;"	f
makerooms	src/mklev.c	/^static void makerooms(void) {$/;"	f	file:
makesingular	src/objnam.c	/^makesingular (const char *oldstr) {$/;"	f
maketrap	src/trap.c	/^maketrap (int x, int y, int typ) {$/;"	f
makevtele	src/mklev.c	/^static void makevtele(void) {$/;"	f	file:
makewish	src/zap.c	/^void makewish() {$/;"	f
malenum	include/you.h	/^	short malenum,		\/* PM_ as a male monster *\/$/;"	m	struct:Race
malenum	include/you.h	/^	short malenum,		\/* index (PM_) as a male (botl.c) *\/$/;"	m	struct:Role
malign	include/monst.h	/^	aligntyp malign;	\/* alignment of this monster, relative to the$/;"	m	struct:monst
maligntyp	include/permonst.h	/^	aligntyp	maligntyp;		\/* basic monster alignment *\/$/;"	m	struct:permonst
mamax	include/you.h	/^		        mamax;		\/* for monster attribs *\/$/;"	m	struct:you	typeref:struct:you::
map	build-linux/include/lev_comp.h	/^	char*	map;$/;"	m	union:YYSTYPE
map	build-linux/src/lev_lex.c	/^static char map[4096];$/;"	v	file:
map	build-linux/src/lev_yacc.c	/^	char*	map;$/;"	m	union:YYSTYPE	file:
map	include/sp_lev.h	/^	char **map;$/;"	m	struct:__anon52
map	src/restore.c	/^	} map[N_PER_BUCKET];$/;"	m	struct:bucket	typeref:struct:bucket::__anon18	file:
map	win/curses/curswins.c	/^static nethack_char map[ROWNO][COLNO];  \/* Map window contents *\/$/;"	v	file:
map_background	src/display.c	/^void map_background(xchar x, xchar y, int show) {$/;"	f
map_clipped	win/curses/curswins.c	/^static bool map_clipped;     \/* Map window smaller than 80x21 *\/$/;"	v	file:
map_cnt	build-linux/src/lev_lex.c	/^static int map_cnt = 0;$/;"	v	file:
map_invisible	src/display.c	/^void map_invisible(xchar x, xchar y) {$/;"	f
map_list	include/func_tab.h	/^	char * map_list;$/;"	m	struct:key_tab
map_location	src/display.c	/^void map_location (int x, int y, int show) {$/;"	f
map_menu_cmd	src/options.c	/^char map_menu_cmd (char ch) {$/;"	f
map_object	src/display.c	/^void map_object (struct obj *obj, int show) {$/;"	f
map_subkeyvalue	sys/winnt/nttty.c	/^map_subkeyvalue(op)$/;"	f
map_trap	src/display.c	/^void map_trap (struct trap *trap, int show) {$/;"	f
mapglyph	src/mapglyph.c	/^void mapglyph(int glyph, glyph_t *ochar, int *ocolor, unsigned *ospecial, int x, int y) {$/;"	f
mapid__add_winid	win/proxy/mapid.c	/^static int mapid__add_winid(id)$/;"	f	file:
mapid__no_windows	win/proxy/mapid.c	/^static int mapid__no_windows;$/;"	v	file:
mapid__window	win/proxy/mapid.c	/^struct mapid__window {$/;"	s	file:
mapid__windows	win/proxy/mapid.c	/^static struct mapid__window *mapid__windows;$/;"	v	typeref:struct:mapid__window	file:
mapid_del_identifiers	win/proxy/mapid.c	/^void mapid_del_identifiers(id)$/;"	f
mapid_del_winid	win/proxy/mapid.c	/^void mapid_del_winid(id)$/;"	f
mapid_map_identifier	win/proxy/mapid.c	/^int mapid_map_identifier(id, identifier)$/;"	f
mapid_unmap_identifier	win/proxy/mapid.c	/^void mapid_unmap_identifier(id, mapping, identifier)$/;"	f
maploc	src/cmd.c	/^static struct rm *maploc;$/;"	v	typeref:struct:rm	file:
maploc	src/dokick.c	/^static struct rm *maploc;$/;"	v	typeref:struct:rm	file:
mappearance	include/monst.h	/^	unsigned mappearance;	\/* for undetected mimics and the wiz *\/$/;"	m	struct:monst
mapped_menu_cmds	src/options.c	/^char mapped_menu_cmds[MAX_MENU_MAPPED_CMDS+1];	\/* exported *\/$/;"	v
mapped_menu_op	src/options.c	/^static char mapped_menu_op[MAX_MENU_MAPPED_CMDS+1];$/;"	v	file:
mapwin	include/wincurs.h	/^WINDOW *mapwin, *statuswin, *messagewin;    \/* Main windows *\/$/;"	v
mark	include/dlb.h	/^	long mark;		\/* current file marker *\/$/;"	m	struct:__anon28
mark_synch	include/winprocs.h	99;"	d
martial	src/dokick.c	9;"	d	file:
martial_bonus	include/skills.h	122;"	d
martial_dmg	src/uhitm.c	/^int martial_dmg (void) {$/;"	f
mask	include/sp_lev.h	/^	xchar wall, pos, secret, mask;$/;"	m	struct:__anon33
mask	include/sp_lev.h	/^	xchar x, y, mask;$/;"	m	struct:__anon32
match	include/color.h	/^	struct re_pattern_buffer match;$/;"	m	struct:menucoloring	typeref:struct:menucoloring::re_pattern_buffer
match_optname	src/options.c	/^boolean match_optname(const char *user_string, const char *opt_name, int min_length, boolean val_allowed) {$/;"	f
match_varname	src/files.c	1092;"	d	file:
materialnm	src/decl.c	/^const char *materialnm[] = {$/;"	v
mattackm	src/mhitm.c	/^int mattackm(struct monst *magr, struct monst *mdef) {$/;"	f
mattacku	src/mhitu.c	/^int mattacku(struct monst *mtmp) {$/;"	f
mattk	include/permonst.h	/^	struct	attack	mattk[NATTK];		\/* attacks matrix *\/$/;"	m	struct:permonst	typeref:struct:permonst::attack
mavenge	include/monst.h	/^	bool mavenge;	\/* did something to deserve retaliation *\/$/;"	m	struct:monst
max	include/hack.h	266;"	d
max	sys/winnt/win32api.h	13;"	d
maxAlign	src/role.c	/^const usize maxAlign = sizeof aligns\/sizeof aligns[0];$/;"	v
maxGender	src/role.c	/^const usize maxGender = sizeof genders\/sizeof genders[0];$/;"	v
max_capacity	src/hack.c	/^int max_capacity(void) {$/;"	f
max_filename	sys/winnt/winnt.c	/^max_filename()$/;"	f	file:
max_messages	win/curses/cursmesg.c	/^static int max_messages;$/;"	v	file:
max_mon_load	src/mon.c	/^int max_mon_load (struct monst *mtmp) {$/;"	f
max_monst	include/region.h	/^	short max_monst;		\/* Maximum number of monsters that can be$/;"	m	struct:__anon29
max_passive_dmg	src/mondata.c	/^int max_passive_dmg (struct monst *mdef, struct monst *magr) {$/;"	f
max_rank_sz	src/botl.c	/^void max_rank_sz(void) {$/;"	f
max_regions	src/region.c	/^static int max_regions = 0;$/;"	v	file:
max_rx	src/mkmap.c	/^int min_rx, max_rx, min_ry, max_ry; \/* rectangle bounds for regions *\/$/;"	v
max_ry	src/mkmap.c	/^int min_rx, max_rx, min_ry, max_ry; \/* rectangle bounds for regions *\/$/;"	v
max_skill	include/skills.h	/^	xchar max_skill;$/;"	m	struct:skills
max_x_map	build-linux/src/lev_yacc.c	/^uint max_x_map, max_y_map;$/;"	v
max_y_map	build-linux/src/lev_yacc.c	/^uint max_x_map, max_y_map;$/;"	v
maxcol	include/wintty.h	/^	short maxrow, maxcol;	\/* the maximum size used -- for MENU wins *\/$/;"	m	struct:WinDesc
maxhp	src/topten.c	/^	int maxlvl, hp, maxhp, deaths;$/;"	m	struct:toptenentry	file:
maxledgerno	src/dungeon.c	/^xchar maxledgerno(void) {$/;"	f
maxlvl	src/topten.c	/^	int maxlvl, hp, maxhp, deaths;$/;"	m	struct:toptenentry	file:
maxrow	include/wintty.h	/^	short maxrow, maxcol;	\/* the maximum size used -- for MENU wins *\/$/;"	m	struct:WinDesc
maxwin	win/tty/wintty.c	/^static int maxwin = 0;			\/* number of windows in use *\/$/;"	v	file:
may_dig	src/hack.c	/^boolean may_dig(xchar x, xchar y) {$/;"	f
may_passwall	src/hack.c	/^boolean may_passwall(xchar x, xchar y) {$/;"	f
maybe_cannibal	src/eat.c	/^static boolean maybe_cannibal(int pm, boolean allowmsg) {$/;"	f	file:
maybe_display_usteed	include/display.h	205;"	d
maybe_finished_meal	src/eat.c	/^boolean maybe_finished_meal(boolean stopping) {$/;"	f
maybe_polyd	include/youprop.h	24;"	d
maybe_tame	src/read.c	/^static void maybe_tame (struct monst *mtmp, struct obj *sobj) {$/;"	f	file:
maybe_wail	src/hack.c	/^static void maybe_wail(void) {$/;"	f	file:
maybe_write_ls	src/light.c	/^static int maybe_write_ls(int fd, int range, boolean write_it) {$/;"	f	file:
maybe_write_timer	src/timeout.c	/^static int maybe_write_timer(int fd, int range, boolean write_it) {$/;"	f	file:
mayberem	src/mhitu.c	/^static void mayberem(struct obj *obj, const char *str) {$/;"	f	file:
maze	build-linux/src/lev_yacc.c	/^static specialmaze maze;$/;"	v	file:
maze0xy	src/mkmaze.c	/^static void maze0xy(coord *cc)	{$/;"	f	file:
maze1xy	src/sp_lev.c	/^static void maze1xy(coord *m, int humidity) {$/;"	f	file:
maze_like	include/dungeon.h	/^	bool maze_like;	\/* is this a maze? *\/$/;"	m	struct:d_flags
mazepart	include/sp_lev.h	/^} mazepart;$/;"	t	typeref:struct:__anon52
mazexy	src/mkmaze.c	/^void mazexy(coord	*cc) {$/;"	f
mb_trapped	src/monmove.c	/^boolean mb_trapped(struct monst *mtmp) {$/;"	f
mb_verb	src/artifact.c	/^static const char * const mb_verb[2][4] = {$/;"	v	file:
mbag_explodes	src/pickup.c	/^boolean mbag_explodes(struct obj *obj, int depthin) {$/;"	f
mbag_item_gone	src/pickup.c	/^static long mbag_item_gone(int held, struct obj *item) {$/;"	f	file:
mbhit	src/muse.c	/^static void mbhit(struct monst *mon, int range, int (*fhitm)(struct monst*,struct obj*), int (*fhito)(struct obj*,struct obj*), struct obj *obj)			{$/;"	f	file:
mbhitm	src/muse.c	/^static int mbhitm(struct monst *mtmp, struct obj *otmp) {$/;"	f	file:
mbirth_limit	src/makemon.c	/^int mbirth_limit(int mndx) {$/;"	f
mbodypart	src/polyself.c	/^mbodypart (struct monst *mon, int part) {$/;"	f
mburied	include/monst.h	/^	bool mburied;	\/* has been buried *\/$/;"	m	struct:monst
mcalcdistress	src/mon.c	/^void mcalcdistress (void) {$/;"	f
mcalcmove	src/mon.c	/^int mcalcmove (struct monst *mon) {$/;"	f
mcan	include/monst.h	/^	bool mcan;	\/* has been cancelled *\/$/;"	m	struct:monst
mcanmove	include/monst.h	/^	bool mcanmove;	\/* paralysis, similar to mblinded *\/$/;"	m	struct:monst
mcansee	include/monst.h	/^	bool mcansee;	\/* cansee 1, temp.blinded 0, blind 0 *\/$/;"	m	struct:monst
mcarried	include/obj.h	270;"	d
mchoices	src/makemon.c	/^	char mchoices[SPECIAL_PM];	\/* value range is 0..127 *\/$/;"	m	struct:__anon10	file:
mcolor	include/permonst.h	/^	uchar		mcolor;			\/* color to use *\/$/;"	m	struct:permonst
mconf	include/monst.h	/^	bool mconf;	\/* confused *\/$/;"	m	struct:monst
mconveys	include/permonst.h	/^	uchar		mconveys;		\/* conveyed by eating *\/$/;"	m	struct:permonst
md_exclamations	src/mail.c	252;"	d	file:
md_rush	src/mail.c	/^static boolean md_rush(struct monst *md, int tx, int ty) {$/;"	f	file:
md_start	src/mail.c	/^static boolean md_start(coord *startp) {$/;"	f	file:
md_stop	src/mail.c	/^static boolean md_stop(coord *stopp \/* stopping position (we fill it in) *\/, coord *startp \/* starting positon (read only) *\/) {$/;"	f	file:
mdamagem	src/mhitm.c	/^static int mdamagem(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f	file:
mdamageu	src/mhitu.c	/^void mdamageu(struct monst *mtmp, int n) {$/;"	f
mdig_tunnel	src/dig.c	/^boolean mdig_tunnel(struct monst *mtmp) {$/;"	f
mdrop_obj	src/steal.c	/^static void mdrop_obj(struct monst *mon, struct obj *obj, boolean verbosely) {$/;"	f	file:
mdrop_special_objs	src/steal.c	/^mdrop_special_objs (struct monst *mon) {$/;"	f
meatcorpse	src/mon.c	/^void meatcorpse (struct monst *mtmp) {$/;"	f
meating	include/monst.h	/^	int meating;		\/* monster is eating timeout *\/$/;"	m	struct:monst
meatmetal	src/mon.c	/^int meatmetal (struct monst *mtmp) {$/;"	f
meatobj	src/mon.c	/^int meatobj (		struct monst *mtmp) {$/;"	f
medusa_level	include/decl.h	81;"	d
melt_ice	src/zap.c	/^void melt_ice(xchar x, xchar y) {$/;"	f
mem_corpse	include/rm.h	/^	bool mem_corpse;	\/* Set if mem_obj refers to a corpse *\/$/;"	m	struct:rm
mem_invis	include/rm.h	/^	bool mem_invis;	\/* Set if invisible monster remembered *\/$/;"	m	struct:rm
memcmp	include/unixconf.h	260;"	d
memcpy	include/unixconf.h	259;"	d
memory_glyph	src/display.c	/^int memory_glyph(int x, int y) {$/;"	f
memory_is_invisible	include/display.h	404;"	d
memory_is_invisible	include/display.h	409;"	d
memory_object	src/ball.c	13;"	d	file:
memory_object	src/ball.c	15;"	d	file:
menorah	include/you.h	/^	bool menorah;	\/* carrying Candelabrum *\/$/;"	m	struct:u_have
menu_ch	include/wintty.h	/^	char menu_ch;		\/* menu char (MENU) *\/$/;"	m	struct:WinDesc
menu_clear_selections	win/curses/cursdial.c	/^menu_clear_selections(nhmenu *menu)$/;"	f	file:
menu_cmd_t	src/options.c	/^} menu_cmd_t;$/;"	t	typeref:struct:__anon13	file:
menu_colorings	src/decl.c	/^struct menucoloring *menu_colorings = 0;$/;"	v	typeref:struct:menucoloring
menu_determine_pages	win/curses/cursdial.c	/^menu_determine_pages(nhmenu *menu)$/;"	f	file:
menu_display_page	win/curses/cursdial.c	/^menu_display_page(nhmenu *menu, WINDOW * win, int page_num)$/;"	f	file:
menu_drop	src/do.c	/^static int menu_drop(int retry) {$/;"	f	file:
menu_get_accel	win/curses/cursdial.c	/^menu_get_accel(bool first)$/;"	f	file:
menu_get_selections	win/curses/cursdial.c	/^menu_get_selections(WINDOW * win, nhmenu *menu, int how)$/;"	f	file:
menu_headings	include/flag.h	/^	int	menu_headings;	\/* ATR for menu headings *\/$/;"	m	struct:instance_flags
menu_identify	src/invent.c	/^static void menu_identify(int id_limit) {$/;"	f	file:
menu_is_multipage	win/curses/cursdial.c	/^menu_is_multipage(nhmenu *menu, int width, int height)$/;"	f	file:
menu_item	include/wintype.h	/^} menu_item;$/;"	t	typeref:struct:__anon58
menu_list	include/func_tab.h	/^struct menu_list {$/;"	s
menu_loot	src/pickup.c	/^static int menu_loot(int retry, struct obj *container, boolean put_in) {$/;"	f	file:
menu_max_height	win/curses/cursdial.c	/^menu_max_height(void)$/;"	f	file:
menu_on_esc	include/flag.h	/^	bool  menu_on_esc;	\/* show menu when hitting esc *\/$/;"	m	struct:flag
menu_op	win/curses/cursdial.c	/^} menu_op;$/;"	t	typeref:enum:menu_op_type	file:
menu_op_type	win/curses/cursdial.c	/^typedef enum menu_op_type {$/;"	g	file:
menu_operation	win/curses/cursdial.c	/^menu_operation(WINDOW * win, nhmenu *menu, menu_op$/;"	f	file:
menu_remarm	src/do_wear.c	/^static int menu_remarm(int retry) {$/;"	f	file:
menu_requested	include/flag.h	/^	bool  menu_requested; \/* Flag for overloaded use of 'm' prefix$/;"	m	struct:instance_flags
menu_select_deselect	win/curses/cursdial.c	/^menu_select_deselect(WINDOW * win, nhmenu_item *item, menu_op operation)$/;"	f	file:
menu_style	include/flag.h	/^	char	 menu_style;	\/* User interface style setting *\/$/;"	m	struct:flag
menu_tab	include/func_tab.h	/^struct menu_tab {$/;"	s
menu_tab_sep	include/flag.h	/^	bool  menu_tab_sep;	\/* Use tabs to separate option menu fields *\/$/;"	m	struct:instance_flags
menu_win_size	win/curses/cursdial.c	/^menu_win_size(nhmenu *menu)$/;"	f	file:
menucoloring	include/color.h	/^struct menucoloring {$/;"	s
menuletter	src/dungeon.c	/^	char menuletter;$/;"	m	struct:lchoice	file:
menutype	src/options.c	/^static const char *menutype[] = {$/;"	v	file:
mergable	src/invent.c	/^static boolean mergable(struct obj *otmp, struct obj *obj) {$/;"	f	file:
merge	src/polyself.c	/^	boolean merge;$/;"	m	struct:__anon17	file:
merge_choice	src/invent.c	/^struct obj *merge_choice(struct obj *objlist, struct obj *obj) {$/;"	f
merge_with_armor	src/polyself.c	/^merge_with_armor (void) {$/;"	f	file:
merged	src/invent.c	/^boolean merged(struct obj **potmp, struct obj **pobj) {$/;"	f
mesg_add_line	win/curses/cursmesg.c	/^mesg_add_line(char *mline)$/;"	f	file:
message_menu	include/winprocs.h	97;"	d
message_typ	include/mail.h	/^	int	 message_typ;		\/* MSG_foo value *\/$/;"	m	struct:mail_info
messagewin	include/wincurs.h	/^WINDOW *mapwin, *statuswin, *messagewin;    \/* Main windows *\/$/;"	v
met_intermed	include/quest.h	/^	bool met_intermed;	\/* used if the locate is a person. *\/$/;"	m	struct:q_score
met_leader	include/quest.h	/^	bool met_leader;		\/* has met the leader *\/$/;"	m	struct:q_score
met_nemesis	include/quest.h	/^	bool met_nemesis;	\/* has met the nemesis before *\/$/;"	m	struct:q_score
metallivorous	include/mondata.h	89;"	d
mextra	include/monst.h	/^	char mextra[]; \/* monster dependent info *\/$/;"	m	struct:monst
mfemale	include/you.h	/^	bool mfemale;		\/* saved human value of flags.female *\/$/;"	m	struct:you
mflags1	include/permonst.h	/^	unsigned long	mflags1,		\/* boolean bitflags *\/$/;"	m	struct:permonst
mflags2	include/permonst.h	/^	           mflags2;		\/* more boolean bitflags *\/$/;"	m	struct:permonst
mflags3	include/permonst.h	/^	unsigned short	mflags3;		\/* yet more boolean bitflags *\/$/;"	m	struct:permonst
mflee	include/monst.h	/^	bool mflee;	\/* fleeing *\/$/;"	m	struct:monst
mfndpos	src/mon.c	/^int mfndpos(struct monst *mon, coord *poss, long *info, long flag) {$/;"	f
mh	include/you.h	/^	int mh, mhmax, mtimedone;	\/* for polymorph-self *\/$/;"	m	struct:you
mhe	include/you.h	217;"	d
mhealup	include/obj.h	265;"	d
mhim	include/you.h	218;"	d
mhis	include/you.h	219;"	d
mhmax	include/you.h	/^	int mh, mhmax, mtimedone;	\/* for polymorph-self *\/$/;"	m	struct:you
mhp	include/monst.h	/^	int mhp, mhpmax;$/;"	m	struct:monst
mhpmax	include/monst.h	/^	int mhp, mhpmax;$/;"	m	struct:monst
mhpmax_penalty	include/edog.h	/^	int mhpmax_penalty;		\/* while starving, points reduced *\/$/;"	m	struct:edog
mhurtle	src/dothrow.c	/^void mhurtle(struct monst *mon, int dx, int dy, int range) {$/;"	f
mhurtle_step	src/dothrow.c	/^static boolean mhurtle_step(void *arg, int x, int y) {$/;"	f	file:
midnight	src/hacklib.c	/^int midnight(void) {$/;"	f
migrate_to_level	src/dog.c	/^void migrate_to_level($/;"	f
migrating_mons	src/decl.c	/^struct monst *migrating_mons = NULL;$/;"	v	typeref:struct:monst
migrating_objs	src/decl.c	/^struct obj *migrating_objs = NULL;$/;"	v	typeref:struct:obj
mimic_hit_msg	src/mon.c	/^void mimic_hit_msg(struct monst *mtmp, short otyp) {$/;"	f
mimic_obj_name	src/objnam.c	/^const char * mimic_obj_name (struct monst *mtmp) {$/;"	f
min	include/hack.h	269;"	d
min	sys/share/tclib.c	51;"	d	file:
min	sys/winnt/win32api.h	12;"	d
min_align	include/emin.h	/^	aligntyp	min_align;	\/* alignment of minion *\/$/;"	m	struct:emin
min_rx	src/mkmap.c	/^int min_rx, max_rx, min_ry, max_ry; \/* rectangle bounds for regions *\/$/;"	v
min_ry	src/mkmap.c	/^int min_rx, max_rx, min_ry, max_ry; \/* rectangle bounds for regions *\/$/;"	v
mindless	include/mondata.h	71;"	d
mineend_level	include/decl.h	111;"	d
mineend_level	include/decl.h	84;"	d
mineralize	src/mklev.c	/^static void mineralize(void) {$/;"	f	file:
mines_dnum	include/decl.h	105;"	d
minimal_enlightenment	src/cmd.c	/^static boolean minimal_enlightenment(void) {$/;"	f	file:
miniwalk	src/extralev.c	/^static void miniwalk(int x, int y) {$/;"	f	file:
minliquid	src/mon.c	/^int minliquid (struct monst *mtmp) {$/;"	f
minor_oracle	include/you.h	/^	bool minor_oracle;	\/* received at least 1 cheap oracle *\/$/;"	m	struct:u_event
minstapetrify	src/trap.c	/^	void minstapetrify(struct monst *mon, boolean byplayer) {$/;"	f
mintrap	src/trap.c	/^int mintrap (struct monst *mtmp) {$/;"	f
mintrinsics	include/monst.h	/^	unsigned long mintrinsics;	\/* initialized from mresists *\/$/;"	m	struct:monst
minusattr	src/attrib.c	/^* const minusattr[] = {$/;"	v	file:
minvent	include/monst.h	/^	struct obj *minvent;$/;"	m	struct:monst	typeref:struct:monst::obj
minvis	include/monst.h	/^	bool minvis;	\/* currently invisible *\/$/;"	m	struct:monst
misc	src/muse.c	/^	struct obj *misc;$/;"	m	struct:musable	typeref:struct:musable::obj	file:
misc_cmds	src/decl.c	/^char misc_cmds[] = {'g', 'G', 'F', 'm', 'M', '\\033', '\\001'};$/;"	v
misc_worn_check	include/monst.h	/^	long misc_worn_check;$/;"	m	struct:monst
miss	src/zap.c	/^void miss(const char *str, struct monst *mtmp) {$/;"	f
missmm	src/mhitm.c	/^static void missmm(struct monst *magr, struct monst *mdef, int target, int roll, struct attack *mattk) {$/;"	f	file:
missmu	src/mhitu.c	/^static void missmu(struct monst *mtmp, int target, int roll, struct attack *mattk) {$/;"	f	file:
missum	src/uhitm.c	/^	void missum(struct monst *mdef, int target, int roll, struct attack *mattk) {$/;"	f
mixtype	src/potion.c	/^static short mixtype(struct obj *o1, struct obj *o2) {$/;"	f	file:
mk_artifact	src/artifact.c	/^struct obj *mk_artifact($/;"	f
mk_bubble	src/mkmaze.c	/^static void mk_bubble(int x,int y, int n) {$/;"	f	file:
mk_corpse	src/dbridge.c	366;"	d	file:
mk_corpse	src/dbridge.c	381;"	d	file:
mk_knox_portal	src/mklev.c	/^static void mk_knox_portal(xchar x, xchar y) {$/;"	f	file:
mk_message	src/dbridge.c	365;"	d	file:
mk_message	src/dbridge.c	380;"	d	file:
mk_mplayer	src/mplayer.c	/^struct monst * mk_mplayer(struct permonst *ptr, xchar x, xchar y, boolean special) {$/;"	f
mk_mplayer_armor	src/mplayer.c	/^static void mk_mplayer_armor(struct monst *mon, short typ) {$/;"	f	file:
mk_named_object	src/mkobj.c	/^struct obj * mk_named_object ( int objtype,	\/* CORPSE or STATUE *\/ struct permonst *ptr, int x, int y, const char *nm) {$/;"	f
mk_roamer	src/priest.c	/^struct monst * mk_roamer(struct permonst *ptr, aligntyp alignment, xchar x, xchar y, boolean peaceful) {$/;"	f
mk_tt_object	src/mkobj.c	/^struct obj *mk_tt_object ( int objtype, \/* CORPSE or STATUE *\/ int x, int y) {$/;"	f
mkaltar	src/mklev.c	/^static void mkaltar(struct mkroom *croom) {$/;"	f	file:
mkbox_cnts	src/mkobj.c	/^static void mkbox_cnts(struct obj *box) {$/;"	f	file:
mkcavearea	src/dig.c	/^static void mkcavearea(boolean rockit) {$/;"	f	file:
mkcavepos	src/dig.c	/^static void mkcavepos(xchar x, xchar y, int dist, boolean waslit, boolean rockit) {$/;"	f	file:
mkclass	src/makemon.c	/^struct permonst *mkclass(char class, int spc) {$/;"	f
mkcorpstat	src/mkobj.c	/^struct obj * mkcorpstat(int objtype, struct monst *mtmp, struct permonst *ptr, int x, int y, boolean init) {$/;"	f
mkfount	src/mklev.c	/^static void mkfount(int mazeflag, struct mkroom *croom) {$/;"	f	file:
mkgold	src/mkobj.c	/^mkgold (long amount, int x, int y) {$/;"	f
mkgrave	src/mklev.c	/^static void mkgrave(struct mkroom *croom) {$/;"	f	file:
mkinvokearea	src/mklev.c	/^void mkinvokearea(void) {$/;"	f
mkinvpos	src/mklev.c	/^static void mkinvpos(xchar x, xchar y, int dist) {$/;"	f	file:
mklev	src/mklev.c	/^void mklev(void) {$/;"	f
mkmap	src/mkmap.c	/^void mkmap(lev_init *init_lev) {$/;"	f
mkmonmoney	src/makemon.c	/^void mkmonmoney(struct monst *mtmp, long amount) {$/;"	f
mkobj	src/mkobj.c	/^struct obj *mkobj(char oclass, boolean artif) {$/;"	f
mkobj_at	src/mkobj.c	/^struct obj *mkobj_at(char let, int x, int y, boolean artif) {$/;"	f
mkobjprobs	src/mkobj.c	/^const struct icp mkobjprobs[] = {$/;"	v	typeref:struct:icp
mkportal	src/mkmaze.c	/^void mkportal(xchar x, xchar y, xchar todnum, xchar todlevel) {$/;"	f
mkr	include/sp_lev.h	/^	struct mkroom *mkr;$/;"	m	struct:_room	typeref:struct:_room::mkroom
mkroll_launch	src/trap.c	/^static int mkroll_launch(struct trap *ttmp, xchar x, xchar y, short otyp, long ocount) {$/;"	f	file:
mkroom	include/mkroom.h	/^struct mkroom {$/;"	s
mkroom	src/mkroom.c	/^void mkroom (int roomtype) {$/;"	f
mkshobj_at	src/shknam.c	/^mkshobj_at(shp, sx, sy)$/;"	f	file:
mkshop	src/mkroom.c	/^static void mkshop(void) {$/;"	f	file:
mksink	src/mklev.c	/^static void mksink(struct mkroom *croom) {$/;"	f	file:
mksobj	src/mkobj.c	/^struct obj * mksobj(int otyp, boolean init, boolean artif) {$/;"	f
mksobj_at	src/mkobj.c	/^struct obj * mksobj_at(int otyp, int x, int y, boolean init, boolean artif) {$/;"	f
mkstairs	src/mklev.c	/^void mkstairs(xchar x, xchar y, char up, struct mkroom *croom) {$/;"	f
mkswamp	src/mkroom.c	/^static void mkswamp()	{$/;"	f	file:
mktemple	src/mkroom.c	/^mktemple() {$/;"	f	file:
mktoilet	src/mklev.c	/^static void mktoilet(struct mkroom *croom) {$/;"	f	file:
mktrap	src/mklev.c	/^void mktrap(int num, int mazeflag, struct mkroom *croom, coord *tm) {$/;"	f
mkundead	src/mkroom.c	/^mkundead(coord *mm, boolean revive_corpses, int mm_flags) {$/;"	f
mkzoo	src/mkroom.c	/^static void mkzoo(int type) {$/;"	f	file:
mleashed	include/monst.h	/^	bool mleashed;	\/* monster is on a leash *\/$/;"	m	struct:monst
mlet	include/permonst.h	/^	char		mlet;			\/* symbol *\/$/;"	m	struct:permonst
mlevel	include/permonst.h	/^	schar		mlevel,			\/* base monster level *\/$/;"	m	struct:permonst
mlevel_tele_trap	src/teleport.c	/^int mlevel_tele_trap(struct monst *mtmp, struct trap *trap, boolean force_it, int in_sight) {$/;"	f
mlevelgain	include/obj.h	264;"	d
mlifesaver	src/mon.c	/^struct obj * mlifesaver (struct monst *mon) {$/;"	f
mlist	build-linux/src/lev_yacc.c	/^static char olist[MAX_REGISTERS], mlist[MAX_REGISTERS];$/;"	v	file:
mlist	include/wintty.h	/^	tty_menu_item *mlist;	\/* menu information (MENU) *\/$/;"	m	struct:WinDesc
mlstmv	include/monst.h	/^	long mlstmv;		\/* for catching up with lost time *\/$/;"	m	struct:monst
mm_aggression	src/mon.c	/^static long mm_aggression(struct monst *magr, struct monst *mdef) {$/;"	f	file:
mmove	include/permonst.h	/^	                mmove,			\/* move speed *\/$/;"	m	struct:permonst
mname	include/permonst.h	/^	const char	*mname;			\/* full name *\/$/;"	m	struct:permonst
mnamelth	include/monst.h	/^	uchar mnamelth;		\/* length of name (following mxlth) *\/$/;"	m	struct:monst
mnearto	src/mon.c	/^boolean mnearto(struct monst *mtmp, xchar x, xchar y, boolean move_other)	{$/;"	f
mnexto	src/mon.c	/^void mnexto (	struct monst *mtmp) {$/;"	f
mnum	include/monst.h	/^	short mnum;		\/* permanent monster index number *\/$/;"	m	struct:monst
mod	sys/winnt/nh340key.c	/^int *mod;$/;"	v
mod	sys/winnt/nhdefkey.c	/^int *mod;$/;"	v
mod	sys/winnt/nhraykey.c	/^int *mod;$/;"	v
mode	sys/winnt/nh340key.c	/^int mode;$/;"	v
mode	sys/winnt/nhdefkey.c	/^int mode;$/;"	v
moderateloadmsg	src/pickup.c	/^static const char moderateloadmsg[] = "You have a little trouble lifting";$/;"	v	file:
moldy_corpse	src/do.c	/^void moldy_corpse(void * arg, long timeout) {$/;"	f
mon	src/polyself.c	/^	int mon;$/;"	m	struct:__anon17	file:
mon_abil	src/attrib.c	/^mon_abil[] = { {   1, &(HFast), "", "" },$/;"	v	typeref:struct:innate	file:
mon_adjust_speed	src/worn.c	/^mon_adjust_speed ($/;"	f
mon_animal_list	src/mon.c	/^void mon_animal_list(boolean construct) {$/;"	f
mon_arrive	src/dog.c	/^void mon_arrive(struct monst *mtmp, boolean with_you) {$/;"	f
mon_beside	src/pickup.c	/^static boolean mon_beside(int x, int y) {$/;"	f	file:
mon_break_armor	src/worn.c	/^void mon_break_armor(struct monst *mon, boolean polyspot) {$/;"	f
mon_catchup_elapsed_time	src/dog.c	/^void mon_catchup_elapsed_time(struct monst *mtmp, long nmv \/* number of moves *\/) {$/;"	f
mon_chain	src/cmd.c	/^static void mon_chain(winid win, const char *src, struct monst *chain, long *total_count, long *total_size) {$/;"	f	file:
mon_color	src/mapglyph.c	33;"	d	file:
mon_consume_unstone	src/muse.c	/^static void mon_consume_unstone(struct monst *mon, struct obj *obj, boolean by_you, boolean stoning) {$/;"	f	file:
mon_drain_en	src/trap.c	/^mon_drain_en (struct monst *mtmp, int n) {$/;"	f
mon_has_amulet	src/wizard.c	/^mon_has_amulet (struct monst *mtmp) {$/;"	f
mon_has_arti	src/wizard.c	/^static boolean mon_has_arti(struct monst *mtmp, short	otyp) {$/;"	f	file:
mon_has_special	src/wizard.c	/^mon_has_special (struct monst *mtmp) {$/;"	f
mon_ignite_lightsaber	src/weapon.c	/^static void mon_ignite_lightsaber(struct obj *obj, struct monst *mon) {$/;"	f	file:
mon_in_region	src/region.c	/^boolean mon_in_region(NhRegion *reg, struct monst *mon) {$/;"	f
mon_in_room	src/sounds.c	34;"	d	file:
mon_invent_chain	src/cmd.c	/^static void mon_invent_chain(winid win, const char *src, struct monst *chain, long *total_count, long *total_size) {$/;"	f	file:
mon_is_local	src/light.c	227;"	d	file:
mon_is_local	src/timeout.c	/^static boolean mon_is_local(struct monst *mon) {$/;"	f	file:
mon_moving	include/flag.h	/^	bool  mon_moving;	\/* monsters' turn to move *\/$/;"	m	struct:flag
mon_nam	src/do_name.c	/^char *mon_nam(struct monst *mtmp) {$/;"	f
mon_nam_too	src/mhitm.c	/^static char *mon_nam_too(char *outbuf, struct monst *mon, struct monst *other_mon) {$/;"	f	file:
mon_owns	src/shk.c	/^static char * mon_owns(char *buf, struct obj *obj) {$/;"	f	file:
mon_poly	src/timeout.c	/^int mon_poly(struct monst *mtmp, boolean your_fault, const char *change_fmt) {$/;"	f
mon_polycontrol	include/flag.h	/^	bool  mon_polycontrol;	\/* debug: control monster polymorphs *\/$/;"	m	struct:instance_flags
mon_reflects	src/muse.c	/^boolean mon_reflects(struct monst *mon, const char *str) {$/;"	f
mon_regen	src/monmove.c	/^void mon_regen(struct monst *mon, boolean digest_meal) {$/;"	f
mon_set_minvis	src/worn.c	/^mon_set_minvis (struct monst *mon) {$/;"	f
mon_spec_poly	src/timeout.c	/^int mon_spec_poly(struct monst *mtmp, struct permonst *type, long when, boolean polyspot, boolean transform_msg, boolean system_shock, boolean your_fault) {$/;"	f
mon_stop_timers	src/timeout.c	/^mon_stop_timers (struct monst *mon) {$/;"	f
mon_tech	src/tech.c	/^mon_tech[] = { {   1, T_PUMMEL, 1},$/;"	v	typeref:struct:	file:
mon_to_glyph	include/display.h	289;"	d
mon_to_stone	src/mon.c	/^void mon_to_stone (struct monst *mtmp) {$/;"	f
mon_to_zombie	src/tech.c	/^int mon_to_zombie (int monnum) {$/;"	f
mon_visible	include/display.h	52;"	d
mon_warning	include/display.h	39;"	d
mon_wield_item	src/weapon.c	/^int mon_wield_item(struct monst *mon) {$/;"	f
mon_xkilled	src/mon.c	/^void mon_xkilled (struct monst *mdef, const char *fltxt, int how) {$/;"	f
mondead	src/mon.c	/^void mondead (struct monst *mtmp) {$/;"	f
mondied	src/mon.c	/^void mondied (struct monst *mdef) {$/;"	f
monexplain	src/drawing.c	/^const char * const monexplain[MAXMCLASSES] = {$/;"	v
money2mon	src/shk.c	/^long money2mon(struct monst *mon, long amount) {$/;"	f
money2u	src/shk.c	/^void money2u (struct monst *mon, long amount) {$/;"	f
money_cnt	src/hack.c	/^long money_cnt(struct obj *otmp) {$/;"	f
monflee	src/monmove.c	/^void monflee(struct monst *mtmp, int fleetime, boolean first, boolean fleemsg) {$/;"	f
mongets	src/makemon.c	/^int mongets(struct monst *mtmp, int otyp) {$/;"	f
mongone	src/mon.c	/^void mongone (struct monst *mdef) {$/;"	f
monkilled	src/mon.c	/^void monkilled (struct monst *mdef, const char *fltxt, int how) {$/;"	f
monlist	include/rm.h	/^	struct monst	*monlist;$/;"	m	struct:__anon30	typeref:struct:__anon30::monst
monnear	src/mon.c	/^boolean monnear(struct monst *mon, int x, int y) {$/;"	f
monnum_to_glyph	include/display.h	313;"	d
mons	src/monst.c	/^struct permonst mons[] = {$/;"	v	typeref:struct:permonst
monsndx	src/mondata.c	/^int monsndx (		struct permonst *ptr) {$/;"	f
monst	include/monst.h	/^struct monst {$/;"	s
monst	src/objects.c	/^struct monst {$/;"	s	file:
monst_init	src/monst.c	/^void monst_init(void) {$/;"	f
monst_to_any	src/hack.c	/^anything monst_to_any(struct monst *mtmp) {$/;"	f
monster	include/sp_lev.h	/^} monster;$/;"	t	typeref:struct:__anon35
monster_detect	src/detect.c	/^int monster_detect($/;"	f
monster_nearby	src/hack.c	/^int monster_nearby(void) {$/;"	f
monstermoves	src/decl.c	/^long moves = 1L, monstermoves = 1L;$/;"	v
monsters	include/region.h	/^	uint *monsters;			\/* Monsters currently inside this region *\/$/;"	m	struct:__anon29
monsters	include/rm.h	/^	struct monst	*monsters[COLNO][ROWNO];$/;"	m	struct:__anon30	typeref:struct:__anon30::monst
monsters	include/sp_lev.h	/^	monster **monsters;$/;"	m	struct:__anon52
monsters	include/sp_lev.h	/^	monster **monsters;$/;"	m	struct:_room
monstinroom	src/hack.c	/^static boolean monstinroom(struct permonst *mdat, int roomno) {$/;"	f	file:
monstone	src/mon.c	/^void monstone (struct monst *mdef) {$/;"	f
monstr	src/monstr.c	/^int *monstr;$/;"	v
monstr_init	src/monstr.c	/^void monstr_init(void) {$/;"	f
monsyms	src/drawing.c	/^uchar monsyms[MAXMCLASSES] = DUMMY; \/* the current monster display symbols *\/$/;"	v
monte	src/gypsy.c	/^static void monte(struct monst *mtmp) {$/;"	f	file:
montraits	src/zap.c	/^struct monst *montraits(struct obj *obj, coord *cc) {$/;"	f
moonphase	include/flag.h	/^	unsigned moonphase;$/;"	m	struct:flag
morc	win/tty/getline.c	/^char morc = 0;	\/* tell the outside world what char you chose *\/$/;"	v
more	win/tty/topl.c	/^void more(void) {$/;"	f
more_experienced	src/exper.c	/^void more_experienced(int exp, int rexp) {$/;"	f
more_than_one	src/display.c	/^static boolean more_than_one(int x, int y, int a, int b, int c) {$/;"	f	file:
more_than_one	src/display.c	1834;"	d	file:
morehungry	src/eat.c	/^void morehungry(int num) {$/;"	f
moreluck	include/you.h	/^	schar uluck, moreluck;		\/* luck and luck bonus *\/$/;"	m	struct:you
morestr	include/wintty.h	/^	char *morestr;		\/* string to display instead of default *\/$/;"	m	struct:WinDesc
morguemon	src/mkroom.c	/^static struct permonst * morguemon(void) {$/;"	f	file:
mount_steed	src/steed.c	/^boolean mount_steed(struct monst *mtmp,	boolean force)		{$/;"	f
move	include/flag.h	/^	bool  move;$/;"	m	struct:flag
move	src/mkmaze.c	/^static void move(int *x, int *y, int dir) {$/;"	f	file:
move_bc	src/ball.c	/^void move_bc(int before, int control, xchar ballx, xchar bally, xchar chainx, xchar chainy) {$/;"	f
move_gold	src/vault.c	/^static void move_gold(struct obj *gold, int vroom) {$/;"	f	file:
move_into_trap	src/trap.c	/^	static void move_into_trap(struct trap *ttmp) {$/;"	f	file:
move_special	src/priest.c	/^int move_special(struct monst *mtmp, boolean in_his_shop, schar appr, boolean uondoor,boolean avoid, xchar omx,xchar omy,xchar gx,xchar gy) {$/;"	f
move_update	src/hack.c	/^static void move_update(boolean newlev) {$/;"	f	file:
movebubbles	src/mkmaze.c	/^void movebubbles(void) {$/;"	f
movecmd	src/cmd.c	/^int movecmd(char sym) {$/;"	f
moveloop	src/allmain.c	/^void moveloop(void) {$/;"	f
movement	include/monst.h	/^	short movement;		\/* movement points (derived from permonst definition and added effects *\/$/;"	m	struct:monst
movemon	src/mon.c	/^int movemon (void) {$/;"	f
moverock	src/hack.c	/^static int moverock(void) {$/;"	f	file:
moves	src/decl.c	/^long moves = 1L, monstermoves = 1L;$/;"	v
movobj	src/hack.c	/^void movobj(struct obj *obj, xchar ox, xchar oy) {$/;"	f
mpeaceful	include/monst.h	/^	bool mpeaceful;	\/* does not attack unprovoked *\/$/;"	m	struct:monst
mpickgold	src/mon.c	/^void mpickgold (struct monst *mtmp) {$/;"	f
mpickobj	src/steal.c	/^mpickobj (struct monst *mtmp, struct obj *otmp) {$/;"	f
mpickstuff	src/mon.c	/^boolean mpickstuff(struct monst *mtmp, const char *str) {$/;"	f
mplayer_talk	src/mplayer.c	/^mplayer_talk (struct monst *mtmp) {$/;"	f
mpoisons_subj	src/mhitu.c	/^const char *mpoisons_subj(struct monst *mtmp, struct attack *mattk) {$/;"	f
mquaffmsg	src/muse.c	/^static void mquaffmsg(struct monst *mtmp, struct obj *otmp) {$/;"	f	file:
mr	include/permonst.h	/^	                mr;			\/* (base) magic resistance *\/$/;"	m	struct:permonst
mrace2race	src/role.c	/^mrace2race (int mflags2) {$/;"	f
mrank_sz	src/botl.c	/^static int mrank_sz = 0; \/* loaded by max_rank_sz (from u_init) *\/$/;"	v	file:
mread	src/restore.c	/^void mread(int fd, void * buf, uint len) {$/;"	f
mreadmsg	src/muse.c	/^static void mreadmsg(struct monst *mtmp, struct obj *otmp) {$/;"	f	file:
mresists	include/permonst.h	/^	unsigned long   mresists;               \/* resistances *\/$/;"	m	struct:permonst
mrevived	include/monst.h	/^	bool mrevived;	\/* has been revived from the dead *\/$/;"	m	struct:monst
mrg_to_wielded	src/decl.c	/^boolean mrg_to_wielded = false;$/;"	v
mrustm	src/mhitm.c	/^static void mrustm(struct monst *magr, struct monst *mdef, struct obj *obj) {$/;"	f	file:
mselftouch	src/trap.c	/^	void mselftouch(struct monst *mon, const char *arg, boolean byplayer) {$/;"	f
msexit	sys/share/pcsys.c	/^static void msexit(void) {$/;"	f	file:
msgID	sys/winnt/mapimail.c	/^char msgID[80];         \/* message ID of msg under manipulation     *\/$/;"	v
msg_file	src/questpgr.c	/^static dlb	*msg_file;$/;"	v	file:
msg_history	include/flag.h	/^	unsigned msg_history;	\/* hint: # of top lines to save *\/$/;"	m	struct:instance_flags
msg_in	src/questpgr.c	/^static struct qtmsg *msg_in(struct qtmsg *qtm_list, int msgnum) {$/;"	f	file:
msg_is_alert	include/flag.h	/^	bool  msg_is_alert;  \/* need to press an extra key to get rid of a --More-- prompt.  Only in curses *\/$/;"	m	struct:instance_flags
msgbuf	src/eat.c	/^char msgbuf[BUFSZ];$/;"	v
msgnum	include/qtext.h	/^	int msgnum;$/;"	m	struct:qtmsg
msgpline_add	src/pline.c	/^msgpline_add(typ, pattern)$/;"	f
msgpline_free	src/pline.c	/^msgpline_free (void) {$/;"	f
msgpline_type	src/pline.c	/^static int msgpline_type(const char *msg) {$/;"	f	file:
msgtype	include/decl.h	/^	xchar msgtype;$/;"	m	struct:_plinemsg
mshot_xname	src/objnam.c	/^char * mshot_xname (struct obj *obj) {$/;"	f
msize	include/permonst.h	/^	uchar		msize;			\/* physical size (3 bits) *\/$/;"	m	struct:permonst
msleep	include/unixconf.h	283;"	d
msleep	include/unixconf.h	286;"	d
msleep	sys/share/pctty.c	/^void msleep(unsigned mseconds) {$/;"	f
msleep	sys/unix/unixunix.c	/^msleep(msec)$/;"	f
msleeping	include/monst.h	/^	bool msleeping;	\/* asleep until woken *\/$/;"	m	struct:monst
msmsg	sys/share/pcsys.c	/^void msmsg(const char *fmt, ...) {$/;"	f
msmsg	sys/winnt/nttty.c	/^void msmsg(const char *fmt, ...) {$/;"	f
msound	include/permonst.h	/^	uchar		msound;			\/* noise it makes (6 bits) *\/$/;"	m	struct:permonst
mspec_used	include/monst.h	/^	int mspec_used;		\/* monster's special ability attack timeout *\/$/;"	m	struct:monst
mstatusline	src/pline.c	/^void mstatusline(struct monst *mtmp) {$/;"	f
mstoning	src/mon.c	744;"	d	file:
mstrategy	include/monst.h	/^	long mstrategy;		\/* for monsters with mflag3: current strategy *\/$/;"	m	struct:monst
mstrength	src/monstr.c	/^int mstrength(struct permonst mon) {$/;"	f
mstun	include/monst.h	/^	bool mstun;	\/* stunned (off balance) *\/$/;"	m	struct:monst
msummon	src/minion.c	/^void msummon(struct monst *mon) {$/;"	f
mswings	src/mhitu.c	/^static void mswings(struct monst *mtmp, struct obj *otemp) {$/;"	f	file:
mswingsm	src/mhitm.c	/^static void mswingsm(struct monst *magr, struct monst *mdef, struct obj *otemp) {$/;"	f	file:
mtame	include/monst.h	/^	schar mtame;		\/* level of tameness, implies peaceful *\/$/;"	m	struct:monst
mtele_trap	src/teleport.c	/^void mtele_trap (struct monst *mtmp, struct trap *trap, int in_sight) {$/;"	f
mtimedone	include/you.h	/^	int mh, mhmax, mtimedone;	\/* for polymorph-self *\/$/;"	m	struct:you
mtrack	include/monst.h	/^	coord mtrack[MTSZ];	\/* monster track *\/$/;"	m	struct:monst
mtraitor	include/monst.h	/^	bool mtraitor;	\/* Former pet that turned traitor *\/$/;"	m	struct:monst
mtrapped	include/monst.h	/^	bool mtrapped;	\/* trapped in a pit, web or bear trap *\/$/;"	m	struct:monst
mtrapseen	include/monst.h	/^	long mtrapseen;		\/* bitmap of traps we've been trapped in *\/$/;"	m	struct:monst
mtype	include/artifact.h	/^	unsigned long mtype;	\/* monster type, symbol, or flag *\/$/;"	m	struct:artifact
multi	src/decl.c	/^int multi = 0;$/;"	v
multi_one	src/decl.c	/^boolean multi_one = false;	\/* used by dofire() and throw_the_obj() *\/$/;"	v
multishot	include/decl.h	/^extern struct multishot {$/;"	s
mummynum	include/you.h	/^	      mummynum,		\/* PM_ as a mummy *\/$/;"	m	struct:Race
mundetected	include/monst.h	/^	bool mundetected;	\/* not seen in present hiding place *\/$/;"	m	struct:monst
munge_xlstring	src/topten.c	/^static void munge_xlstring(char *dest, char *src, int n) {$/;"	f	file:
mungspaces	src/hacklib.c	/^char *mungspaces(char *bp) {$/;"	f
munstone	src/muse.c	/^boolean munstone(struct monst *mon, boolean by_you) {$/;"	f
musable	src/muse.c	/^static struct musable {$/;"	s	file:
mustgetmail	src/mail.c	/^int mustgetmail = -1;$/;"	v
mux	include/monst.h	/^	xchar mux, muy;		\/* where the monster thinks you are *\/$/;"	m	struct:monst
muy	include/monst.h	/^	xchar mux, muy;		\/* where the monster thinks you are *\/$/;"	m	struct:monst
mv	include/flag.h	/^	bool  mv;$/;"	m	struct:flag
mv_bubble	src/mkmaze.c	/^static void mv_bubble(struct bubble *b,int dx, int dy, boolean ini) {$/;"	f	file:
mvault_tele	src/teleport.c	/^static void mvault_tele(struct monst *mtmp) {$/;"	f	file:
mvflags	include/decl.h	/^	uchar	mvflags;$/;"	m	struct:mvitals
mvitals	include/decl.h	/^extern struct mvitals {$/;"	s
mvitals	src/decl.c	/^struct mvitals mvitals[NUMMONS];$/;"	v	typeref:struct:mvitals
mw	include/monst.h	/^	struct obj *mw;$/;"	m	struct:monst	typeref:struct:monst::obj
mx	include/monst.h	/^	xchar mx, my;$/;"	m	struct:monst
mx	win/curses/cursmesg.c	/^static int mx = 0;$/;"	v	file:
mxlth	include/monst.h	/^	short mxlth;		\/* length of following data *\/$/;"	m	struct:monst
my	include/monst.h	/^	xchar mx, my;$/;"	m	struct:monst
my	win/curses/cursmesg.c	/^static int my = 0;              \/* message window text location *\/$/;"	v	file:
mydogs	src/decl.c	/^struct monst *mydogs = NULL;$/;"	v	typeref:struct:monst
mzapmsg	src/muse.c	/^static void mzapmsg(struct monst *mtmp, struct obj *otmp, boolean self) {$/;"	f	file:
n	include/decl.h	/^	int n, i;$/;"	m	struct:multishot
n_brs	build-linux/src/dgn_yacc.c	/^static int in_dungeon = 0, n_dgns = -1, n_levs = -1, n_brs = -1;$/;"	v	file:
n_brs	src/dungeon.c	/^	int	n_brs;	\/* number of tmpbranch entries *\/$/;"	m	struct:proto_dungeon	file:
n_dgns	build-linux/src/dgn_yacc.c	/^static int in_dungeon = 0, n_dgns = -1, n_levs = -1, n_brs = -1;$/;"	v	file:
n_dgns	src/dungeon.c	/^int n_dgns;				\/* number of dungeons (used here,  *\/$/;"	v
n_ids_mapped	src/restore.c	/^static int n_ids_mapped = 0;$/;"	v	file:
n_levs	build-linux/src/dgn_yacc.c	/^static int in_dungeon = 0, n_dgns = -1, n_levs = -1, n_brs = -1;$/;"	v	file:
n_levs	src/dungeon.c	/^	int	n_levs;	\/* number of tmplevel entries *\/$/;"	m	struct:proto_dungeon	file:
n_loc_filled	src/mkmap.c	/^static int n_loc_filled;$/;"	v	file:
n_menu_mapped	src/options.c	/^static short n_menu_mapped = 0;$/;"	v	file:
n_mlist	build-linux/src/lev_yacc.c	/^int n_olist = 0, n_mlist = 0, n_plist = 0;$/;"	v
n_monst	include/region.h	/^	short n_monst;			\/* Number of monsters inside this region *\/$/;"	m	struct:__anon29
n_olist	build-linux/src/lev_yacc.c	/^int n_olist = 0, n_mlist = 0, n_plist = 0;$/;"	v
n_or_more	src/pickup.c	/^static bool n_or_more(struct obj *obj) {$/;"	f	file:
n_plist	build-linux/src/lev_yacc.c	/^int n_olist = 0, n_mlist = 0, n_plist = 0;$/;"	v
n_regions	src/region.c	/^static int n_regions = 0;$/;"	v	file:
naltar	build-linux/src/lev_yacc.c	/^uint naltar = 0, ncorridor = 0, nrooms = 0, ngold = 0, nengraving = 0;$/;"	v
naltar	include/sp_lev.h	/^	char naltar;$/;"	m	struct:__anon52
naltar	include/sp_lev.h	/^	char naltar;$/;"	m	struct:_room
nambuf	src/questpgr.c	/^static char	nambuf[sizeof cvt_buf];$/;"	v	file:
name	include/artifact.h	/^	const char  *name;$/;"	m	struct:artifact
name	include/decl.h	/^	char name[PL_PSIZ];$/;"	m	struct:tileset
name	include/dgn_file.h	/^	char	name[24],$/;"	m	struct:tmpdungeon
name	include/dgn_file.h	/^	char	name[24];	\/* destination dungeon name *\/$/;"	m	struct:tmpbranch
name	include/dgn_file.h	/^	char	name[24];$/;"	m	struct:tmplevel
name	include/mkroom.h	/^	const char *name;	\/* name of the shop type *\/$/;"	m	struct:shclass
name	include/sp_lev.h	/^	Str_or_Len name, appear_as;$/;"	m	struct:__anon35
name	include/sp_lev.h	/^	Str_or_Len name;$/;"	m	struct:__anon36
name	include/sp_lev.h	/^	char  *name;$/;"	m	struct:_room
name	include/winprocs.h	/^	const char *name;$/;"	m	struct:window_procs
name	include/you.h	/^	struct RoleName name;	\/* the role's name (from u_init.c) *\/$/;"	m	struct:Role	typeref:struct:Role::RoleName
name	src/objnam.c	/^	const char *name, oclass;$/;"	m	struct:o_range	file:
name	src/objnam.c	/^	const char *name;$/;"	m	struct:Jitem	file:
name	src/options.c	/^	char *name;$/;"	m	struct:name_value	file:
name	src/options.c	/^	const char *name, *descr;$/;"	m	struct:Comp_Opt	file:
name	src/options.c	/^	const char *name;$/;"	m	struct:Bool_Opt	file:
name	src/options.c	/^	const char *name;$/;"	m	struct:Bool_Tile_Opt	file:
name	src/options.c	/^	const char *name;$/;"	m	struct:__anon13	file:
name	src/options.c	/^	const char *name;$/;"	m	struct:__anon14	file:
name	src/options.c	/^	const char *name;$/;"	m	struct:__anon15	file:
name	src/timeout.c	/^	const char *name;$/;"	m	struct:__anon19	file:
name	src/topten.c	/^	char name[NAMSZ+1];$/;"	m	struct:toptenentry	file:
name	src/weapon.c	/^	const char *name;$/;"	m	struct:skill_range	file:
name	util/lev_main.c	/^	const char *name;$/;"	m	struct:__anon20	file:
name	util/lev_main.c	/^	const char *name;$/;"	m	struct:__anon21	file:
name	win/proxy/getopt.c	/^    const char *name;$/;"	m	struct:Bool_Opt	file:
name_to_mon	src/mondata.c	/^int name_to_mon (const char *in_str) {$/;"	f
name_value	src/options.c	/^struct name_value {$/;"	s	file:
names	src/invent.c	/^static const char *names[] = { 0,$/;"	v	file:
nameshk	src/shknam.c	/^nameshk(shk, nlp)$/;"	f	file:
nap	include/flag.h	/^	bool  nap;		\/* `timed_delay' option for display effects *\/$/;"	m	struct:flag
nartifact_exist	src/artifact.c	/^int nartifact_exist(void) {$/;"	f
nasties	src/wizard.c	/^static const int nasties[] = {$/;"	v	file:
nasty	src/wizard.c	/^nasty (struct monst *mcast) {$/;"	f
ncorr	include/sp_lev.h	/^	xchar ncorr;$/;"	m	struct:__anon56
ncorridor	build-linux/src/lev_yacc.c	/^uint naltar = 0, ncorridor = 0, nrooms = 0, ngold = 0, nengraving = 0;$/;"	v
ndb	build-linux/src/lev_yacc.c	/^uint ndb = 0, nwalk = 0, npart = 0, ndig = 0, nlad = 0, nstair = 0;$/;"	v
ndemon	src/minion.c	/^int ndemon(aligntyp atyp) {$/;"	f
ndig	build-linux/src/lev_yacc.c	/^uint ndb = 0, nwalk = 0, npart = 0, ndig = 0, nlad = 0, nstair = 0;$/;"	v
ndig	include/sp_lev.h	/^	char ndig;$/;"	m	struct:__anon52
ndir	src/decl.c	/^const char ndir[] = "47896321><";	\/* number pad mode *\/$/;"	v
ndoor	build-linux/src/lev_yacc.c	/^uint nlreg = 0, nreg = 0, ndoor = 0, ntrap = 0, nmons = 0, nobj = 0;$/;"	v
ndoor	include/sp_lev.h	/^	char ndoor;$/;"	m	struct:__anon52
ndoor	include/sp_lev.h	/^	char ndoor;$/;"	m	struct:_room
ndrawbridge	include/sp_lev.h	/^	char ndrawbridge;$/;"	m	struct:__anon52
near_capacity	src/hack.c	/^int near_capacity(void) {$/;"	f
nearloadmsg	src/pickup.c	/^static const char nearloadmsg[] = "You have much trouble lifting";$/;"	v	file:
nec_abil	src/attrib.c	/^nec_abil[] = { {   1, &(HDrain_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
nec_tech	src/tech.c	/^nec_tech[] = { {   1, T_REINFORCE, 1},$/;"	v	typeref:struct:	file:
need_four	include/mondata.h	28;"	d
need_one	include/mondata.h	25;"	d
need_redraw	src/options.c	/^static boolean need_redraw; \/* for doset() *\/$/;"	v	file:
need_three	include/mondata.h	27;"	d
need_two	include/mondata.h	26;"	d
needspick	include/mondata.h	49;"	d
nemdead	src/quest.c	/^nemdead (void) {$/;"	f
nemesis_level	include/decl.h	109;"	d
nemesis_speaks	src/quest.c	/^nemesis_speaks (void) {$/;"	f
neminame	src/questpgr.c	/^static const char *neminame(void) {$/;"	f	file:
neminum	include/you.h	/^	      neminum,		\/* PM_ of quest nemesis (questpgr.c) *\/$/;"	m	struct:Role
nengraving	build-linux/src/lev_yacc.c	/^uint naltar = 0, ncorridor = 0, nrooms = 0, ngold = 0, nengraving = 0;$/;"	v
nengraving	include/sp_lev.h	/^	char nengraving;$/;"	m	struct:__anon52
nengraving	include/sp_lev.h	/^	char nengraving;$/;"	m	struct:_room
nentries	include/dlb.h	/^	long nentries;	\/* # of files in directory *\/$/;"	m	struct:dlb_library
nesting	src/files.c	/^static int nesting = 0;$/;"	v	file:
nethack_char	win/curses/curswins.c	/^} nethack_char;$/;"	t	typeref:struct:nhchar	file:
nethack_exit	src/end.c	59;"	d	file:
nethack_exit	sys/share/pcmain.c	37;"	d	file:
nethack_exit	sys/share/pcsys.c	/^void nethack_exit(int code) {$/;"	f
nethack_exit	sys/share/pcsys.c	19;"	d	file:
nethack_thinks_it_is_open	src/files.c	/^	boolean nethack_thinks_it_is_open;	\/* Does NetHack think it's open?       *\/$/;"	m	struct:level_ftrack	file:
nethack_wid	win/curses/curswins.c	/^} nethack_wid;$/;"	t	typeref:struct:nhwd	file:
nethack_window	win/curses/curswins.c	/^} nethack_window;$/;"	t	typeref:struct:__anon22	file:
neutral_minion	src/minion.c	/^int neutral_minion(int difficulty) {$/;"	f
neutral_quest_level	include/decl.h	115;"	d
never	src/cmd.c	/^               have_never[] = "have never ", never[] = "never ";$/;"	v	file:
new	include/global.h	136;"	d
new	src/display.c	/^	xchar new;		\/* perhaps move this bit into the rm strucure. *\/$/;"	m	struct:__anon3	file:
new_angle	src/vision.c	/^new_angle(lev, sv, row, col)$/;"	f	file:
new_angle	src/vision.c	423;"	d	file:
new_dlevel	src/do.c	/^d_level new_dlevel = {0, 0};$/;"	v
new_light_source	src/light.c	/^void new_light_source(xchar x, xchar y, int range, int type, anything id) {$/;"	f
new_loc	src/mkmap.c	92;"	d	file:
new_locations	src/mkmap.c	/^char *new_locations;$/;"	v
new_were	src/were.c	/^void new_were (struct monst *mon) {$/;"	f
newcham	src/mon.c	/^int newcham(struct monst *mtmp, struct permonst *mdat, boolean polyspot,	boolean msg) {$/;"	f
newengr	include/engrave.h	24;"	d
newexplevel	src/exper.c	/^void newexplevel(void) {$/;"	f
newfruit	include/objclass.h	188;"	d
newgame	src/allmain.c	/^void newgame(void) {$/;"	f
newhp	src/attrib.c	/^int newhp(void) {$/;"	f
newmail	src/mail.c	/^static void newmail(struct mail_info *info) {$/;"	f	file:
newman	src/polyself.c	/^newman() {$/;"	f	file:
newmonst	include/monst.h	175;"	d
newobj	include/obj.h	131;"	d
news	include/flag.h	/^	bool  news;		\/* print news *\/$/;"	m	struct:instance_flags
newseg	src/worm.c	8;"	d	file:
newsym	src/display.c	/^void newsym(int x, int y) {$/;"	f
newtrap	include/trap.h	36;"	d
newttentry	src/topten.c	11;"	d	file:
newuexp	src/exper.c	/^\/*static*\/ long newuexp(int lev) {$/;"	f
newuhs	src/eat.c	/^void newuhs(boolean incr) {$/;"	f
next	include/color.h	/^	const struct text_color_option *next;$/;"	m	struct:text_color_option	typeref:struct:text_color_option::text_color_option
next	include/color.h	/^	struct menucoloring *next;$/;"	m	struct:menucoloring	typeref:struct:menucoloring::menucoloring
next	include/color.h	/^	struct percent_color_option *next;$/;"	m	struct:percent_color_option	typeref:struct:percent_color_option::percent_color_option
next	include/decl.h	/^	struct _plinemsg *next;$/;"	m	struct:_plinemsg	typeref:struct:_plinemsg::_plinemsg
next	include/decl.h	/^	struct autopickup_exception *next;$/;"	m	struct:autopickup_exception	typeref:struct:autopickup_exception::autopickup_exception
next	include/dungeon.h	/^	struct	s_level	*next;$/;"	m	struct:s_level	typeref:struct:s_level::s_level
next	include/dungeon.h	/^	struct branch *next;	\/* next in the branch chain *\/$/;"	m	struct:branch	typeref:struct:branch::branch
next	include/func_tab.h	/^	struct binding_list_tab * next;$/;"	m	struct:binding_list_tab	typeref:struct:binding_list_tab::binding_list_tab
next	include/lev.h	/^	struct bubble *prev, *next; \/* need to traverse the list up and down *\/$/;"	m	struct:bubble	typeref:struct:bubble::
next	include/lev.h	/^	struct container *next;$/;"	m	struct:container	typeref:struct:container::container
next	include/lev.h	/^	struct ls_t *next;$/;"	m	struct:ls_t	typeref:struct:ls_t::ls_t
next	include/rm.h	/^	struct damage *next;$/;"	m	struct:damage	typeref:struct:damage::damage
next	include/timeout.h	/^	struct fe *next;		\/* next item in chain *\/$/;"	m	struct:fe	typeref:struct:fe::fe
next	include/wintty.h	/^	struct tty_mi *next;$/;"	m	struct:tty_mi	typeref:struct:tty_mi::tty_mi
next	src/explode.c	/^	struct scatter_chain *next;	\/* pointer to next scatter item	*\/$/;"	m	struct:scatter_chain	typeref:struct:scatter_chain::scatter_chain	file:
next	src/restore.c	/^	struct bucket *next;$/;"	m	struct:bucket	typeref:struct:bucket::bucket	file:
next	src/sounds.c	/^	struct audio_mapping_rec *next;$/;"	m	struct:audio_mapping_rec	typeref:struct:audio_mapping_rec::audio_mapping_rec	file:
next	win/proxy/dlbh.c	/^    struct dlb_node *next;$/;"	m	struct:dlb_node	typeref:struct:dlb_node::dlb_node	file:
next_check	src/attrib.c	/^static long next_check = 600L;	\/* arbitrary first setting *\/$/;"	v	file:
next_cmap	win/proxy/glyphmap.c	/^    int group, first_cmap, next_cmap;	\/* first <= cmap < next *\/$/;"	m	struct:__anon23	file:
next_item	win/curses/cursdial.c	/^    struct nhmi *next_item;     \/* Pointer to next entry *\/$/;"	m	struct:nhmi	typeref:struct:nhmi::nhmi	file:
next_level	src/dungeon.c	/^void next_level(boolean at_stairs) {$/;"	f
next_menu	win/curses/cursdial.c	/^    struct nhm *next_menu;      \/* Pointer to next entry *\/$/;"	m	struct:nhm	typeref:struct:nhm::nhm	file:
next_mesg	win/curses/cursmesg.c	/^    struct nhpm *next_mesg;     \/* Pointer to next message *\/$/;"	m	struct:nhpm	typeref:struct:nhpm::nhpm	file:
next_opt	src/options.c	/^void next_opt(winid datawin, const char *str) {$/;"	f
next_shkp	src/shk.c	/^static struct monst * next_shkp(struct monst *shkp, boolean withbill) {$/;"	f	file:
next_to_u	src/apply.c	/^boolean next_to_u() {$/;"	f
next_wid	win/curses/curswins.c	/^    struct nhwd *next_wid;      \/* Pointer to next entry *\/$/;"	m	struct:nhwd	typeref:struct:nhwd::nhwd	file:
nextf	include/objclass.h	/^	struct fruit *nextf;$/;"	m	struct:fruit	typeref:struct:fruit::fruit
nexthere	include/obj.h	20;"	d
nextobuf	src/objnam.c	/^static char * nextobuf (void) {$/;"	f	file:
nexttodoor	src/mkroom.c	/^boolean nexttodoor(int sx, int sy) {$/;"	f
nfountain	build-linux/src/lev_yacc.c	/^uint nfountain = 0, npool = 0, nsink = 0, npass = 0;$/;"	v
nfountain	include/sp_lev.h	/^	char nfountain;$/;"	m	struct:__anon52
nfountain	include/sp_lev.h	/^	char nfountain;$/;"	m	struct:_room
nfountains	include/rm.h	/^	uchar	nfountains;		\/* number of fountains on level *\/$/;"	m	struct:levelflags
ngod	include/you.h	/^	const char *lgod, *ngod, *cgod; \/* god names (from pray.c) *\/$/;"	m	struct:Role
ngold	build-linux/src/lev_yacc.c	/^uint naltar = 0, ncorridor = 0, nrooms = 0, ngold = 0, nengraving = 0;$/;"	v
ngold	include/sp_lev.h	/^	char ngold;$/;"	m	struct:__anon52
ngold	include/sp_lev.h	/^	char ngold;$/;"	m	struct:_room
nh_CD	include/tcap.h	31;"	d
nh_CM	include/tcap.h	29;"	d
nh_HE	include/tcap.h	33;"	d
nh_HI	include/tcap.h	32;"	d
nh_ND	include/tcap.h	30;"	d
nh_UE	include/tcap.h	35;"	d
nh_US	include/tcap.h	34;"	d
nh_doprev_message	include/winprocs.h	113;"	d
nh_getegid	sys/unix/unixres.c	/^nh_getegid()$/;"	f
nh_getenv	src/options.c	/^char * nh_getenv (const char *ev) {$/;"	f
nh_geteuid	sys/unix/unixres.c	/^nh_geteuid()$/;"	f
nh_getgid	sys/unix/unixres.c	/^nh_getgid()$/;"	f
nh_getresgid	sys/unix/unixres.c	/^nh_getresgid(rgid, egid, sgid)$/;"	f
nh_getresuid	sys/unix/unixres.c	/^nh_getresuid(ruid, euid, suid)$/;"	f
nh_getuid	sys/unix/unixres.c	/^nh_getuid()$/;"	f
nh_option_get_boolopt	src/options.c	/^void * nh_option_get_boolopt() {$/;"	f
nh_poskey	include/winprocs.h	111;"	d
nh_timeout	src/timeout.c	/^void nh_timeout (void) {$/;"	f
nhbell	include/winprocs.h	112;"	d
nhchar	win/curses/curswins.c	/^typedef struct nhchar {$/;"	s	file:
nhfree	src/alloc.c	/^void nhfree(const void *ptr) {$/;"	f
nhgetch	src/cmd.c	/^char nhgetch(void) {$/;"	f
nhm	win/curses/cursdial.c	/^typedef struct nhm {$/;"	s	file:
nhmail_param	sys/winnt/mapimail.c	/^unsigned long nhmail_param;     \/* value passed to mail-thread      *\/$/;"	v
nhmailthread_ID	sys/winnt/mapimail.c	/^unsigned nhmailthread_ID;       \/* thread ID for mail-thread        *\/$/;"	v
nhmenu	win/curses/cursdial.c	/^} nhmenu;$/;"	t	typeref:struct:nhm	file:
nhmenu_item	win/curses/cursdial.c	/^} nhmenu_item;$/;"	t	typeref:struct:nhmi	file:
nhmenus	win/curses/cursdial.c	/^static nhmenu *nhmenus = NULL;  \/* NetHack menu array *\/$/;"	v	file:
nhmi	win/curses/cursdial.c	/^typedef struct nhmi {$/;"	s	file:
nhpm	win/curses/cursmesg.c	/^typedef struct nhpm {$/;"	s	file:
nhprev_mesg	win/curses/cursmesg.c	/^} nhprev_mesg;$/;"	t	typeref:struct:nhpm	file:
nhrect	include/rect.h	/^typedef struct nhrect {$/;"	s
nhrgb	win/curses/cursinit.c	/^} nhrgb;$/;"	t	typeref:struct:nhrgb_type	file:
nhrgb_type	win/curses/cursinit.c	/^typedef struct nhrgb_type {$/;"	s	file:
nhs	win/curses/cursstat.c	/^typedef struct nhs {$/;"	s	file:
nhstat	win/curses/cursstat.c	/^} nhstat;$/;"	t	typeref:struct:nhs	file:
nhusage	sys/share/pcmain.c	/^static void nhusage(void) {$/;"	f	file:
nhwd	win/curses/curswins.c	/^typedef struct nhwd {$/;"	s	file:
nhwid	win/curses/curswins.c	/^    winid nhwid;                \/* NetHack window id *\/$/;"	m	struct:nhwd	file:
nhwids	win/curses/curswins.c	/^static nethack_wid *nhwids = NULL;      \/* NetHack wid array *\/$/;"	v	file:
nhwin	win/curses/curswins.c	/^    winid nhwin;                \/* NetHack window id *\/$/;"	m	struct:__anon22	file:
nhwingetch	include/winprocs.h	110;"	d
nhwins	win/curses/curswins.c	/^static nethack_window nhwins[NHWIN_MAX];        \/* NetHack window array *\/$/;"	v	file:
nhx	include/dungeon.h	/^	xchar	nhx, nhy;	\/* opposite corner of invalid area *\/$/;"	m	struct:dest_area
nhy	include/dungeon.h	/^	xchar	nhx, nhy;	\/* opposite corner of invalid area *\/$/;"	m	struct:dest_area
nid	src/restore.c	/^		unsigned nid;	\/* new ID *\/$/;"	m	struct:bucket::__anon18	file:
night	src/hacklib.c	/^int night(void) {$/;"	f
ninetynine	src/gypsy.c	/^static void ninetynine(struct monst *mtmp) {$/;"	f	file:
nitems	include/wintty.h	/^	short nitems;		\/* total number of items (MENU) *\/$/;"	m	struct:WinDesc
nlad	build-linux/src/lev_yacc.c	/^uint ndb = 0, nwalk = 0, npart = 0, ndig = 0, nlad = 0, nstair = 0;$/;"	v
nlad	include/sp_lev.h	/^	char nlad;$/;"	m	struct:__anon52
nloc	include/sp_lev.h	/^	char *nloc;$/;"	m	struct:__anon52
nlocations	src/explode.c	/^	short nlocations, alocations;$/;"	m	struct:__anon9	file:
nlocset	include/sp_lev.h	/^	char nlocset;$/;"	m	struct:__anon52
nlreg	build-linux/src/lev_yacc.c	/^uint nlreg = 0, nreg = 0, ndoor = 0, ntrap = 0, nmons = 0, nobj = 0;$/;"	v
nlreg	include/sp_lev.h	/^	char nlreg;$/;"	m	struct:__anon52
nlx	include/dungeon.h	/^	xchar	nlx, nly;	\/* outline of invalid area *\/$/;"	m	struct:dest_area
nly	include/dungeon.h	/^	xchar	nlx, nly;	\/* outline of invalid area *\/$/;"	m	struct:dest_area
nmcpy	src/options.c	/^static void nmcpy(char	*dest, const char *src, int	maxlen) {$/;"	f	file:
nmod	src/eat.c	/^	int	nmod;		\/* coded nutrition per turn *\/$/;"	m	struct:__anon6	file:
nmon	include/monst.h	/^	struct monst *nmon;$/;"	m	struct:monst	typeref:struct:monst::monst
nmons	build-linux/src/lev_yacc.c	/^uint nlreg = 0, nreg = 0, ndoor = 0, ntrap = 0, nmons = 0, nobj = 0;$/;"	v
nmonster	include/sp_lev.h	/^	char nmonster;$/;"	m	struct:__anon52
nmonster	include/sp_lev.h	/^	char nmonster;$/;"	m	struct:_room
nmstat	src/mail.c	/^static struct stat omstat,nmstat;$/;"	v	typeref:struct:	file:
nn_play	src/gypsy.c	/^static int nn_play(xchar card, int total) {$/;"	f	file:
nn_playable	src/gypsy.c	/^static boolean nn_playable(xchar card, int total) {$/;"	f	file:
nn_pref	src/gypsy.c	/^static int nn_pref(xchar card) {$/;"	f	file:
noDEBUG	src/music.c	690;"	d	file:
no_bones_level	src/bones.c	/^static boolean no_bones_level(d_level *lev) {$/;"	f	file:
no_charge	include/obj.h	/^	bool no_charge;	\/* if shk shouldn't charge for this *\/$/;"	m	struct:obj
no_cheat	src/shk.c	21;"	d	file:
no_identifiers	win/proxy/mapid.c	/^    int no_identifiers;$/;"	m	struct:mapid__window	file:
no_money	src/shk.c	/^static const char no_money[] = "Moreover, you%s have no money.";$/;"	v	file:
no_of_wizards	include/flag.h	/^	unsigned no_of_wizards; \/* 0, 1 or 2 (wizard and his shadow) *\/$/;"	m	struct:flag
no_repeat	src/pline.c	/^static boolean no_repeat = false;$/;"	v	file:
no_tilesets	src/decl.c	/^int no_tilesets = 0;$/;"	v
noattacks	src/mhitm.c	/^bool noattacks(struct permonst *ptr) {$/;"	f
nobj	build-linux/src/lev_yacc.c	/^uint nlreg = 0, nreg = 0, ndoor = 0, ntrap = 0, nmons = 0, nobj = 0;$/;"	v
nobj	include/obj.h	/^	struct obj *nobj;$/;"	m	struct:obj	typeref:struct:obj::obj
nobject	include/sp_lev.h	/^	char nobject;$/;"	m	struct:__anon52
nobject	include/sp_lev.h	/^	char nobject;$/;"	m	struct:_room
nocmov	sys/winnt/nttty.c	/^nocmov(x, y)$/;"	f
nocmov	win/tty/termcap.c	/^void nocmov(int x, int y) {$/;"	f
nodes	win/proxy/dlbh.c	/^} *nodes = NULL;$/;"	v	typeref:struct:dlb_node
nofetch	src/dogmove.c	/^static const char nofetch[] = { BALL_CLASS, CHAIN_CLASS, ROCK_CLASS, 0 };$/;"	v	file:
nohandglow	src/uhitm.c	/^	static void nohandglow(struct monst *mon) {$/;"	f	file:
nohands	include/mondata.h	56;"	d
noises	src/mhitm.c	/^static void noises(struct monst *magr, struct attack *mattk) {$/;"	f	file:
noisetime	src/mhitm.c	/^static long noisetime;$/;"	v	file:
noit_Monnam	src/do_name.c	/^char *noit_Monnam(struct monst *mtmp) {$/;"	f
noit_mon_nam	src/do_name.c	/^char *noit_mon_nam(struct monst *mtmp) {$/;"	f
nolimbs	include/mondata.h	57;"	d
nommap	include/rm.h	/^	bool nommap;$/;"	m	struct:levelflags
nomore	src/muse.c	1052;"	d	file:
nomore	src/muse.c	1185;"	d	file:
nomore	src/muse.c	1748;"	d	file:
nomore	src/muse.c	1810;"	d	file:
nomore	src/muse.c	420;"	d	file:
nomore	src/muse.c	533;"	d	file:
nomovemsg	src/decl.c	/^const char *nomovemsg = 0;$/;"	v
nomul	src/hack.c	/^void nomul(int nval) {$/;"	f
noncoalignment	src/sp_lev.c	/^static int noncoalignment(aligntyp alignment) {$/;"	f	file:
noncorporeal	include/mondata.h	47;"	d
nonesuch	sys/share/unixtty.c	123;"	d	file:
nonesuch	sys/share/unixtty.c	82;"	d	file:
nonesuch	sys/share/unixtty.c	84;"	d	file:
nonesuch	sys/share/unixtty.c	87;"	d	file:
nonliving	include/mondata.h	195;"	d
nopick	include/flag.h	/^	bool  nopick;	\/* do not pickup objects (as when running) *\/$/;"	m	struct:flag
norevive	include/obj.h	78;"	d
normal	sys/winnt/nh340key.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
normal	sys/winnt/nhdefkey.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
normal	sys/winnt/nhraykey.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
not_capable	src/quest.c	/^not_capable() {$/;"	f	file:
not_enough_money	src/shk.c	/^static const char not_enough_money[] = "Besides, you don't have enough to interest %s.";$/;"	v	file:
not_fully_identified	src/objnam.c	/^bool not_fully_identified(struct obj *otmp) {$/;"	f
notake	include/mondata.h	58;"	d
noteleport	include/rm.h	/^	bool noteleport;$/;"	m	struct:levelflags
nothing	src/potion.c	/^static int nothing, unkn;$/;"	v	file:
notonhead	src/potion.c	/^boolean notonhead = false;$/;"	v
noun	include/you.h	/^	const char *noun;	\/* law\/balance\/chaos *\/$/;"	m	struct:Align
noun	include/you.h	/^	const char *noun;	\/* noun ("human", "elf") *\/$/;"	m	struct:Race
npages	include/wintty.h	/^	short npages;		\/* number of pages in menu (MENU) *\/$/;"	m	struct:WinDesc
npart	build-linux/src/lev_yacc.c	/^uint ndb = 0, nwalk = 0, npart = 0, ndig = 0, nlad = 0, nstair = 0;$/;"	v
npass	build-linux/src/lev_yacc.c	/^uint nfountain = 0, npool = 0, nsink = 0, npass = 0;$/;"	v
npass	include/sp_lev.h	/^	char npass;$/;"	m	struct:__anon52
npool	build-linux/src/lev_yacc.c	/^uint nfountain = 0, npool = 0, nsink = 0, npass = 0;$/;"	v
npool	include/sp_lev.h	/^	char npool;$/;"	m	struct:_room
nrects	include/region.h	/^	short  nrects;			\/* Number of rectangles  *\/$/;"	m	struct:__anon29
nreg	build-linux/src/lev_yacc.c	/^uint nlreg = 0, nreg = 0, ndoor = 0, ntrap = 0, nmons = 0, nobj = 0;$/;"	v
nreg	include/sp_lev.h	/^	char nreg;$/;"	m	struct:__anon52
nrmonst	include/sp_lev.h	/^	char nrmonst;$/;"	m	struct:__anon52
nrmonst	include/sp_lev.h	/^	char nrmonst;$/;"	m	struct:__anon56
nrndlreg	build-linux/src/lev_yacc.c	/^uint nrndlreg = 0;$/;"	v
nrndlreg	include/sp_lev.h	/^	char nrndlreg;$/;"	m	struct:__anon52
nrobjects	include/sp_lev.h	/^	char nrobjects;$/;"	m	struct:__anon52
nrobjects	include/sp_lev.h	/^	char nrobjects;$/;"	m	struct:__anon56
nroom	include/sp_lev.h	/^	xchar nroom;$/;"	m	struct:__anon56
nroom	src/decl.c	/^int nroom = 0;$/;"	v
nroom	src/extralev.c	/^	int nroom; \/* Only meaningful for "real" rooms *\/$/;"	m	struct:rogueroom	file:
nrooms	build-linux/src/lev_yacc.c	/^uint naltar = 0, ncorridor = 0, nrooms = 0, ngold = 0, nengraving = 0;$/;"	v
nseg	src/worm.c	/^	struct wseg *nseg;$/;"	m	struct:wseg	typeref:struct:wseg::wseg	file:
nsink	build-linux/src/lev_yacc.c	/^uint nfountain = 0, npool = 0, nsink = 0, npass = 0;$/;"	v
nsink	include/sp_lev.h	/^	char nsink;$/;"	m	struct:_room
nsinks	include/rm.h	/^	uchar	nsinks;		\/* number of sinks + toilets on the level *\/$/;"	m	struct:levelflags
nstair	build-linux/src/lev_yacc.c	/^uint ndb = 0, nwalk = 0, npart = 0, ndig = 0, nlad = 0, nstair = 0;$/;"	v
nstair	include/sp_lev.h	/^	char nstair;$/;"	m	struct:__anon52
nstair	include/sp_lev.h	/^	char nstair;$/;"	m	struct:_room
nsubroom	include/sp_lev.h	/^	int nsubroom;$/;"	m	struct:_room
nsubroom	src/decl.c	/^int nsubroom = 0;$/;"	v
nsubrooms	include/mkroom.h	/^	schar nsubrooms;	\/* number of subrooms *\/$/;"	m	struct:mkroom
nt_kbhit	sys/winnt/winnt.c	/^int (*nt_kbhit)() = def_kbhit;$/;"	v
nt_regularize	sys/winnt/winnt.c	/^nt_regularize(s)	\/* normalize file name *\/$/;"	f
ntcoord	sys/winnt/nttty.c	/^COORD ntcoord;$/;"	v
ntposkey	sys/winnt/nttty.c	/^ntposkey(x, y, mod)$/;"	f
ntrap	build-linux/src/lev_yacc.c	/^uint nlreg = 0, nreg = 0, ndoor = 0, ntrap = 0, nmons = 0, nobj = 0;$/;"	v
ntrap	include/sp_lev.h	/^	char ntrap;$/;"	m	struct:__anon52
ntrap	include/sp_lev.h	/^	char ntrap;$/;"	m	struct:_room
ntrap	include/trap.h	/^	struct trap *ntrap;$/;"	m	struct:trap	typeref:struct:trap::trap
nttty_check_stdio	sys/winnt/nttty.c	/^nttty_check_stdio()$/;"	f
nttty_kbhit	sys/winnt/nttty.c	/^nttty_kbhit()$/;"	f
nttty_open	sys/winnt/nttty.c	/^nttty_open()$/;"	f
nttty_preference_update	sys/winnt/nttty.c	/^void nttty_preference_update(const char *pref) {$/;"	f
nul	src/decl.c	/^const char nul[40] = DUMMY;			\/* contains zeros *\/$/;"	v
nul_gbuf	src/display.c	/^static gbuf_entry nul_gbuf = { 0, cmap_to_glyph(S_stone) };$/;"	v	file:
null	include/flag.h	/^	bool  null;		\/* OK to send nulls to the terminal *\/$/;"	m	struct:flag
nulls	src/save.c	/^static long nulls[10];$/;"	v	file:
nulls	src/save.c	28;"	d	file:
nullstr	sys/winnt/nttty.c	/^static char nullstr[] = "";$/;"	v	file:
nullstr	win/tty/termcap.c	/^static char nullstr[] = "";$/;"	v	file:
nulstr	win/tty/termcap.c	/^static char nulstr[] = "";$/;"	v	file:
num_dunlevs	include/dungeon.h	/^	xchar	num_dunlevs;	\/* number of levels in this dungeon *\/$/;"	m	struct:dungeon
num_entries	win/curses/cursdial.c	/^    int num_entries;            \/* Number of menu entries *\/$/;"	m	struct:nhm	file:
num_genocides	src/end.c	/^int num_genocides(void) {$/;"	f
num_horns	src/mondata.c	/^int num_horns (struct permonst *ptr) {$/;"	f
num_lines	win/curses/cursdial.c	/^    int num_lines;              \/* Number of lines entry uses on page *\/$/;"	m	struct:nhmi	file:
num_lregions	src/sp_lev.c	/^int num_lregions = 0;$/;"	v
num_messages	win/curses/cursmesg.c	/^static int num_messages = 0;$/;"	v	file:
num_pad	include/flag.h	/^	bool  num_pad;	\/* use numbers for movement commands *\/$/;"	m	struct:instance_flags
num_pad_mode	include/flag.h	/^	uchar num_pad_mode;$/;"	m	struct:instance_flags
num_pages	win/curses/cursdial.c	/^    int num_pages;              \/* Number of display pages for entry *\/$/;"	m	struct:nhm	file:
number_leashed	src/apply.c	/^int number_leashed (void) {$/;"	f
number_pad	include/winprocs.h	116;"	d
numberpad	sys/winnt/nh340key.c	/^boolean numberpad;$/;"	v
numberpad	sys/winnt/nhdefkey.c	/^boolean numberpad;$/;"	v
numberpad	sys/winnt/nhraykey.c	/^boolean numberpad;$/;"	v
numpad	sys/winnt/nh340key.c	/^boolean numpad;$/;"	v
numpad	sys/winnt/nh340key.c	/^}, numpad[PADKEYS] = {$/;"	v	typeref:struct:pad	file:
numpad	sys/winnt/nhdefkey.c	/^boolean numpad;$/;"	v
numpad	sys/winnt/nhdefkey.c	/^}, numpad[PADKEYS] = {$/;"	v	typeref:struct:pad	file:
numpad	sys/winnt/nhraykey.c	/^boolean numpad;$/;"	v
numpad	sys/winnt/nhraykey.c	/^}, numpad[PADKEYS] = {$/;"	v	typeref:struct:pad	file:
numpart	include/sp_lev.h	/^	char numpart;$/;"	m	struct:__anon53
nut	src/eat.c	/^	int nut;$/;"	m	struct:__anon4	file:
nv_range	include/you.h	/^	int nv_range;		\/* current night vision range *\/$/;"	m	struct:you
nwalk	build-linux/src/lev_yacc.c	/^uint ndb = 0, nwalk = 0, npart = 0, ndig = 0, nlad = 0, nstair = 0;$/;"	v
nwalk	include/sp_lev.h	/^	char nwalk;$/;"	m	struct:__anon52
nxt_engr	include/engrave.h	/^	struct engr *nxt_engr;$/;"	m	struct:engr	typeref:struct:engr::engr
nyNaq	include/hack.h	188;"	d
nyaq	include/hack.h	187;"	d
o	include/decl.h	/^	short o;$/;"	m	struct:multishot
o_id	include/obj.h	/^	unsigned o_id;$/;"	m	struct:obj
o_in	src/detect.c	/^struct obj *o_in(struct obj *obj, char oclass) {$/;"	f
o_material	src/detect.c	/^struct obj *o_material (struct obj *obj, uint material) {$/;"	f
o_on	src/invent.c	/^struct obj *o_on(uint id, struct obj *objchn) {$/;"	f
o_range	src/objnam.c	/^struct o_range {$/;"	s	file:
o_ranges	src/objnam.c	/^static const struct o_range o_ranges[] = {$/;"	v	typeref:struct:o_range	file:
o_unleash	src/apply.c	/^void o_unleash(struct obj *otmp	\/* otmp is about to be destroyed or stolen *\/) {$/;"	f
oarmed	include/obj.h	81;"	d
oartifact	include/obj.h	/^	char	oartifact;	\/* artifact array index *\/$/;"	m	struct:obj
ob	src/objnam.c	/^	int ob;$/;"	m	struct:alt_spellings	file:
obfree	src/shk.c	/^void obfree (struct obj *obj, struct obj *merge) {$/;"	f
obj	include/obj.h	/^struct obj {$/;"	s
obj	src/explode.c	/^	struct obj *obj;		\/* pointer to the object	*\/$/;"	m	struct:scatter_chain	typeref:struct:scatter_chain::obj	file:
obj_attach_mid	src/mkobj.c	/^struct obj * obj_attach_mid (struct obj *obj, unsigned mid) {$/;"	f
obj_chain	src/cmd.c	/^static void obj_chain(winid win, const char *src, struct obj *chain, long *total_count, long *total_size) {$/;"	f	file:
obj_color	src/mapglyph.c	32;"	d	file:
obj_delivery	src/dokick.c	/^void obj_delivery(void) {$/;"	f
obj_extract_self	src/mkobj.c	/^obj_extract_self (struct obj *obj) {$/;"	f
obj_here	src/invent.c	/^boolean obj_here(struct obj *obj, int x, int y) {$/;"	f
obj_ice_effects	src/mkobj.c	/^obj_ice_effects( int x, int y, boolean do_buried) {$/;"	f
obj_is_burning	src/light.c	/^boolean obj_is_burning(struct obj *obj) {$/;"	f
obj_is_local	src/timeout.c	/^boolean obj_is_local(struct obj *obj) {$/;"	f
obj_is_pname	src/objnam.c	/^boolean obj_is_pname(struct obj *obj) {$/;"	f
obj_merge_light_sources	src/light.c	/^void obj_merge_light_sources(struct obj *src, struct obj *dest) {$/;"	f
obj_move_light_source	src/light.c	/^void obj_move_light_source(struct obj *src, struct obj *dest) {$/;"	f
obj_move_timers	src/timeout.c	/^obj_move_timers (struct obj *src, struct obj *dest) {$/;"	f
obj_no_longer_held	src/do.c	/^void obj_no_longer_held(struct obj *obj) {$/;"	f
obj_resists	src/zap.c	/^boolean obj_resists(struct obj *obj, int ochance, int achance) {$/;"	f
obj_sanity_check	src/mkobj.c	/^void obj_sanity_check(void) {$/;"	f
obj_set_oinvis	src/zap.c	/^void obj_set_oinvis(struct obj *obj, boolean oinvis, boolean talk) {$/;"	f
obj_sheds_light	src/light.c	/^boolean obj_sheds_light(struct obj *obj) {$/;"	f
obj_shudders	src/zap.c	/^boolean obj_shudders(struct obj *obj) {$/;"	f
obj_split_light_source	src/light.c	/^void obj_split_light_source(struct obj *src, struct obj *dest) {$/;"	f
obj_split_timers	src/timeout.c	/^void obj_split_timers (struct obj *src, struct obj *dest) {$/;"	f
obj_state_names	src/mkobj.c	/^static const char *obj_state_names[NOBJ_STATES] = {$/;"	v	file:
obj_stop_timers	src/timeout.c	/^obj_stop_timers (struct obj *obj) {$/;"	f
obj_timer_checks	src/mkobj.c	/^static void obj_timer_checks(struct obj *otmp, xchar x, xchar y, int force \/* 0 = no force so do checks, <0 = force off, >0 force on *\/) {$/;"	f	file:
obj_to_any	src/hack.c	/^anything obj_to_any(struct obj *obj) {$/;"	f
obj_to_glyph	include/display.h	296;"	d
obj_to_let	src/invent.c	/^static char obj_to_let(struct obj *obj) {$/;"	f	file:
obj_typename	src/objnam.c	/^char * obj_typename (int otyp) {$/;"	f
obj_zapped	src/zap.c	/^static boolean obj_zapped;$/;"	v	file:
objclass	include/objclass.h	/^struct objclass {$/;"	s
objclass_unicode_codepoint	src/decl.c	/^glyph_t objclass_unicode_codepoint[NUM_OBJECTS] = DUMMY;$/;"	v
object	include/sp_lev.h	/^} object;$/;"	t	typeref:struct:__anon36
object_detect	src/detect.c	/^int object_detect($/;"	f
object_nam	include/mail.h	/^	const char *object_nam;		\/* text to tag object with *\/$/;"	m	struct:mail_info
objects	include/rm.h	/^	struct obj		*objects[COLNO][ROWNO];$/;"	m	struct:__anon30	typeref:struct:__anon30::obj
objects	include/sp_lev.h	/^	object **objects;$/;"	m	struct:__anon52
objects	include/sp_lev.h	/^	object **objects;$/;"	m	struct:_room
objects_init	src/objects.c	/^objects_init() {$/;"	f
objexplain	src/drawing.c	/^const char * const objexplain[] = {	\/* these match def_oc_syms, above *\/$/;"	v
objlist	include/rm.h	/^	struct obj		*objlist;$/;"	m	struct:__anon30	typeref:struct:__anon30::obj
objnum_to_glyph	include/display.h	312;"	d
obroken	include/obj.h	/^	bool obroken;	\/* lock has been broken *\/$/;"	m	struct:obj
observable_depth	src/topten.c	/^static xchar observable_depth(d_level *lev) {$/;"	f	file:
observe_quantum_cat	src/pickup.c	/^static void observe_quantum_cat(struct obj *box) {$/;"	f	file:
obsolete	include/flag.h	/^	bool	 obsolete;	\/* obsolete options can point at this, it isn't used *\/$/;"	m	struct:instance_flags
obstructed	src/lock.c	/^static boolean obstructed(int x, int y) {$/;"	f	file:
obuf	win/tty/wintty.c	/^static char obuf[BUFSIZ];	\/* BUFSIZ is defined in stdio.h *\/$/;"	v	file:
oc_armcat	include/objclass.h	84;"	d
oc_big	include/objclass.h	/^	bool oc_big;$/;"	m	struct:objclass
oc_bimanual	include/objclass.h	30;"	d
oc_bulky	include/objclass.h	31;"	d
oc_charged	include/objclass.h	/^	bool oc_charged; \/* may have +n or (n) charges *\/$/;"	m	struct:objclass
oc_class	include/objclass.h	/^	char	oc_class;		\/* object class *\/$/;"	m	struct:objclass
oc_color	include/objclass.h	/^	uchar	oc_color;		\/* color of the object *\/$/;"	m	struct:objclass
oc_cost	include/objclass.h	/^	short	oc_cost;		\/* base cost in shops *\/$/;"	m	struct:objclass
oc_delay	include/objclass.h	/^	schar	oc_delay;		\/* delay when using such an object *\/$/;"	m	struct:objclass
oc_descr	include/objclass.h	/^	const char *oc_descr;		\/* description when name unknown *\/$/;"	m	struct:objclass
oc_descr_idx	include/objclass.h	/^	short	oc_descr_idx;		\/* description when name unknown *\/$/;"	m	struct:objclass
oc_hitbon	include/objclass.h	108;"	d
oc_level	include/objclass.h	118;"	d
oc_magic	include/objclass.h	/^	bool oc_magic;	\/* inherently magical object *\/$/;"	m	struct:objclass
oc_merge	include/objclass.h	/^	bool oc_merge;	\/* merge otherwise equal objects *\/$/;"	m	struct:objclass
oc_name	include/objclass.h	/^	const char *oc_name;		\/* actual name *\/$/;"	m	struct:objclass
oc_name_idx	include/objclass.h	/^	short	oc_name_idx;		\/* index of actual name *\/$/;"	m	struct:objclass
oc_name_known	include/objclass.h	/^	bool oc_name_known;$/;"	m	struct:objclass
oc_nowish	include/objclass.h	/^	bool oc_nowish;	\/* cannot wish for this object *\/$/;"	m	struct:objclass
oc_nutrition	include/objclass.h	/^	unsigned short	oc_nutrition;	\/* food value *\/$/;"	m	struct:objclass
oc_oc1	include/objclass.h	/^	schar	oc_oc1, oc_oc2;$/;"	m	struct:objclass
oc_oc2	include/objclass.h	/^	schar	oc_oc1, oc_oc2;$/;"	m	struct:objclass
oc_oprop	include/objclass.h	/^	uchar	oc_oprop;		\/* property (invis, &c.) conveyed *\/$/;"	m	struct:objclass
oc_pre_discovered	include/objclass.h	/^	bool oc_pre_discovered;	\/* Already known at start of game; *\/$/;"	m	struct:objclass
oc_prob	include/objclass.h	/^	short	oc_prob;		\/* probability, used in mkobj() *\/$/;"	m	struct:objclass
oc_range	include/objclass.h	104;"	d
oc_rof	include/objclass.h	105;"	d
oc_skill	include/objclass.h	83;"	d
oc_subtyp	include/objclass.h	/^	schar	oc_subtyp;$/;"	m	struct:objclass
oc_syms	src/drawing.c	/^uchar oc_syms[MAXOCLASSES] = DUMMY; \/* the current object  display symbols *\/$/;"	v
oc_to_str	src/options.c	/^static void oc_to_str(char *src, char *dest) {$/;"	f	file:
oc_to_str	win/proxy/getopt.c	/^oc_to_str(src,dest)$/;"	f	file:
oc_tough	include/objclass.h	/^	bool oc_tough;	\/* hard gems\/rings *\/$/;"	m	struct:objclass
oc_uname	include/objclass.h	/^	char *	oc_uname;		\/* called by user *\/$/;"	m	struct:objclass
oc_unique	include/objclass.h	/^	bool oc_unique;	\/* special one-of-a-kind object *\/$/;"	m	struct:objclass
oc_uses_known	include/objclass.h	/^	bool oc_uses_known; \/* obj->known affects full decription *\/$/;"	m	struct:objclass
oc_weight	include/objclass.h	/^	unsigned short	oc_weight;	\/* encumbrance (1 cn = 0.1 lb.) *\/$/;"	m	struct:objclass
oc_wldam	include/objclass.h	/^	schar	oc_wsdam, oc_wldam;	\/* max small\/large monster damage *\/$/;"	m	struct:objclass
oc_wsdam	include/objclass.h	/^	schar	oc_wsdam, oc_wldam;	\/* max small\/large monster damage *\/$/;"	m	struct:objclass
ocarry	include/obj.h	22;"	d
occtime	src/decl.c	/^int occtime = 0;$/;"	v
occtxt	src/decl.c	/^const char *occtxt = DUMMY;$/;"	v
occupants	src/dbridge.c	/^static struct entity occupants[ENTITIES];$/;"	v	typeref:struct:entity	file:
occupation	src/decl.c	/^int (*occupation)(void);$/;"	v
occupied	src/mklev.c	/^boolean occupied(xchar x, xchar y) {$/;"	f
oclass	include/obj.h	/^	char	oclass;		\/* object class *\/$/;"	m	struct:obj
oclass	src/objnam.c	/^	const char *name, oclass;$/;"	m	struct:o_range	file:
oclass_names	src/drawing.c	/^const char * const oclass_names[] = {$/;"	v
ocontainer	include/obj.h	21;"	d
odd_skill_names	src/weapon.c	/^static const char * const odd_skill_names[] = {$/;"	v	file:
odiluted	include/obj.h	77;"	d
odrained	include/obj.h	82;"	d
oeaten	include/obj.h	/^	unsigned oeaten;	\/* nutrition left in food, if partly eaten *\/$/;"	m	struct:obj
oerodeproof	include/obj.h	/^	bool oerodeproof; \/* erodeproof weapon\/armor *\/$/;"	m	struct:obj
oextra	include/obj.h	/^	long oextra[1];		\/* object dependent info *\/$/;"	m	struct:obj
off_msg	src/do_wear.c	/^void off_msg(struct obj *otmp) {$/;"	f
offensive	src/muse.c	/^	struct obj *offensive;$/;"	m	struct:musable	typeref:struct:musable::obj	file:
offer_oracle	src/pray.c	/^static int offer_oracle (struct monst *mtmp, struct obj *otmp) {$/;"	f	file:
offered_artifact	include/quest.h	/^	bool offered_artifact;	\/* offered to leader *\/$/;"	m	struct:q_score
offset	include/qtext.h	/^	usize offset, size;$/;"	m	struct:qtmsg
offset	win/proxy/dlbh.c	/^    int offset;$/;"	m	struct:dlb_node	file:
offx	include/wintty.h	/^	uchar offx, offy;		\/* offset from topleft of display *\/$/;"	m	struct:WinDesc
offy	include/wintty.h	/^	uchar offx, offy;		\/* offset from topleft of display *\/$/;"	m	struct:WinDesc
oflag	src/files.c	/^	int oflag;				\/* open flags                         *\/$/;"	m	struct:level_ftrack	file:
oflags	include/sp_lev.h	/^	long  oflags;		\/* OBJF_foo flags *\/$/;"	m	struct:__anon36
ofood	include/obj.h	262;"	d
ogoal	include/edog.h	/^	coord ogoal;			\/* previous goal location *\/$/;"	m	struct:edog
ogx	include/vault.h	/^	xchar ogx, ogy;		\/* guard's last position *\/$/;"	m	struct:egd
ogy	include/vault.h	/^	xchar ogx, ogy;		\/* guard's last position *\/$/;"	m	struct:egd
ohitmon	src/mthrowu.c	/^int ohitmon(struct monst *mon, struct monst *mtmp,	struct obj *otmp,	int range,		boolean verbose)  	{$/;"	f
oil	src/trap.c	/^	static const char oil[] = { ALL_CLASSES, TOOL_CLASS, POTION_CLASS, 0 };$/;"	v	file:
oinit	src/o_init.c	/^oinit (void) {		\/* level dependent initialization *\/$/;"	f
oinvis	include/obj.h	/^	bool oinvis;	\/* invisible *\/$/;"	m	struct:obj
ok_align	src/role.c	/^ok_align(rolenum, racenum, gendnum, alignnum)$/;"	f
ok_gend	src/role.c	/^ok_gend(rolenum, racenum, gendnum, alignnum)$/;"	f
ok_race	src/role.c	/^ok_race(rolenum, racenum, gendnum, alignnum)$/;"	f
ok_role	src/role.c	/^ok_role(rolenum, racenum, gendnum, alignnum)$/;"	f
ok_to_quest	src/quest.c	/^ok_to_quest() {$/;"	f
ok_wep	src/pray.c	634;"	d	file:
okay	src/mkmaze.c	/^static boolean okay(int x, int y, int dir) {$/;"	f	file:
okdoor	src/mklev.c	/^int okdoor(xchar x, xchar y) {$/;"	f
oldfruit	src/restore.c	/^static struct fruit *oldfruit;$/;"	v	typeref:struct:fruit	file:
oldmonnm	include/monst.h	/^	int     oldmonnm;       \/* Old monster number - for polymorph *\/$/;"	m	struct:monst
oldtyp	include/obj.h	/^	short oldtyp;	\/* WAC for unpolymorph *\/$/;"	m	struct:obj
olist	build-linux/src/lev_yacc.c	/^static char olist[MAX_REGISTERS], mlist[MAX_REGISTERS];$/;"	v	file:
olocked	include/obj.h	/^	bool olocked;	\/* object is locked *\/$/;"	m	struct:obj
omon_adj	src/dothrow.c	/^int omon_adj(struct monst *mon, struct obj *obj, boolean mon_notices) {$/;"	f
omoves	src/restore.c	/^static long omoves;$/;"	v	file:
omstat	src/mail.c	/^static struct stat omstat,nmstat;$/;"	v	typeref:struct:stat	file:
on_altar	src/pray.c	118;"	d	file:
on_fire	src/mondata.c	/^const char * on_fire (struct permonst *mptr, struct attack *mattk) {$/;"	f
on_goal	src/quest.c	/^on_goal() {$/;"	f	file:
on_ground	src/wizard.c	/^static struct obj * on_ground(short	otyp) {$/;"	f	file:
on_level	src/dungeon.c	/^boolean on_level(d_level *lev1, d_level *lev2) {$/;"	f
on_locate	src/quest.c	/^on_locate() {$/;"	f	file:
on_msg	src/do_wear.c	/^static void on_msg(struct obj *otmp) {$/;"	f	file:
on_shrine	src/pray.c	119;"	d	file:
on_start	src/quest.c	/^on_start() {$/;"	f	file:
oname	src/do_name.c	/^struct obj *oname(struct obj *obj, const char *name) {$/;"	f
onamelth	include/obj.h	/^	uchar onamelth;		\/* length of name (following oxlth) *\/$/;"	m	struct:obj
onbill	src/shk.c	/^static struct bill_x * onbill(struct obj *obj, struct monst *shkp, boolean silent) {$/;"	f	file:
once	include/trap.h	/^	bool once;$/;"	m	struct:trap
online2	src/hacklib.c	/^boolean online2(int x0, int y0, int x1, int y1) {$/;"	f
onlineu	include/hack.h	278;"	d
only	src/display.c	2111;"	d	file:
only	src/invent.c	/^static coord only;$/;"	v	file:
only_here	src/invent.c	/^static bool only_here(struct obj *obj) {$/;"	f	file:
onlyspace	src/hacklib.c	/^boolean onlyspace(const char *s) {$/;"	f
onquest	src/quest.c	/^onquest (void) {$/;"	f
onscary	src/monmove.c	/^boolean onscary(int x, int y, struct monst *mtmp) {$/;"	f
ooze	src/mondata.c	/^static const char *ooze[4]	= { "ooze", "Ooze", "tremble", "Tremble" };$/;"	v	file:
open_bonesfile	src/files.c	/^int open_bonesfile(d_level *lev, char **bonesid) {$/;"	f
open_drawbridge	src/dbridge.c	/^void open_drawbridge (int x, int y) {$/;"	f
open_levelfile	src/files.c	/^int open_levelfile(int lev, char errbuf[]) {$/;"	f
open_levelfile	util/recover.c	/^open_levelfile(lev)$/;"	f
open_levelfile_exclusively	src/files.c	/^static int open_levelfile_exclusively(const char *name, int lev, int oflag) {$/;"	f	file:
open_library	src/dlb.c	/^boolean open_library(const char *lib_name, library *lp) {$/;"	f
open_savefile	src/files.c	/^int open_savefile(void) {$/;"	f
openit	src/detect.c	/^int openit(void) {$/;"	f
openone	src/detect.c	/^static void openone(int zx, int zy, void * num) {$/;"	f	file:
opentin	src/eat.c	/^static int opentin(void) {$/;"	f	file:
opoisoned	include/obj.h	86;"	d
opt_booldup	include/flag.h	/^	int	*opt_booldup;	\/* for duplication of bool opts in config file *\/$/;"	m	struct:instance_flags
opt_compdup	include/flag.h	/^	int	*opt_compdup;	\/* for duplication of compound opts in config file *\/$/;"	m	struct:instance_flags
opt_epilog	src/options.c	/^static const char *opt_epilog[] = {$/;"	v	file:
opt_intro	src/options.c	/^static const char *opt_intro[] = {$/;"	v	file:
optflags	src/options.c	/^	int optflags;$/;"	m	struct:Bool_Opt	file:
optflags	src/options.c	/^	int optflags;$/;"	m	struct:Comp_Opt	file:
optflags	win/proxy/getopt.c	/^    int optflags;$/;"	m	struct:Bool_Opt	file:
option_help	src/options.c	/^void option_help (void) {$/;"	f
oracle_level	include/decl.h	78;"	d
orc_abil	src/attrib.c	/^orc_abil[] = { {	1, &(HPoison_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
orcus_level	include/decl.h	89;"	d
ordin	src/hacklib.c	/^const char *ordin (uint n) {$/;"	f
oresist_disintegration	src/zap.c	3889;"	d	file:
orgdir	sys/share/pcmain.c	/^char orgdir[PATHLEN];	\/* also used in pcsys.c, amidos.c *\/$/;"	v
orient	include/wincurs.h	/^} orient;$/;"	t	typeref:enum:orient_type
orient_type	include/wincurs.h	/^typedef enum orient_type {$/;"	g
orientation	win/curses/curswins.c	/^    int orientation;            \/* Placement of window relative to map *\/$/;"	m	struct:__anon22	file:
orig_cursor	include/wincurs.h	/^int orig_cursor;	\/* Preserve initial cursor state *\/$/;"	v
orig_darkgray	win/curses/cursinit.c	/^nhrgb orig_darkgray;$/;"	v
orig_hiblue	win/curses/cursinit.c	/^nhrgb orig_hiblue;$/;"	v
orig_hicyan	win/curses/cursinit.c	/^nhrgb orig_hicyan;$/;"	v
orig_higreen	win/curses/cursinit.c	/^nhrgb orig_higreen;$/;"	v
orig_himagenta	win/curses/cursinit.c	/^nhrgb orig_himagenta;$/;"	v
orig_hired	win/curses/cursinit.c	/^nhrgb orig_hired;$/;"	v
orig_hiwhite	win/curses/cursinit.c	/^nhrgb orig_hiwhite;$/;"	v
orig_hiyellow	win/curses/cursinit.c	/^nhrgb orig_hiyellow;$/;"	v
orig_white	win/curses/cursinit.c	/^nhrgb orig_white;$/;"	v
orig_yellow	win/curses/cursinit.c	/^nhrgb orig_yellow;$/;"	v
origcsbi	sys/winnt/nttty.c	/^CONSOLE_SCREEN_BUFFER_INFO csbi, origcsbi;$/;"	v
orotten	include/obj.h	76;"	d
oselect	src/weapon.c	/^static struct obj *oselect(struct monst *mtmp, int x) {$/;"	f	file:
ospeed	sys/share/tclib.c	/^short ospeed;$/;"	v
ospeed	sys/share/unixtty.c	/^short ospeed = 0; \/\/ gets around "not defined" error message$/;"	v
ospeed	util/lev_main.c	/^short ospeed;$/;"	v
otense	src/objnam.c	/^char * otense (struct obj *otmp, const char *verb) {$/;"	f
otg_temp	src/decl.c	/^int otg_temp;			\/* used by object_to_glyph() [otg] *\/$/;"	v
oth_names	src/invent.c	/^static const char *oth_names[] = {$/;"	v	file:
oth_symbols	src/invent.c	/^static const char oth_symbols[] = {$/;"	v	file:
other_mon_has_arti	src/wizard.c	/^static struct monst * other_mon_has_arti(struct monst *mtmp, short	otyp) {$/;"	f	file:
otmp	src/mhitm.c	/^static struct obj *otmp;$/;"	v	typeref:struct:obj	file:
otmp	src/mhitu.c	/^static struct obj *otmp;$/;"	v	typeref:struct:obj	file:
otransit_msg	src/dokick.c	/^static void otransit_msg(struct obj *otmp, boolean nodrop, long num) {$/;"	f	file:
otrapped	include/obj.h	/^	bool otrapped;	\/* container is trapped *\/$/;"	m	struct:obj
otyp	include/artifact.h	/^	short	    otyp;$/;"	m	struct:artifact
otyp	include/obj.h	/^	short otyp;		\/* object class number *\/$/;"	m	struct:obj
out_container	src/pickup.c	/^static int out_container(struct obj *obj) {$/;"	f	file:
out_line	src/questpgr.c	/^static char	in_line[80], cvt_buf[64], out_line[128];$/;"	v	file:
outdec	sys/share/uudecode.c	/^void outdec(char *p, FILE *f, int n) {$/;"	f
outentry	src/topten.c	/^static void outentry(int rank, struct toptenentry *t1, boolean so) {$/;"	f	file:
outheader	src/topten.c	/^outheader() {$/;"	f	file:
outoracle	src/rumors.c	/^void outoracle(boolean special, boolean delphi) {$/;"	f
output_dgn	build-linux/src/dgn_yacc.c	/^void output_dgn(void) {$/;"	f
outrip	include/winprocs.h	138;"	d
outrumor	src/rumors.c	/^outrumor ($/;"	f
over_view	include/flag.h	/^	bool over_view;$/;"	m	struct:instance_flags
overloadmsg	src/pickup.c	/^static const char overloadmsg[] = "You have extreme difficulty lifting";$/;"	v	file:
override_confirmation	src/uhitm.c	/^static boolean override_confirmation = 0;$/;"	v	file:
owornmask	include/obj.h	/^	long owornmask;$/;"	m	struct:obj
owt	include/obj.h	/^	unsigned owt;$/;"	m	struct:obj
ox	include/obj.h	/^	xchar ox,oy;$/;"	m	struct:obj
ox	src/explode.c	/^	xchar ox;			\/* location of			*\/$/;"	m	struct:scatter_chain	file:
oxlth	include/obj.h	/^	short oxlth;		\/* length of following data *\/$/;"	m	struct:obj
oy	include/obj.h	/^	xchar ox,oy;$/;"	m	struct:obj
oy	src/explode.c	/^	xchar oy;			\/*	item			*\/$/;"	m	struct:scatter_chain	file:
pCheckInput	sys/winnt/nttty.c	/^CHECKINPUT pCheckInput;$/;"	v
pKeyHandlerName	sys/winnt/nttty.c	/^KEYHANDLERNAME pKeyHandlerName;$/;"	v
pNHkbhit	sys/winnt/nttty.c	/^NHKBHIT pNHkbhit;$/;"	v
pProcessKeystroke	sys/winnt/nttty.c	/^PROCESS_KEYSTROKE pProcessKeystroke;$/;"	v
pSourceAuthor	sys/winnt/nttty.c	/^SOURCEAUTHOR pSourceAuthor;$/;"	v
pSourceWhere	sys/winnt/nttty.c	/^SOURCEWHERE pSourceWhere;$/;"	v
p_aligntyp	src/pray.c	/^static aligntyp p_aligntyp;$/;"	v	file:
p_coaligned	src/priest.c	/^boolean p_coaligned(struct monst *priest) {$/;"	f
p_glow1	src/read.c	/^static void p_glow1 (struct obj *otmp) {$/;"	f	file:
p_glow2	src/read.c	/^static void p_glow2 (struct obj *otmp, const char *color) {$/;"	f	file:
p_trouble	src/pray.c	/^static int p_trouble;$/;"	v	file:
p_type	src/pray.c	/^static int p_type; \/* (-1)-3: (-1)=really naughty, 3=really good *\/$/;"	v	file:
pa	src/role.c	/^static char pa[NUM_BP], post_attribs;$/;"	v	file:
pacify_guards	src/mon.c	/^void pacify_guards() {$/;"	f
pacify_shk	src/shk.c	/^static void pacify_shk(struct monst *shkp) {$/;"	f	file:
pad	sys/winnt/nh340key.c	/^static const struct pad {$/;"	s	file:
pad	sys/winnt/nhdefkey.c	/^static const struct pad {$/;"	s	file:
pad	sys/winnt/nhraykey.c	/^static const struct pad {$/;"	s	file:
padding	include/sp_lev.h	/^	boolean	init_present, padding;$/;"	m	struct:__anon31
padding	include/sp_lev.h	/^	xchar rtype, padding;$/;"	m	struct:__anon44
page_num	win/curses/cursdial.c	/^    int page_num;               \/* Display page number for entry *\/$/;"	m	struct:nhmi	file:
page_wait	include/flag.h	/^	bool  page_wait;	\/* put up a --More-- after a page of messages *\/$/;"	m	struct:flag
panic	src/end.c	/^void panic (const char *str, ...) {$/;"	f
panic	util/panic.c	/^void panic(char *str, ...) {$/;"	f
panicking	include/decl.h	/^	int panicking;		\/* `panic' is in progress *\/$/;"	m	struct:sinfo
panicking	util/panic.c	/^boolean panicking;$/;"	v
paniclog	src/files.c	/^void paniclog(const char *type,	\/* panic, impossible, trickery *\/$/;"	f
pantheon	include/flag.h	/^	int	 pantheon;	\/* deity selection for priest character *\/$/;"	m	struct:flag
parent	include/sp_lev.h	/^	char  *parent;$/;"	m	struct:_room
parent_dlevel	src/dungeon.c	/^static xchar parent_dlevel(int i, struct proto_dungeon *pd) {$/;"	f	file:
parse	src/cmd.c	/^static char *parse(void) {$/;"	f	file:
parse_codepoint	src/options.c	/^static int parse_codepoint(char *codepoint) {$/;"	f	file:
parse_color_option	src/options.c	/^struct color_option parse_color_option(char *start) {$/;"	f
parse_config_line	src/files.c	/^int parse_config_line(FILE *fp, char *buf, char *tmp_ramdisk, char *tmp_levels) {$/;"	f
parse_escape_sequence	win/curses/cursmisc.c	/^parse_escape_sequence(void)$/;"	f	file:
parse_extended_option	src/options.c	/^static bool parse_extended_option(const char *str, char *option_name, char *option_value) {$/;"	f	file:
parse_monster_symbol	src/options.c	/^bool parse_monster_symbol(const char *str) {$/;"	f
parse_object_symbol	src/options.c	/^bool parse_object_symbol(const char *str) {$/;"	f
parse_status_color_option	src/options.c	/^boolean parse_status_color_option(char *start) {$/;"	f
parse_status_color_options	src/options.c	/^boolean parse_status_color_options(char *start) {$/;"	f
parse_symbol	src/options.c	/^bool parse_symbol(const char *str) {$/;"	f
parseauthentication	src/options.c	/^void parseauthentication (char *opts) {$/;"	f
parseauthopt	src/options.c	/^static void parseauthopt(char *opts) {$/;"	f	file:
parseautocomplete	src/cmd.c	/^void parseautocomplete(char* autocomplete, boolean condition) {$/;"	f
parsebindings	src/cmd.c	/^parsebindings(bindings)$/;"	f
parsemappings	src/cmd.c	/^void parsemappings(char* mapping) {$/;"	f
parseoptions	src/options.c	/^void parseoptions(char *opts, boolean tinitial, boolean tfrom_file) {$/;"	f
parsetileset	src/options.c	/^void parsetileset (char *opts) {$/;"	f
parsetilesetopt	src/options.c	/^static void parsetilesetopt (char *opts) {$/;"	f	file:
parts	include/sp_lev.h	/^	mazepart **parts;$/;"	m	struct:__anon53
pass_one	src/mkmap.c	/^static void pass_one(schar bg_typ, schar fg_typ) {$/;"	f	file:
pass_three	src/mkmap.c	/^static void pass_three(schar bg_typ, schar fg_typ) {$/;"	f	file:
pass_two	src/mkmap.c	/^static void pass_two(schar bg_typ, schar fg_typ) {$/;"	f	file:
passes	include/attk.h	/^	bool passes;		\/* Attack passes harmlessly through dmon *\/$/;"	m	struct:Attk
passes_bars	src/mondata.c	/^boolean passes_bars(struct permonst *mptr) {$/;"	f
passes_walls	include/mondata.h	45;"	d
passive	src/uhitm.c	/^	int passive(struct monst *mon, int mhit, int malive, uchar aatyp) {$/;"	f
passive_obj	src/uhitm.c	/^	void passive_obj(struct monst *mon, struct obj *obj, struct attack *mattk) {$/;"	f
passivemm	src/mhitm.c	/^static int passivemm(struct monst *magr, struct monst *mdef, boolean mhit, int mdead) {$/;"	f	file:
passiveum	src/mhitu.c	/^static int passiveum(struct permonst *olduasmon, struct monst *mtmp, struct attack *mattk) {$/;"	f	file:
passs	include/sp_lev.h	/^	digpos **passs;$/;"	m	struct:__anon52
patchlevel	src/topten.c	/^	int ver_major, ver_minor, patchlevel;$/;"	m	struct:toptenentry	file:
path	include/eleash.h	/^	coord path[ELEASH_PSZ+1];	\/* Positions containing extended leash,$/;"	m	struct:eleash
pathd2	include/eleash.h	/^	xchar pathd2;		\/* Length of path from hero to pet along$/;"	m	struct:eleash
pathlen	include/eleash.h	/^	xchar pathlen;		\/* Number of squares of extended leash$/;"	m	struct:eleash
pattern	include/decl.h	/^	char *pattern;$/;"	m	struct:_plinemsg
pattern	include/decl.h	/^	char *pattern;$/;"	m	struct:autopickup_exception
pawn	src/gypsy.c	/^static void pawn(struct monst *mtmp) {$/;"	f	file:
pawnables	src/gypsy.c	/^static const char pawnables[] = { ALLOW_COUNT, GEM_CLASS, 0 };$/;"	v	file:
pay	src/shk.c	/^static void pay(long tmp, struct monst *shkp) {$/;"	f	file:
pay_for_damage	src/shk.c	/^void pay_for_damage(const char *dmgstr, boolean cant_mollify) {$/;"	f
paybill	src/shk.c	/^boolean paybill(int croaked)	{$/;"	f
paygd	src/vault.c	/^paygd (void) {$/;"	f
pcmain	sys/share/pcmain.c	/^void pcmain(int argc, char **argv) {$/;"	f
peace_minded	src/makemon.c	/^boolean peace_minded(struct permonst *ptr) {$/;"	f
peaceful	include/sp_lev.h	/^	schar peaceful, asleep;$/;"	m	struct:__anon35
peaked_skill	src/weapon.c	/^static boolean peaked_skill(int skill) {$/;"	f	file:
peek_at_iced_corpse_age	src/mkobj.c	/^long peek_at_iced_corpse_age (struct obj *otmp) {$/;"	f
peffects	src/potion.c	/^int peffects (struct obj *otmp) {$/;"	f
perceives	include/mondata.h	79;"	d
percent_color_option	include/color.h	/^struct percent_color_option {$/;"	s
percent_success	src/spell.c	/^static int percent_success(int spell) {$/;"	f	file:
percentage	include/color.h	/^	int percentage;$/;"	m	struct:percent_color_option
percentage_color_of	src/botl.c	/^struct color_option percentage_color_of(int value, int max, const struct percent_color_option *color_options) {$/;"	f
perform_bwrite	include/lev.h	15;"	d
perform_invocation	include/decl.h	/^	bool perform_invocation; \/* You have performed the invocation$/;"	m	struct:u_achieve
perm_invent	include/flag.h	/^	bool  perm_invent;	\/* keep full inventories up until dismissed *\/$/;"	m	struct:flag
perminvis	include/monst.h	/^	bool perminvis;	\/* intrinsic minvis value *\/$/;"	m	struct:monst
permonst	include/permonst.h	/^struct permonst {$/;"	s
permonst_unicode_codepoint	src/decl.c	/^glyph_t permonst_unicode_codepoint[NUMMONS] = DUMMY;$/;"	v
pet	src/apply.c	/^	struct monst *pet;$/;"	m	struct:leash_check	typeref:struct:leash_check::monst	file:
pet_color	src/mapglyph.c	35;"	d	file:
pet_distress	src/sounds.c	/^pet_distress (struct monst *mtmp, int lev) {$/;"	f
pet_to_glyph	include/display.h	292;"	d
pet_type	src/dog.c	/^static int pet_type(void) {$/;"	f	file:
petnum	include/you.h	/^	      petnum,		\/* PM_ of preferred pet (NON_PM == random) *\/$/;"	m	struct:Role
petnum_to_glyph	include/display.h	316;"	d
pgetchar	src/cmd.c	/^char pgetchar(void) {		\/* curtesy of aeb@cwi.nl *\/$/;"	f
phase_of_the_moon	src/hacklib.c	/^int phase_of_the_moon(void) {$/;"	f
phead	src/cmd.c	/^static int phead, ptail, shead, stail;$/;"	v	file:
pick_align	src/role.c	/^pick_align (int rolenum, int racenum, int gendnum, int pickhow) {$/;"	f
pick_animal	src/mon.c	/^static int pick_animal() {$/;"	f	file:
pick_gend	src/role.c	/^pick_gend (int rolenum, int racenum, int alignnum, int pickhow) {$/;"	f
pick_level	src/dungeon.c	/^static xchar pick_level(boolean *map, int nth) {$/;"	f	file:
pick_lock	src/lock.c	/^int pick_lock (struct obj **pickp) {$/;"	f
pick_nasty	src/wizard.c	/^pick_nasty (void) {$/;"	f
pick_obj	src/pickup.c	/^struct obj * pick_obj(struct obj *otmp) {$/;"	f
pick_race	src/role.c	/^pick_race (int rolenum, int gendnum, int alignnum, int pickhow) {$/;"	f
pick_role	src/role.c	/^pick_role (int racenum, int gendnum, int alignnum, int pickhow) {$/;"	f
pick_room	src/mkroom.c	/^static struct mkroom * pick_room(boolean strict) {$/;"	f	file:
picked_container	src/shk.c	/^void picked_container(struct obj *obj) {$/;"	f
picking_at	src/lock.c	/^boolean picking_at(int x, int y) {$/;"	f
picking_lock	src/lock.c	/^boolean picking_lock(int *x, int *y) {$/;"	f
picklock	src/lock.c	/^static int picklock(void) {$/;"	f	file:
picktyp	src/lock.c	/^	int picktyp, chance, usedtime;$/;"	m	struct:xlock_s	file:
pickup	include/flag.h	/^	bool  pickup;	\/* whether you pickup or move and look *\/$/;"	m	struct:flag
pickup	src/pickup.c	/^pickup ($/;"	f
pickup_burden	include/flag.h	/^	int	 pickup_burden;		\/* maximum burden before prompt *\/$/;"	m	struct:flag
pickup_object	src/pickup.c	/^int pickup_object(struct obj *obj, long count, boolean telekinesis)	{$/;"	f
pickup_thrown	include/flag.h	/^	bool  pickup_thrown;		\/* auto-pickup items you threw *\/$/;"	m	struct:flag
pickup_types	include/flag.h	/^	char	 pickup_types[MAXOCLASSES];$/;"	m	struct:flag
piece	src/eat.c	/^	struct	obj *piece;	\/* the thing being eaten, or last thing that$/;"	m	struct:__anon6	typeref:struct:__anon6::obj	file:
pissed_off	include/quest.h	/^	bool pissed_off;		\/* got the leader angry *\/$/;"	m	struct:q_score
pl_character	src/decl.c	/^char pl_character[PL_CSIZ] = DUMMY;$/;"	v
pl_fruit	src/decl.c	/^char pl_fruit[PL_FSIZ] = DUMMY;$/;"	v
pl_race	src/decl.c	/^char pl_race = '\\0';$/;"	v
place	include/rm.h	/^	coord place;$/;"	m	struct:damage
place_branch	src/mklev.c	/^void place_branch(branch *br \/* branch to place *\/, xchar x, xchar y \/* location *\/) {$/;"	f
place_level	src/dungeon.c	/^static boolean place_level(int proto_index, struct proto_dungeon *pd) {$/;"	f	file:
place_lregion	src/mkmaze.c	/^void place_lregion(xchar lx, xchar ly, xchar hx, xchar hy, xchar nlx, xchar nly, xchar nhx, xchar nhy, xchar rtype, d_level *lev) {$/;"	f
place_monster	src/steed.c	/^place_monster (struct monst *mon, int x, int y) {$/;"	f
place_niche	src/mklev.c	/^static boolean place_niche(struct mkroom *aroom, int *dy, int *xx, int *yy) {$/;"	f	file:
place_object	src/mkobj.c	/^void place_object (struct obj *otmp, int x, int y) {$/;"	f
place_worm_seg	include/rm.h	533;"	d
place_worm_tail_randomly	src/worm.c	/^void place_worm_tail_randomly(struct monst *worm, xchar x, xchar y) {$/;"	f
place_wsegs	src/worm.c	/^place_wsegs (struct monst *worm) {$/;"	f
placebc	src/ball.c	/^void placebc(void) {$/;"	f
plalign	src/topten.c	/^	char plalign[ROLESZ+1];$/;"	m	struct:toptenentry	file:
play_sound_for_message	src/sounds.c	/^play_sound_for_message (const char *msg) {$/;"	f
play_usersound	sys/winnt/ntsound.c	/^void play_usersound(filename, volume)$/;"	f
player_flags	include/region.h	/^	boolean player_flags;		\/* (see above) *\/$/;"	m	struct:__anon29
player_menu	src/cmd.c	/^static const struct menu_tab player_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
player_selection	include/winprocs.h	80;"	d
playerlev	src/dungeon.c	/^	schar playerlev[MAXLINFO];$/;"	m	struct:lchoice	file:
playersteal	src/cmd.c	/^static int playersteal(void) {$/;"	f	file:
pleased	src/pray.c	/^static void pleased(aligntyp g_align) {$/;"	f	file:
plgend	src/topten.c	/^	char plgend[ROLESZ+1];$/;"	m	struct:toptenentry	file:
pline	src/pline.c	/^void pline(const char *line, ...) {$/;"	f
pline_msg	src/decl.c	/^struct _plinemsg *pline_msg = NULL;$/;"	v	typeref:struct:_plinemsg
plines	include/extern.h	1481;"	d
plist	build-linux/src/lev_yacc.c	/^static struct coord plist[MAX_REGISTERS];$/;"	v	typeref:struct:coord	file:
plist	include/wintty.h	/^	tty_menu_item **plist;	\/* menu page pointers (MENU) *\/$/;"	m	struct:WinDesc
plist_size	include/wintty.h	/^	short plist_size;		\/* size of allocated plist (MENU) *\/$/;"	m	struct:WinDesc
plname	src/decl.c	/^char plname[PL_NSIZ] = DUMMY;		\/* player name *\/$/;"	v
plnamesuffix	src/role.c	/^plnamesuffix (void) {$/;"	f
plrace	src/topten.c	/^	char plrace[ROLESZ+1];$/;"	m	struct:toptenentry	file:
plrole	src/topten.c	/^	char plrole[ROLESZ+1];$/;"	m	struct:toptenentry	file:
plur	include/hack.h	271;"	d
plusattr	src/attrib.c	/^const char	* const plusattr[] = {$/;"	v	file:
pluslvl	src/exper.c	/^void pluslvl(boolean incr \/* true iff via incremental experience growth$/;"	f
pm	src/mkroom.c	/^	unsigned	pm;$/;"	m	struct:__anon11	file:
pm_invisible	include/mondata.h	185;"	d
pm_mkclass	src/makemon.c	/^int pm_mkclass(char class, int spc) {$/;"	f
pm_resistance	include/mondata.h	11;"	d
pm_to_cham	src/mon.c	/^pm_to_cham (int mndx) {$/;"	f
pmatch	src/hacklib.c	/^boolean pmatch(const char *patrn, const char *strng) {$/;"	f
points	src/topten.c	/^	long points;$/;"	m	struct:toptenentry	file:
poiseff	src/mon.c	/^static const char *poiseff[] = {$/;"	v	file:
poiskilled	include/attk.h	/^	bool poiskilled;$/;"	m	struct:Attk
poismgs	include/attk.h	/^	bool poismgs;$/;"	m	struct:Attk
poison	include/attk.h	/^	bool poison;		\/* Poison was used *\/$/;"	m	struct:Attk
poisoned	src/mon.c	/^void poisoned (const char *string, int typ, const char *pname, int fatal) {$/;"	f
poisonous	include/mondata.h	86;"	d
poisontell	src/mon.c	/^void poisontell (int typ) {$/;"	f
poly_gender	src/polyself.c	/^poly_gender (void) {$/;"	f
poly_obj	src/zap.c	/^struct obj * poly_obj(struct obj *obj, int id) {$/;"	f
poly_when_stoned	src/mondata.c	/^boolean poly_when_stoned(struct permonst *ptr) {$/;"	f
poly_zapped	src/zap.c	/^static int poly_zapped;$/;"	v	file:
polyatwill	src/polyself.c	/^polyatwill (void) {$/;"	f
polyfodder	include/obj.h	263;"	d
polyman	src/polyself.c	/^static void polyman(const char *fmt, const char *arg) {$/;"	f	file:
polymon	src/polyself.c	/^int polymon ($/;"	f
polyok	include/mondata.h	90;"	d
polypiles	include/you.h	/^	long	polypiles;	\/* polymorphed an object *\/$/;"	m	struct:u_conduct
polyself	src/polyself.c	/^void polyself(boolean forcecontrol) {$/;"	f
polyselfs	include/you.h	/^	long	polyselfs;	\/* transformed yourself *\/$/;"	m	struct:u_conduct
polyuse	src/zap.c	/^static void polyuse( struct obj *objhdr, int mat, int minwt) {$/;"	f	file:
pool	include/sp_lev.h	/^} pool;$/;"	t	typeref:struct:__anon51
pools	include/sp_lev.h	/^	pool **pools;$/;"	m	struct:_room
popch	src/cmd.c	/^static char popch(void) {$/;"	f	file:
popup_dialog	include/flag.h	280;"	d
port_help	sys/share/pcmain.c	/^void port_help(void) {$/;"	f
port_help	sys/unix/unixmain.c	/^void port_help(void) {$/;"	f
portal_level	include/decl.h	96;"	d
portdebug	sys/winnt/nh340key.c	/^int portdebug;$/;"	v
portdebug	sys/winnt/nhdefkey.c	/^int portdebug;$/;"	v
portdebug	sys/winnt/nhraykey.c	/^int portdebug;$/;"	v
pos	include/decl.h	/^	coord	pos;$/;"	m	struct:dig_info
pos	include/sp_lev.h	/^	xchar wall, pos, secret, mask;$/;"	m	struct:__anon33
pos_to_room	src/mklev.c	/^static struct mkroom *pos_to_room(xchar x, xchar y) {$/;"	f	file:
possible_places	src/dungeon.c	/^static int possible_places(int idx, boolean *map, struct proto_dungeon *pd) {$/;"	f	file:
possibly_unwield	src/weapon.c	/^void possibly_unwield(struct monst *mon, boolean polyspot) {$/;"	f
post_attribs	src/role.c	/^static char pa[NUM_BP], post_attribs;$/;"	v	file:
postadjabil	src/attrib.c	/^static void postadjabil(long *ability) {$/;"	f	file:
potionbreathe	src/potion.c	/^void potionbreathe (struct obj *obj) {$/;"	f
potionhit	src/potion.c	/^void potionhit(struct monst *mon, struct obj *obj, boolean your_fault) {$/;"	f
practical	src/monmove.c	/^static const char practical[] = {$/;"	v	file:
practice	src/weapon.c	/^practice() {$/;"	f	file:
practice_needed_to_advance	include/skills.h	94;"	d
practice_weapon	src/weapon.c	/^void practice_weapon (void) {$/;"	f
prayconfirm	include/flag.h	/^	bool  prayconfirm;	\/* confirm before praying *\/$/;"	m	struct:flag
prayer_done	src/pray.c	/^static int prayer_done()		{$/;"	f	file:
pre_downgrade_obj	src/potion.c	/^static void pre_downgrade_obj(struct obj *obj, boolean *used) {$/;"	f	file:
precheck	src/muse.c	/^static int precheck(struct monst *mon, struct obj *obj) {$/;"	f	file:
predicted_hp	src/borg.c	/^int predicted_hp;$/;"	v
preference_update	include/winprocs.h	139;"	d
preferred_pet	src/decl.c	/^char preferred_pet;	\/* '\\0', 'c', 'd', 'n' (none) *\/$/;"	v
preload_tiles	include/flag.h	282;"	d
presel	win/curses/cursdial.c	/^    bool presel;             \/* Whether menu item should be preselected *\/$/;"	m	struct:nhmi	file:
prev	include/lev.h	/^	struct bubble *prev, *next; \/* need to traverse the list up and down *\/$/;"	m	struct:bubble	typeref:struct:bubble::bubble
prev	src/display.c	/^	struct tmp_glyph *prev;$/;"	m	struct:tmp_glyph	typeref:struct:tmp_glyph::tmp_glyph	file:
prev_item	win/curses/cursdial.c	/^    struct nhmi *prev_item;     \/* Pointer to previous entry *\/$/;"	m	struct:nhmi	typeref:struct:nhmi::nhmi	file:
prev_level	src/dungeon.c	/^void prev_level(boolean at_stairs) {$/;"	f
prev_menu	win/curses/cursdial.c	/^    struct nhm *prev_menu;      \/* Pointer to previous entry *\/$/;"	m	struct:nhm	typeref:struct:nhm::nhm	file:
prev_mesg	win/curses/cursmesg.c	/^    struct nhpm *prev_mesg;     \/* Pointer to previous message *\/$/;"	m	struct:nhpm	typeref:struct:nhpm::nhpm	file:
prev_wid	win/curses/curswins.c	/^    struct nhwd *prev_wid;      \/* Pointer to previous entry *\/$/;"	m	struct:nhwd	typeref:struct:nhwd::nhwd	file:
prevac	win/curses/cursstat.c	/^static nhstat prevac;$/;"	v	file:
prevau	win/curses/cursstat.c	/^static nhstat prevau;$/;"	v	file:
prevcha	win/curses/cursstat.c	/^static nhstat prevcha;$/;"	v	file:
prevcon	win/curses/cursstat.c	/^static nhstat prevcon;$/;"	v	file:
prevdepth	win/curses/cursstat.c	/^static nhstat prevdepth;$/;"	v	file:
prevdex	win/curses/cursstat.c	/^static nhstat prevdex;$/;"	v	file:
prevexp	win/curses/cursstat.c	/^static nhstat prevexp;$/;"	v	file:
prevint	win/curses/cursstat.c	/^static nhstat prevint;$/;"	v	file:
prevlevel	win/curses/cursstat.c	/^static nhstat prevlevel;$/;"	v	file:
prevmsg	src/pline.c	/^char prevmsg[BUFSZ];$/;"	v
prevmsg_window	include/flag.h	/^	char prevmsg_window;	\/* type of old message window to use *\/$/;"	m	struct:instance_flags
prevscore	win/curses/cursstat.c	/^static nhstat prevscore;$/;"	v	file:
prevstr	win/curses/cursstat.c	/^static nhstat prevstr;$/;"	v	file:
prevtime	win/curses/cursstat.c	/^static nhstat prevtime;$/;"	v	file:
prevwis	win/curses/cursstat.c	/^static nhstat prevwis;$/;"	v	file:
pri_abil	src/attrib.c	/^pri_abil[] = { {	15, &(HWarning), "sensitive", "" },$/;"	v	typeref:struct:innate	file:
pri_move	src/priest.c	/^int pri_move (struct monst *priest) {$/;"	f
pri_tech	src/tech.c	/^pri_tech[] = { {   1, T_TURN_UNDEAD, 1},$/;"	v	typeref:struct:	file:
price	include/eshk.h	/^	long price;		\/* price per unit *\/$/;"	m	struct:bill_x
price_quote	src/shk.c	/^void price_quote(struct obj *first_obj) {$/;"	f
priest_talk	src/priest.c	/^priest_talk (struct monst *priest) {$/;"	f
priestini	src/priest.c	/^void priestini(d_level	*lvl, struct mkroom *sroom, int sx, int sy, boolean sanctum) {$/;"	f
priestname	src/priest.c	/^char * priestname ( struct monst *mon, char *pname		) {$/;"	f
print_branch	src/dungeon.c	/^static void print_branch(winid win, int dnum, int lower_bound, int upper_bound, boolean bymenu, struct lchoice *lchoices) {$/;"	f	file:
print_dungeon	src/dungeon.c	/^schar print_dungeon(boolean bymenu, schar *rlev, xchar *rdgn) {$/;"	f
print_glyph	include/winprocs.h	107;"	d
print_glyph_mapping	win/proxy/glyphmap.c	/^print_glyph_mapping(fp, mapping)$/;"	f	file:
print_queue	src/timeout.c	/^static void print_queue(winid win, timer_element *base) {$/;"	f	file:
print_statdiff	win/curses/cursstat.c	/^print_statdiff(const char *append, nhstat *stat, int new, int type)$/;"	f	file:
prinv	src/invent.c	/^void prinv(const char *prefix, struct obj *obj, long quan) {$/;"	f
prisoner_speaks	src/quest.c	/^static void prisoner_speaks (struct monst *mtmp) {$/;"	f	file:
prob	include/mkroom.h	/^	int	prob;		\/* the shop type probability in % *\/$/;"	m	struct:shclass
prob	src/mkroom.c	/^	unsigned	prob;$/;"	m	struct:__anon11	file:
probe_monster	src/zap.c	/^probe_monster (struct monst *mtmp) {$/;"	f
process_keystroke	sys/winnt/nttty.c	/^int process_keystroke(ir, valid, numberpad, portdebug)$/;"	f
process_keystroke2	sys/winnt/nhraykey.c	/^int process_keystroke2(hConIn, ir, valid)$/;"	f
process_menu_window	win/tty/wintty.c	/^static void process_menu_window(winid window, struct WinDesc *cw) {$/;"	f	file:
process_options	sys/share/pcmain.c	/^static void process_options(int argc, char **argv) {$/;"	f	file:
process_options	sys/unix/unixmain.c	/^process_options(argc, argv)$/;"	f	file:
process_text_window	win/tty/wintty.c	/^static void process_text_window(winid window, struct WinDesc *cw) {$/;"	f	file:
procs	src/windows.c	/^	struct window_procs *procs;$/;"	m	struct:win_choices	typeref:struct:win_choices::window_procs	file:
prog	include/decl.h	/^	char prog[BUFSZ];$/;"	m	struct:authentication
progname	util/dlb_main.c	/^static char *progname = default_progname;$/;"	v	file:
program_state	src/decl.c	/^struct sinfo program_state;$/;"	v	typeref:struct:sinfo
prompt	win/curses/cursdial.c	/^    const char *prompt;         \/* Menu prompt text *\/$/;"	m	struct:nhm	file:
promptsep	src/role.c	/^promptsep(buf, num_post_attribs)$/;"	f	file:
pronoun_gender	src/mondata.c	/^int pronoun_gender (struct monst *mtmp) {$/;"	f
prop	include/prop.h	/^struct prop {$/;"	s
prop2trbl	src/apply.c	1672;"	d	file:
prop2trbl	src/apply.c	1790;"	d	file:
prop_trouble	src/apply.c	1674;"	d	file:
prop_trouble	src/apply.c	1792;"	d	file:
propagate	src/makemon.c	/^boolean propagate(int mndx, boolean tally, boolean ghostly) {$/;"	f
propellor	src/weapon.c	/^static struct obj *propellor;$/;"	v	typeref:struct:obj	file:
protects	src/artifact.c	/^boolean protects(int adtyp, struct obj *otmp) {$/;"	f
proto	include/dungeon.h	/^	char	proto[15];	\/* name of prototype file (eg. "tower") *\/$/;"	m	struct:dungeon
proto	include/dungeon.h	/^	char	proto[15];	\/* name of prototype file (eg. "tower") *\/$/;"	m	struct:s_level
proto_dungeon	src/dungeon.c	/^struct proto_dungeon {$/;"	s	file:
protoname	include/dgn_file.h	/^	        protoname[24];$/;"	m	struct:tmpdungeon
proxy_add_menu	win/proxy/winproxy.c	/^proxy_add_menu(window, glyph, identifier, ch, gch, attr, str, preselected)$/;"	f
proxy_askname	win/proxy/winproxy.c	/^proxy_askname()$/;"	f
proxy_clear_nhwindow	win/proxy/winproxy.c	/^proxy_clear_nhwindow(window)$/;"	f
proxy_config_file_close	win/proxy/winproxy.c	/^proxy_config_file_close(FILE *fp)$/;"	f
proxy_config_file_open	win/proxy/winproxy.c	/^proxy_config_file_open()$/;"	f
proxy_curs	win/proxy/winproxy.c	/^proxy_curs(window, x, y)$/;"	f
proxy_curs_on_u	win/proxy/winproxy.c	/^int proxy_curs_on_u = false;$/;"	v
proxy_destroy_nhwindow	win/proxy/winproxy.c	/^proxy_destroy_nhwindow(window)$/;"	f
proxy_display_file	win/proxy/winproxy.c	/^void proxy_display_file(const char *fname, bool complain) {$/;"	f
proxy_flush_layers	win/proxy/winproxy.c	/^proxy_flush_layers(w, clearing)$/;"	f	file:
proxy_getlin	win/proxy/winproxy.c	/^proxy_getlin(query, bufp)$/;"	f
proxy_init_nhwindows	win/proxy/winproxy.c	/^proxy_init_nhwindows(argcp, argv)$/;"	f
proxy_interface_mode	win/proxy/winproxy.c	/^unsigned long proxy_interface_mode = 0;$/;"	v
proxy_outrip	win/proxy/winproxy.c	/^proxy_outrip(window, how)$/;"	f
proxy_player_selection	win/proxy/winproxy.c	/^proxy_player_selection()$/;"	f
proxy_preference_update	win/proxy/winproxy.c	/^proxy_preference_update(pref)$/;"	f
proxy_print_glyph	win/proxy/winproxy.c	/^proxy_print_glyph(window, x, y, glyph)$/;"	f
proxy_print_layer	win/proxy/winproxy.c	/^proxy_print_layer(w, x, y, z, glyph)$/;"	f	file:
proxy_procs	win/proxy/winproxy.c	/^struct window_procs proxy_procs = {$/;"	v	typeref:struct:window_procs
proxy_putstr	win/proxy/winproxy.c	/^proxy_putstr(window, attr, str)$/;"	f
proxy_raw_print	win/proxy/winproxy.c	/^proxy_raw_print(str)$/;"	f
proxy_raw_print_bold	win/proxy/winproxy.c	/^proxy_raw_print_bold(str)$/;"	f
proxy_rawprint_win	win/proxy/winproxy.c	/^int proxy_rawprint_win = WIN_ERR;$/;"	v
proxy_select_menu	win/proxy/winproxy.c	/^proxy_select_menu(window, how, menu_list)$/;"	f
proxy_start_menu	win/proxy/winproxy.c	/^proxy_start_menu(window)$/;"	f
proxy_yn_function	win/proxy/winproxy.c	/^proxy_yn_function(query, resp, def)$/;"	f
prscore	src/topten.c	/^void prscore(int argc, char **argv) {$/;"	f
ptail	src/cmd.c	/^static int phead, ptail, shead, stail;$/;"	v	file:
punish	src/read.c	/^void punish (struct obj *sobj) {$/;"	f
purge_monsters	include/flag.h	/^	int	purge_monsters;	\/* # of dead monsters still on fmon list *\/$/;"	m	struct:instance_flags
pushch	src/cmd.c	/^void pushch(char ch) {$/;"	f
pushq	src/cmd.c	/^static char pushq[BSIZE], saveq[BSIZE];$/;"	v	file:
pushweapon	include/flag.h	/^	bool  pushweapon;	\/* When wielding, push old weapon into second slot *\/$/;"	m	struct:flag
put_lregion_here	src/mkmaze.c	/^static boolean put_lregion_here(xchar x, xchar y, xchar nlx, xchar nly, xchar nhx, xchar nhy, xchar rtype, boolean oneshot, d_level *lev) {$/;"	f	file:
put_monsters_to_sleep	src/music.c	/^put_monsters_to_sleep(distance)$/;"	f	file:
puton_worn_item	src/zap.c	/^void puton_worn_item(struct obj *obj) {$/;"	f
putstr	include/winprocs.h	91;"	d
putsyms	win/tty/topl.c	/^void putsyms(const char *str) {$/;"	f
putting_on	src/invent.c	/^static boolean putting_on(const char *action) {$/;"	f	file:
pututf8char	src/unicode.c	/^void pututf8char(glyph_t c) {$/;"	f
pw_colors	src/options.c	/^struct percent_color_option *pw_colors = NULL;$/;"	v	typeref:struct:percent_color_option
pwep	src/weapon.c	/^static const int pwep[] = {$/;"	v	file:
pxlth	include/permonst.h	/^	short		pxlth;			\/* length of extension *\/$/;"	m	struct:permonst
q1_path	src/vision.c	/^static int q1_path(int srow, int scol, int y2, int x2) {$/;"	f	file:
q2_path	src/vision.c	/^static bool q2_path(int srow, int scol, int y2, int x2) {$/;"	f	file:
q3_path	src/vision.c	/^static bool q3_path(int srow, int scol, int y2, int x2) {$/;"	f	file:
q4_path	src/vision.c	/^static int q4_path(int srow, int scol, int y2, int x2) {$/;"	f	file:
q_score	include/quest.h	/^struct q_score {			\/* Quest "scorecard" *\/$/;"	s
qcalled	include/you.h	/^	bool qcalled;		\/* called by Quest leader to do task *\/$/;"	m	struct:u_event
qcompleted	include/you.h	/^	bool qcompleted;		\/* successfully completed Quest task *\/$/;"	m	struct:u_event
qexpelled	include/you.h	/^	bool qexpelled;		\/* expelled from the Quest dungeon *\/$/;"	m	struct:u_event
qlocate_level	include/decl.h	108;"	d
qstart_level	include/decl.h	107;"	d
qt_comment	src/questpgr.c	/^bool qt_comment(char *line) {$/;"	f
qt_list	src/questpgr.c	/^static struct	qtlists	qt_list;$/;"	v	typeref:struct:qtlists	file:
qt_montype	src/questpgr.c	/^struct permonst *qt_montype(void) {$/;"	f
qt_pager	src/questpgr.c	/^void qt_pager(int msgnum) {$/;"	f
qtlists	include/qtext.h	/^struct qtlists {$/;"	s
qtmsg	include/qtext.h	/^struct qtmsg {$/;"	s
quan	include/obj.h	/^	long quan;		\/* number of items *\/$/;"	m	struct:obj
query_category	src/pickup.c	/^int query_category(const char *qstr, struct obj *olist,		int qflags,			menu_item **pick_list,		int how)			{$/;"	f
query_classes	src/pickup.c	/^static boolean query_classes(char oclasses[], boolean *one_at_a_time, boolean *everything, const char *action, struct obj *objs, boolean here, int *menu_on_demand) {$/;"	f	file:
query_objlist	src/pickup.c	/^int query_objlist(const char *qstr	, struct obj *olist,		int qflags,			menu_item **pick_list,		int how,			bool (*allow)(struct obj*)) {$/;"	f
quest_arti_hits_leader	src/dothrow.c	1293;"	d	file:
quest_chat	src/quest.c	/^quest_chat (struct monst *mtmp) {$/;"	f
quest_dnum	include/decl.h	106;"	d
quest_info	src/questpgr.c	/^short quest_info(int typ) {$/;"	f
quest_mon_represents_role	src/makemon.c	16;"	d	file:
quest_stat_check	src/quest.c	/^quest_stat_check (struct monst *mtmp) {$/;"	f
quest_status	src/decl.c	/^struct q_score	quest_status = DUMMY;$/;"	v	typeref:struct:q_score
quest_talk	src/quest.c	/^quest_talk (struct monst *mtmp) {$/;"	f
questart	include/you.h	/^	bool questart;	\/* carrying the Quest Artifact *\/$/;"	m	struct:u_have
questarti	include/artifact.h	/^	bool questarti;	\/* is quest artifact *\/$/;"	m	struct:artifact
questarti	include/you.h	/^	short questarti;	\/* index (ART_) of quest artifact (questpgr.c) *\/$/;"	m	struct:Role
quiet	include/decl.h	/^	boolean down, chew, warned, quiet;$/;"	m	struct:dig_info
quitchars	src/decl.c	/^const char quitchars[] = " \\r\\n\\033";$/;"	v
r	src/extralev.c	/^static struct rogueroom r[3][3];$/;"	v	typeref:struct:rogueroom	file:
r	win/curses/cursinit.c	/^    short r;$/;"	m	struct:nhrgb_type	file:
r_oc_syms	src/drawing.c	/^static const glyph_t r_oc_syms[MAXOCLASSES] = {$/;"	v	file:
race	include/artifact.h	/^	short	    race;	\/* character race associated with *\/$/;"	m	struct:artifact
race_alignmentcount	src/role.c	/^race_alignmentcount(racenum)$/;"	f	file:
race_hostile	include/mondata.h	116;"	d
race_peaceful	include/mondata.h	117;"	d
race_pm	src/u_init.c	/^	short race_pm, item_otyp, subs_otyp;$/;"	m	struct:inv_sub	file:
race_tech	src/tech.c	/^static const struct innate_tech * race_tech (void) {$/;"	f	file:
raceptr	src/mondata.c	/^const struct permonst * raceptr (struct monst *mtmp) {$/;"	f
races	src/role.c	/^const struct Race races[] = {$/;"	v	typeref:struct:Race
racial_exception	src/worn.c	/^racial_exception (struct monst *mon, struct obj *obj) {$/;"	f
ralign	src/sp_lev.c	/^static aligntyp	ralign[3] = { AM_CHAOTIC, AM_NEUTRAL, AM_LAWFUL };$/;"	v	file:
ran_abil	src/attrib.c	/^ran_abil[] = { {   1, &(HSearching), "", "" },$/;"	v	typeref:struct:innate	file:
ran_tech	src/tech.c	/^ran_tech[] = { {   1, T_FLURRY, 1},$/;"	v	typeref:struct:	file:
rand	include/dgn_file.h	/^	short	base, rand;$/;"	m	struct:couple
rand_deg	sys/share/random.c	/^static  int		rand_deg		= DEG_3;$/;"	v	file:
rand_sep	sys/share/random.c	/^static  int		rand_sep		= SEP_3;$/;"	v	file:
rand_type	sys/share/random.c	/^static  int		rand_type		= TYPE_3;$/;"	v	file:
randalign	src/role.c	/^randalign (int rolenum, int racenum) {$/;"	f
randgend	src/role.c	/^randgend (int rolenum, int racenum) {$/;"	f
random	sys/share/random.c	/^long random(void) {$/;"	f
random_dir	src/worm.c	/^static void random_dir(xchar   x,   xchar y, xchar *nx, xchar *ny) {$/;"	f	file:
random_engraving	src/engrave.c	/^char *random_engraving(char *outbuf) {$/;"	f
random_insult	src/wizard.c	/^const char * const random_insult[] = {$/;"	v
random_malediction	src/wizard.c	/^const char * const random_malediction[] = {$/;"	v
random_mesg	src/engrave.c	/^static const char * const random_mesg[] = {$/;"	v	file:
random_monster	include/display.h	153;"	d
random_object	include/display.h	154;"	d
random_teleport_level	src/teleport.c	/^random_teleport_level (void) {$/;"	f
random_trap	include/display.h	155;"	d
randomall	include/flag.h	/^	int	 randomall;	\/* randomly assign everything not specified *\/$/;"	m	struct:flag
randomize	src/read.c	/^static void randomize (int *indices, int count) {$/;"	f	file:
randomkey	src/cmd.c	/^char randomkey(void) {$/;"	f
randomstr	src/role.c	/^static char randomstr[] = "random";$/;"	v	file:
randrace	src/role.c	/^randrace (int rolenum) {$/;"	f
randrole	src/role.c	/^randrole (void) {$/;"	f
randtbl	sys/share/random.c	/^static  long		randtbl[ DEG_3 + 1 ]	= { TYPE_3,$/;"	v	file:
range	include/attk.h	/^	xchar	range;			\/* How much further tobj can go *\/$/;"	m	struct:Attk
range	include/lev.h	/^	short range;	\/* source's current range *\/$/;"	m	struct:ls_t
range	src/explode.c	/^	int range;			\/* range of object		*\/$/;"	m	struct:scatter_chain	file:
ranged_attk	src/mondata.c	/^boolean ranged_attk(struct permonst *ptr) {$/;"	f
ranged_attk	src/monstr.c	/^static bool ranged_attk(struct permonst mon) {$/;"	f	file:
rank	include/you.h	/^	struct RoleName rank[9]; \/* names for experience levels (from botl.c) *\/$/;"	m	struct:Role	typeref:struct:Role::RoleName
rank	src/botl.c	/^static const char *rank(void) {$/;"	f	file:
rank_of	src/botl.c	/^const char *rank_of(int lev, short monnum, boolean female) {$/;"	f
ranks	src/gypsy.c	/^static const char *ranks[CARD_RANKS] = {$/;"	v	file:
rarea	src/sp_lev.c	/^static lev_region rarea[10];$/;"	v	file:
raw_handler	src/botl.c	/^static void (*raw_handler)();$/;"	v	file:
raw_print	include/winprocs.h	108;"	d
raw_print_bold	include/winprocs.h	109;"	d
raw_printf	src/pline.c	/^void raw_printf(const char *line, ...) {$/;"	f
rawprint	include/wintty.h	/^	int rawprint;		\/* number of raw_printed lines since synch *\/$/;"	m	struct:DisplayDesc
read_config_file	src/files.c	/^void read_config_file(const char *filename) {$/;"	f
read_wizkit	src/files.c	/^void read_wizkit(void) {$/;"	f
readable	src/read.c	/^static const char readable[] = {$/;"	v	file:
readchar	src/cmd.c	/^char readchar(void) {$/;"	f
readchar_queue	src/cmd.c	/^static const char* readchar_queue="";$/;"	v	file:
readentry	src/topten.c	/^static void readentry(FILE *rfile, struct toptenentry *tt) {$/;"	f	file:
readlibdir	src/dlb.c	/^static boolean readlibdir(library *lp) {$/;"	f	file:
readmail	src/mail.c	/^void readmail(struct obj *otmp) {$/;"	f
readobjnam	src/objnam.c	/^struct obj * readobjnam(char *bp, struct obj *no_wish, boolean from_user) {$/;"	f
ready_objs	src/wield.c	/^static const char ready_objs[] =$/;"	v	file:
ready_weapon	src/wield.c	/^static int ready_weapon(struct obj *wep, boolean put_away) {$/;"	f	file:
real	src/extralev.c	/^	boolean real;$/;"	m	struct:rogueroom	file:
real_dunlevs_in_dungeon	src/dungeon.c	/^xchar real_dunlevs_in_dungeon(d_level *lev) {$/;"	f
real_getresgid	sys/unix/unixres.c	/^real_getresgid(rgid, egid, sgid)$/;"	f	file:
real_getresuid	sys/unix/unixres.c	/^real_getresuid(ruid, euid, suid)$/;"	f	file:
realloc_obj	src/do_name.c	/^struct obj *realloc_obj(struct obj *obj, int oextra_size, void *oextra_src, int oname_size, const char *name) {$/;"	f
really_close	src/files.c	/^void really_close(void) {$/;"	f
really_move_cursor	sys/winnt/nttty.c	/^really_move_cursor()$/;"	f	file:
realtime	include/decl.h	/^	time_t realtime;    \/* Amount of actual playing time up until the last time$/;"	m	struct:realtime_data
realtime_data	include/decl.h	/^extern struct realtime_data {$/;"	s
realtime_data	src/decl.c	/^struct realtime_data realtime_data = { 0, 0, 0 };$/;"	v	typeref:struct:realtime_data
realzoomon	src/mkroom.c	/^struct permonst * realzoomon (void) {$/;"	f
reassign	src/invent.c	/^void reassign(void) {$/;"	f
recalc_health	src/attrib.c	/^void recalc_health(void) {$/;"	f
recalc_wt	src/eat.c	/^static void recalc_wt(void) {$/;"	f	file:
received_msg	sys/winnt/mapimail.c	/^struct lan_mail_struct received_msg;    \/* store received msg here   *\/$/;"	v	typeref:struct:lan_mail_struct
recharge	src/read.c	/^void recharge (struct obj *obj, int curse_bless) {$/;"	f
recharge_type	src/artifact.c	/^static const char recharge_type[] = { ALLOW_COUNT, ALL_CLASSES, 0 };$/;"	v	file:
record	include/align.h	/^	int		record;$/;"	m	struct:align
record_achieve_special	include/obj.h	108;"	d
recover_savefile	src/files.c	/^boolean recover_savefile(void) {$/;"	f
rect	src/rect.c	/^static NhRect rect[MAXRECT+1];$/;"	v	file:
rect_cnt	src/rect.c	/^static int rect_cnt;$/;"	v	file:
rects	include/region.h	/^	NhRect *rects;			\/* Rectangles composing the region *\/$/;"	m	struct:__anon29
redist_attr	src/attrib.c	/^void redist_attr(void) {$/;"	f
redotoplin	win/tty/topl.c	/^static void redotoplin(const char *str) {$/;"	f	file:
reg	build-linux/src/lev_yacc.c	/^static struct reg {$/;"	s	file:
regenerates	include/mondata.h	78;"	d
regex	src/sounds.c	/^	struct re_pattern_buffer regex;$/;"	m	struct:audio_mapping_rec	typeref:struct:audio_mapping_rec::re_pattern_buffer	file:
region	include/sp_lev.h	/^} region;$/;"	t	typeref:struct:__anon43
regions	include/sp_lev.h	/^	region **regions;$/;"	m	struct:__anon52
regions	src/region.c	/^static NhRegion **regions;$/;"	v	file:
regularize	include/ntconf.h	91;"	d
regularize	sys/share/pcunix.c	/^void regularize(char *s) {$/;"	f
regularize	sys/unix/unixunix.c	/^regularize(s)	\/* normalize file name - we don't like .'s, \/'s, spaces *\/$/;"	f
rehumanize	src/polyself.c	/^void rehumanize (void) {$/;"	f
rejectoption	src/options.c	/^static void rejectoption(const char *optname) {$/;"	f	file:
release_data	include/lev.h	16;"	d
relink_light_sources	src/light.c	/^void relink_light_sources(boolean ghostly) {$/;"	f
relink_timers	src/timeout.c	/^void relink_timers(boolean ghostly) {$/;"	f
relmon	src/mon.c	/^void relmon (struct monst *mon) {$/;"	f
relobj	src/steal.c	/^void relobj(struct monst *mtmp, int show, boolean is_pet) {$/;"	f
remember_topl	win/tty/topl.c	/^static void remember_topl(void) {$/;"	f	file:
remembered_object	include/display.h	405;"	d
remembered_object	include/display.h	410;"	d
remote_burglary	src/shk.c	/^void remote_burglary(xchar x, xchar y) {$/;"	f
remove_autopickup_exception	src/options.c	/^static void remove_autopickup_exception(struct autopickup_exception *whichape) {$/;"	f	file:
remove_damage	src/shk.c	/^static void remove_damage(struct monst *shkp, boolean croaked) {$/;"	f	file:
remove_mon_from_reg	src/region.c	/^void remove_mon_from_reg(NhRegion *reg, struct monst *mon) {$/;"	f
remove_monster	include/rm.h	534;"	d
remove_object	src/mkobj.c	/^void remove_object (struct obj *otmp) {$/;"	f
remove_rect	src/rect.c	/^remove_rect(r)$/;"	f
remove_region	src/region.c	/^void remove_region(NhRegion *reg) {$/;"	f
remove_room	src/mkmap.c	/^static void remove_room(uint roomno) {$/;"	f	file:
remove_rooms	src/mkmap.c	/^void remove_rooms(int lx, int ly, int hx, int hy) {$/;"	f
remove_timer	src/timeout.c	/^static timer_element *remove_timer(timer_element **base, short func_index, anything arg) {$/;"	f	file:
remove_worm	src/worm.c	/^remove_worm (struct monst *worm) {$/;"	f
remove_worn_item	src/steal.c	/^void remove_worn_item(struct obj *obj, boolean unchain_ball) {$/;"	f
removeables	src/invent.c	/^static const char removeables[] =$/;"	v	file:
removetopl	win/tty/topl.c	/^static void removetopl(int n) {$/;"	f	file:
renegade	include/epri.h	22;"	d
reorder_invent	src/invent.c	/^static void reorder_invent(void) {$/;"	f	file:
repair_damage	src/shk.c	/^int repair_damage(struct monst *shkp, struct damage *tmp_dam, boolean catchup)	{$/;"	f
repeat_hit	src/hack.c	/^int repeat_hit = 0;$/;"	v
replace_object	src/mkobj.c	/^replace_object (struct obj *obj, struct obj *otmp) {$/;"	f
replmon	src/mon.c	/^void replmon (struct monst *mtmp, struct monst *mtmp2) {$/;"	f
replshk	src/shk.c	/^void replshk (struct monst *mtmp, struct monst *mtmp2) {$/;"	f
repo_location	src/shk.c	/^static coord repo_location;	\/* repossession context *\/$/;"	v	file:
reqtime	src/eat.c	/^	        reqtime;	\/* turns required to eat *\/$/;"	m	struct:__anon6	file:
reqtime	src/eat.c	/^	int	usedtime, reqtime;$/;"	m	struct:__anon5	file:
reqtime	src/polyself.c	/^	int reqtime;$/;"	m	struct:__anon17	file:
rescham	src/mon.c	/^void rescham (void) {$/;"	f
reset_attribute_clock	src/attrib.c	/^void reset_attribute_clock (void) {$/;"	f
reset_eat	src/eat.c	/^void reset_eat(void) {$/;"	f
reset_faint	src/eat.c	/^void reset_faint(void) {$/;"	f
reset_glyph_bbox	src/display.c	1493;"	d	file:
reset_hostility	src/priest.c	/^void reset_hostility( struct monst *roamer) {$/;"	f
reset_oattached_mids	src/restore.c	/^static void reset_oattached_mids(boolean ghostly) {$/;"	f	file:
reset_occupations	src/cmd.c	/^void reset_occupations(void) {$/;"	f
reset_pick	src/lock.c	/^void reset_pick(void) {$/;"	f
reset_region_mids	src/region.c	/^static void reset_region_mids(NhRegion *reg) {$/;"	f	file:
reset_remarm	src/do_wear.c	/^void reset_remarm(void) {$/;"	f
reset_rndmonst	src/makemon.c	/^void reset_rndmonst(int mndx \/* particular species that can no longer be created *\/) {$/;"	f
reset_trapset	src/apply.c	/^void reset_trapset(void) {$/;"	f
reset_whetstone	src/apply.c	/^void reset_whetstone(void) {$/;"	f
resetobjs	src/bones.c	/^static void resetobjs(struct obj *ochain, boolean restore) {$/;"	f	file:
resident	include/mkroom.h	/^	struct monst *resident; \/* priest\/shopkeeper\/guard for this room *\/$/;"	m	struct:mkroom	typeref:struct:mkroom::monst
resist	src/zap.c	/^int resist(struct monst *mtmp, char oclass, int damage, int tell) {$/;"	f
resists	include/attk.h	/^	bool resists;	\/* Defender resists *\/$/;"	m	struct:Attk
resists_acid	include/mondata.h	19;"	d
resists_blnd	src/mondata.c	/^boolean resists_blnd(struct monst *mon) {$/;"	f
resists_cold	include/mondata.h	14;"	d
resists_death	include/mondata.h	23;"	d
resists_disint	include/mondata.h	16;"	d
resists_drain	include/mondata.h	22;"	d
resists_drli	src/mondata.c	/^boolean resists_drli(struct monst *mon) {$/;"	f
resists_elec	include/mondata.h	17;"	d
resists_fire	include/mondata.h	13;"	d
resists_magm	src/mondata.c	/^boolean resists_magm(struct monst *mon) {$/;"	f
resists_poison	include/mondata.h	18;"	d
resists_sleep	include/mondata.h	15;"	d
resists_ston	include/mondata.h	20;"	d
response_cmd	include/mail.h	/^	const char *response_cmd;	\/* command to eventually execute *\/$/;"	m	struct:mail_info
rest	src/music.c	/^static void rest(ticks)$/;"	f	file:
rest_engravings	src/engrave.c	/^void rest_engravings(int fd) {$/;"	f
rest_on_space	include/flag.h	/^	bool  rest_on_space; \/* space means rest *\/$/;"	m	struct:flag
rest_regions	src/region.c	/^void rest_regions(int fd, boolean ghostly) {$/;"	f
rest_room	src/mkroom.c	/^static void rest_room(int fd, struct mkroom *r) {$/;"	f	file:
rest_rooms	src/mkroom.c	/^void rest_rooms (int fd) {$/;"	f
rest_worm	src/worm.c	/^rest_worm (int fd) {$/;"	f
restartcham	src/mon.c	/^void restartcham (void) {$/;"	f
restdamage	src/restore.c	/^static void restdamage(int fd, boolean ghostly) {$/;"	f	file:
restfakecorr	src/vault.c	/^static void restfakecorr(struct monst *grd) {$/;"	f	file:
restgamestate	src/restore.c	/^static boolean restgamestate(int fd, uint *stuckid, uint *steedid) {$/;"	f	file:
restlevchn	src/restore.c	/^static void restlevchn(int fd) {$/;"	f	file:
restlevelfile	src/restore.c	/^static int restlevelfile(xchar ltmp) {$/;"	f	file:
restlevelstate	src/restore.c	/^static void restlevelstate(uint stuckid, uint steedid) {$/;"	f	file:
restmonchn	src/restore.c	/^static struct monst * restmonchn(int fd, boolean ghostly) {$/;"	f	file:
restnames	src/o_init.c	/^restnames (int fd) {$/;"	f
restobjchn	src/restore.c	/^static struct obj * restobjchn(int fd, boolean ghostly, boolean frozen) {$/;"	f	file:
restore_artifacts	src/artifact.c	/^void restore_artifacts(int fd) {$/;"	f
restore_attrib	src/attrib.c	/^void restore_attrib(void) {$/;"	f
restore_cham	src/mon.c	/^void restore_cham (struct monst *mon) {$/;"	f
restore_dungeon	src/dungeon.c	/^void restore_dungeon(int fd) {$/;"	f
restore_light_sources	src/light.c	/^void restore_light_sources(int fd) {$/;"	f
restore_saved_game	src/files.c	/^int restore_saved_game(void) {$/;"	f
restore_savefile	util/recover.c	/^restore_savefile(basename)$/;"	f
restore_shk_bill	src/shk.c	/^void restore_shk_bill (int fd, struct monst *shkp) {$/;"	f
restore_timers	src/timeout.c	/^void restore_timers(int fd, int range, boolean from_ghost_level, long timeout_adjustment) {$/;"	f
restore_waterlevel	src/mkmaze.c	/^void restore_waterlevel(int fd) {$/;"	f
restoretime	include/decl.h	/^	time_t restoretime; \/* The time that the game was started or restored. *\/$/;"	m	struct:realtime_data
restoring	src/restore.c	/^bool restoring = false;$/;"	v
restpriest	src/priest.c	/^void restpriest(struct monst *mtmp, boolean ghostly) {$/;"	f
restrap	src/mon.c	/^static boolean restrap(struct monst *mtmp) {$/;"	f	file:
restrict_name	src/artifact.c	/^restrict_name(struct obj *otmp, const char *name) { \/* returns 1 if name is restricted for otmp->otyp *\/$/;"	f
restricted_spell_discipline	src/u_init.c	/^static boolean restricted_spell_discipline(int otyp) {$/;"	f	file:
restshk	src/shk.c	/^void restshk(struct monst *shkp, boolean ghostly) {$/;"	f
resume_nhwindows	include/winprocs.h	85;"	d
resurrect	src/wizard.c	/^resurrect (void) {$/;"	f
reuse_accels	win/curses/cursdial.c	/^    bool reuse_accels;       \/* Non-unique accelerators per page *\/$/;"	m	struct:nhm	file:
rev	include/dlb.h	/^	long rev;		\/* dlb file revision *\/$/;"	m	struct:dlb_library
reverse	win/tty/wintty.c	/^static tty_menu_item *reverse(tty_menu_item *curr) {$/;"	f	file:
revivables	src/tech.c	/^static const char revivables[] = { ALLOW_FLOOROBJ, FOOD_CLASS, 0 };$/;"	v	file:
revivals	include/edog.h	/^	int revivals;			\/* count pet deaths *\/$/;"	m	struct:edog
revive	src/zap.c	/^struct monst * revive(struct obj *obj) {$/;"	f
revive_corpse	src/do.c	/^boolean revive_corpse(struct obj *corpse, boolean moldy) {$/;"	f
revive_cthulhu	src/region.c	/^bool revive_cthulhu(void *p1, void * p2) {$/;"	f
revive_egg	src/zap.c	/^static void revive_egg(struct obj *obj) {$/;"	f	file:
revive_mon	src/do.c	/^void revive_mon(void *arg, long timeout) {$/;"	f
revive_nasty	src/hack.c	/^boolean revive_nasty(int x, int y, const char *msg) {$/;"	f
reward_untrap	src/trap.c	/^	static void reward_untrap(struct trap *ttmp, struct monst *mtmp) {$/;"	f	file:
rgb_colors	win/proxy/glyphmap.c	/^long rgb_colors[] = {$/;"	v
rhack	src/cmd.c	/^void rhack(char *cmd) {$/;"	f
ridden_mon_to_glyph	include/display.h	291;"	d
ridden_monnum_to_glyph	include/display.h	315;"	d
rider_cant_reach	src/steed.c	/^rider_cant_reach (void) {$/;"	f
right_ptrs	src/vision.c	/^static char right_ptrs[ROWNO][COLNO];$/;"	v	file:
right_side	src/vision.c	/^right_side(row, left, right_mark, limits)$/;"	f	file:
rigid_role_checks	src/role.c	/^rigid_role_checks (void) {$/;"	f
rile_shk	src/shk.c	/^static void rile_shk(struct monst *shkp) {$/;"	f	file:
rindex	include/ntconf.h	80;"	d
rindex	include/unixconf.h	270;"	d
ring_types	src/shk.c	/^static const char ring_types[] = { RING_CLASS, 0 };$/;"	v	file:
rip	src/rip.c	/^static char **rip;$/;"	v	file:
rip_txt	src/rip.c	/^static const char *rip_txt[] = {$/;"	v	file:
rirreg	include/sp_lev.h	/^	xchar rtype, rlit, rirreg;$/;"	m	struct:__anon43
rknown	include/obj.h	/^	bool rknown;	\/* rustproof or not known *\/$/;"	m	struct:obj
rlit	include/mkroom.h	/^	schar rlit;			\/* is the room lit ? *\/$/;"	m	struct:mkroom
rlit	include/sp_lev.h	/^	xchar rtype, chance, rlit, filled;$/;"	m	struct:_room
rlit	include/sp_lev.h	/^	xchar rtype, rlit, rirreg;$/;"	m	struct:__anon43
rloc	src/teleport.c	/^boolean rloc(struct monst *mtmp, boolean suppress_impossible) {$/;"	f
rloc_engr	src/engrave.c	/^void rloc_engr(struct engr *ep) {$/;"	f
rloc_pos_ok	src/teleport.c	/^static boolean rloc_pos_ok(int x, int 	y, struct monst *mtmp) {$/;"	f	file:
rloc_to	src/teleport.c	/^void rloc_to (struct monst *mtmp, int x, int y) {$/;"	f
rloc_x	include/sp_lev.h	/^	char **rloc_x;$/;"	m	struct:__anon52
rloc_x	src/sp_lev.c	/^static char robjects[10], rloc_x[10][10], rloc_y[10][10], rmonst[10];$/;"	v	file:
rloc_y	include/sp_lev.h	/^	char **rloc_y;$/;"	m	struct:__anon52
rloc_y	src/sp_lev.c	/^static char robjects[10], rloc_x[10][10], rloc_y[10][10], rmonst[10];$/;"	v	file:
rloco	src/teleport.c	/^void rloco (struct obj *obj) {$/;"	f
rlx	src/extralev.c	/^	xchar rlx, rly;$/;"	m	struct:rogueroom	file:
rly	src/extralev.c	/^	xchar rlx, rly;$/;"	m	struct:rogueroom	file:
rm	include/rm.h	/^struct rm {$/;"	s
rm_waslit	src/dig.c	/^static boolean rm_waslit(void) {$/;"	f	file:
rmonst	include/sp_lev.h	/^	char *rmonst;$/;"	m	struct:__anon52
rmonst	include/sp_lev.h	/^	char *rmonst;$/;"	m	struct:__anon56
rmonst	src/sp_lev.c	/^static char robjects[10], rloc_x[10][10], rloc_y[10][10], rmonst[10];$/;"	v	file:
rn1	include/hack.h	281;"	d
rn2	src/rnd.c	/^uint rn2(uint x) {$/;"	f
rname	include/sp_lev.h	/^	Str_or_Len rname;$/;"	m	struct:__anon44
rnd	src/rnd.c	/^uint rnd(uint x) {$/;"	f
rnd_class	src/objnam.c	/^int rnd_class (int first, int last) {$/;"	f
rnd_defensive_item	src/muse.c	/^int rnd_defensive_item (struct monst *mtmp) {$/;"	f
rnd_misc_item	src/muse.c	/^int rnd_misc_item(struct monst *mtmp) {$/;"	f
rnd_offensive_item	src/muse.c	/^int rnd_offensive_item (struct monst *mtmp) {$/;"	f
rnd_rect	src/rect.c	/^rnd_rect() {$/;"	f
rnd_treefruit_at	src/mkobj.c	/^rnd_treefruit_at (int x, int y) {$/;"	f
rndcolor	src/do_name.c	/^const char *rndcolor(void) {$/;"	f
rndcurse	src/sit.c	/^rndcurse (void) {		\/* curse a few inventory items at random! *\/$/;"	f
rnddoor	src/sp_lev.c	/^static int rnddoor() {$/;"	f	file:
rndexp	src/exper.c	/^long rndexp(boolean gaining \/* gaining XP via potion vs setting XP for polyself *\/) {$/;"	f
rndghostname	src/do_name.c	/^const char *rndghostname(void) {$/;"	f
rndlevs	include/dgn_file.h	/^	int	chance, rndlevs, chain, flags;$/;"	m	struct:tmplevel
rndlevs	include/dungeon.h	/^	uchar	rndlevs;	\/* no. of randomly available similar levels *\/$/;"	m	struct:s_level
rndlregions	include/sp_lev.h	/^	lev_region **rndlregions;$/;"	m	struct:__anon52
rndmappos	src/hack.c	/^void rndmappos(xchar *x, xchar *y) {$/;"	f
rndmonnam	src/do_name.c	/^const char *rndmonnam(void) {$/;"	f
rndmonnum	src/mkobj.c	/^int rndmonnum (void) {$/;"	f
rndmonst	src/makemon.c	/^struct permonst *rndmonst(void) {$/;"	f
rndmonst_state	src/makemon.c	/^} rndmonst_state = { -1, {0} };$/;"	v	typeref:struct:__anon10	file:
rndtrap	src/sp_lev.c	/^static int rndtrap() {$/;"	f	file:
rne	src/rnd.c	/^uint rne(uint x) {$/;"	f
rnl	src/rnd.c	/^uint rnl(uint x) {$/;"	f
rnz	src/rnd.c	/^uint rnz(uint i) {$/;"	f
rob_shop	src/shk.c	/^static boolean rob_shop(struct monst *shkp) {$/;"	f	file:
robbed	include/eshk.h	/^	long robbed;		\/* amount stolen by most recent customer *\/$/;"	m	struct:eshk
robjects	include/sp_lev.h	/^	char *robjects;$/;"	m	struct:__anon52
robjects	include/sp_lev.h	/^	char *robjects;$/;"	m	struct:__anon56
robjects	src/sp_lev.c	/^static char robjects[10], rloc_x[10][10], rloc_y[10][10], rmonst[10];$/;"	v	file:
rog_abil	src/attrib.c	/^rog_abil[] = { {	 1, &(HStealth), "", ""  },$/;"	v	typeref:struct:innate	file:
rog_tech	src/tech.c	/^rog_tech[] = { {   1, T_CRIT_STRIKE, 1},$/;"	v	typeref:struct:	file:
rogue_level	include/decl.h	80;"	d
rogue_like	include/dungeon.h	/^	bool rogue_like; \/* is this an old-fashioned presentation? *\/$/;"	m	struct:d_flags
rogue_vision	src/vision.c	/^rogue_vision(next, rmin, rmax)$/;"	f	file:
roguecorr	src/extralev.c	/^static void roguecorr(int x, int y, int dir) {$/;"	f	file:
roguejoin	src/extralev.c	/^static void roguejoin(int x1, int y1, int x2, int y2, int horiz) {$/;"	f	file:
roguename	src/do_name.c	/^const char *roguename(void) {$/;"	f
rogueprobs	src/mkobj.c	/^const struct icp rogueprobs[] = {$/;"	v	typeref:struct:icp
rogueroom	src/extralev.c	/^struct rogueroom {$/;"	s	file:
role	include/artifact.h	/^	short	    role;	\/* character role associated with *\/$/;"	m	struct:artifact
role_gendercount	src/role.c	/^role_gendercount(rolenum)$/;"	f	file:
role_init	src/role.c	/^role_init (void) {$/;"	f
role_tech	src/tech.c	/^static const struct innate_tech *role_tech(void) {$/;"	f	file:
roles	src/role.c	/^const struct Role roles[NUM_ROLES+1] = {$/;"	v	typeref:struct:Role
rolestring	src/options.c	3485;"	d	file:
rolls	src/uhitm.c	/^static int rolls[2][2];$/;"	v	file:
room	build-linux/include/lev_comp.h	/^		xchar room;$/;"	m	struct:YYSTYPE::__anon25
room	build-linux/src/lev_yacc.c	/^		xchar room;$/;"	m	struct:YYSTYPE::__anon1	file:
room	include/sp_lev.h	/^		xchar room;$/;"	m	struct:__anon54::__anon55
room	include/sp_lev.h	/^} room;$/;"	t	typeref:struct:_room
room_door	include/sp_lev.h	/^} room_door;$/;"	t	typeref:struct:__anon33
room_types	util/lev_main.c	/^} room_types[] = {$/;"	v	typeref:struct:__anon21	file:
rooms	include/sp_lev.h	/^	room **rooms;$/;"	m	struct:__anon56
rooms	src/decl.c	/^struct mkroom rooms[(MAXNROFROOMS+1)*2] = {DUMMY};$/;"	v	typeref:struct:mkroom
root_plselection_prompt	src/role.c	/^root_plselection_prompt (char *suppliedbuf, int buflen, int rolenum, int racenum, int gendnum, int alignnum) {$/;"	f
rot_corpse	src/dig.c	/^void rot_corpse(void * arg, long timeout) {$/;"	f
rot_organic	src/dig.c	/^void rot_organic(void * arg, long timeout) {$/;"	f
rottenfood	src/eat.c	/^static int rottenfood(struct obj *obj) {$/;"	f	file:
rounddiv	src/hacklib.c	/^int rounddiv(long x, int y) {$/;"	f
rouse_shk	src/shk.c	/^static void rouse_shk(struct monst *shkp, boolean verbosely) {$/;"	f	file:
row_refresh	src/display.c	/^void row_refresh(int start, int stop, int y) {$/;"	f
rows	include/wintty.h	/^	short rows, cols;		\/* dimensions *\/$/;"	m	struct:WinDesc
rows	include/wintty.h	/^	uchar rows, cols;		\/* width and height of tty display *\/$/;"	m	struct:DisplayDesc
rptr	sys/share/random.c	/^static  long		*rptr			= &randtbl[ 1 ];$/;"	v	file:
rsrc_dlb_procs	src/dlb.c	/^const dlb_procs_t rsrc_dlb_procs = {$/;"	v
rtype	include/mkroom.h	/^	schar rtype;		\/* type of room (zoo, throne, etc...) *\/$/;"	m	struct:mkroom
rtype	include/sp_lev.h	/^	xchar rtype, chance, rlit, filled;$/;"	m	struct:_room
rtype	include/sp_lev.h	/^	xchar rtype, padding;$/;"	m	struct:__anon44
rtype	include/sp_lev.h	/^	xchar rtype, rlit, rirreg;$/;"	m	struct:__anon43
rubouts	src/engrave.c	/^} rubouts[] = {$/;"	v	typeref:struct:__anon7	file:
run	include/flag.h	/^	unsigned run;		\/* 0: h (etc), 1: H (etc), 2: fh (etc) *\/$/;"	m	struct:flag
run_regions	src/region.c	/^run_regions (void) {$/;"	f
run_timers	src/timeout.c	/^void run_timers (void) {$/;"	f
runmode	include/flag.h	/^	int	 runmode;	\/* update screen display during run moves *\/$/;"	m	struct:instance_flags
runmodes	src/options.c	/^static const char *runmodes[] = {$/;"	v	file:
rust_dmg	src/trap.c	/^boolean rust_dmg(struct obj *otmp, const char *ostr, int type, boolean print, struct monst *victim) {$/;"	f
rwep	src/weapon.c	/^static const int rwep[] = {$/;"	v	file:
s	include/decl.h	/^	boolean s;$/;"	m	struct:multishot
s_atr2str	win/tty/termcap.c	/^static char *s_atr2str(int n) {$/;"	f	file:
s_level	include/dungeon.h	/^typedef struct s_level {	\/* special dungeon level element *\/$/;"	s
s_level	include/dungeon.h	/^} s_level;$/;"	t	typeref:struct:s_level
s_suffix	src/hacklib.c	/^char *s_suffix(const char *s) {$/;"	f
sacrifice_types	src/pray.c	/^static const char sacrifice_types[] = { FOOD_CLASS, AMULET_CLASS, 0 };$/;"	v	file:
safe_dog	include/flag.h	/^	bool  safe_dog;	\/* give complete protection to the dog *\/$/;"	m	struct:flag
safe_qbuf	src/pickup.c	/^const char * safe_qbuf(const char * qbuf, uint padlength, const char *planA, const char *planB, const char *last_resort) {$/;"	f
safe_teleds	src/teleport.c	/^boolean safe_teleds(boolean allow_drag) {$/;"	f
saleable	src/shknam.c	/^saleable(shkp, obj)$/;"	f
sam_abil	src/attrib.c	/^sam_abil[] = { {	 1, &(HFast), "", "" },$/;"	v	typeref:struct:innate	file:
sam_tech	src/tech.c	/^sam_tech[] = { {   1, T_KIII, 1},$/;"	v	typeref:struct:	file:
same_price	src/shk.c	/^boolean same_price(struct obj *obj1, struct obj *obj2) {$/;"	f
sanctum_level	include/decl.h	97;"	d
sanity_check	include/flag.h	/^	bool  sanity_check;	\/* run sanity checks *\/$/;"	m	struct:instance_flags
sanity_check	src/cmd.c	/^void sanity_check(void) {$/;"	f
save_artifacts	src/artifact.c	/^void save_artifacts(int fd) {$/;"	f
save_cm	src/decl.c	/^char *save_cm = 0;$/;"	v
save_currentstate	src/do.c	/^void save_currentstate(void) {$/;"	f
save_dlevel	src/do.c	/^d_level save_dlevel = {0, 0};$/;"	v
save_dungeon	src/dungeon.c	/^void save_dungeon(int fd, boolean perform_write, boolean free_data) {$/;"	f
save_engravings	src/engrave.c	/^void save_engravings(int fd, int mode) {$/;"	f
save_light_sources	src/light.c	/^void save_light_sources(int fd, int mode, int range) {$/;"	f
save_monsyms	src/drawing.c	/^static uchar save_monsyms[MAXPCHARS]    = DUMMY;$/;"	v	file:
save_mtraits	src/mkobj.c	/^static struct obj * save_mtraits (struct obj *obj, struct monst *mtmp) {$/;"	f	file:
save_oc_syms	src/drawing.c	/^static uchar save_oc_syms[MAXOCLASSES]  = DUMMY;$/;"	v	file:
save_regions	src/region.c	/^void save_regions (int fd, int mode) {$/;"	f
save_room	src/mkroom.c	/^static void save_room(int	fd, struct mkroom *r) {$/;"	f	file:
save_rooms	src/mkroom.c	/^void save_rooms (int fd) {$/;"	f
save_savefile_name	src/files.c	/^void save_savefile_name(int fd) {$/;"	f
save_shk_bill	src/shk.c	/^void save_shk_bill (int fd, struct monst *shkp) {$/;"	f
save_showsyms	src/drawing.c	/^static glyph_t save_showsyms[MAXPCHARS] = DUMMY;$/;"	v	file:
save_timers	src/timeout.c	/^save_timers (int fd, int mode, int range) {$/;"	f
save_waterlevel	src/mkmaze.c	/^void save_waterlevel(int fd, int mode) {$/;"	f
save_worm	src/worm.c	/^save_worm (int fd, int mode) {$/;"	f
savebones	src/bones.c	/^void savebones(struct obj *corpse) {$/;"	f
savech	src/cmd.c	/^void savech(char ch) {$/;"	f
saved	src/display.c	/^	coord saved[COLNO];	\/* previously updated positions *\/$/;"	m	struct:tmp_glyph	file:
savedamage	src/save.c	/^static void savedamage(int fd, int mode) {$/;"	f	file:
savefruitchn	src/save.c	/^void savefruitchn(int fd, int mode) {$/;"	f
savegamestate	src/save.c	/^static void savegamestate(int fd, int mode) {$/;"	f	file:
savelev	src/save.c	/^void savelev(int fd, xchar lev, int mode) {$/;"	f
savelevchn	src/save.c	/^static void savelevchn(int fd, int mode) {$/;"	f	file:
savelife	src/end.c	/^static void savelife(int how) {$/;"	f	file:
savemonchn	src/save.c	/^static void savemonchn(int fd, struct monst *mtmp, int mode) {$/;"	f	file:
savename	util/recover.c	/^char savename[SAVESIZE]; \/* holds relative path of save file from playground *\/$/;"	v
savenames	src/o_init.c	/^savenames (int fd, int mode) {$/;"	f
saveobjchn	src/save.c	/^static void saveobjchn(int fd, struct obj *otmp, int mode) {$/;"	f	file:
saveq	src/cmd.c	/^static char pushq[BSIZE], saveq[BSIZE];$/;"	v	file:
saverestore	src/save.c	/^boolean saverestore;$/;"	v
savestateinlock	src/save.c	/^savestateinlock() {$/;"	f
savetrapchn	src/save.c	/^static void savetrapchn(int fd, struct trap *trap, int mode) {$/;"	f	file:
sbrooms	include/mkroom.h	/^	struct mkroom *sbrooms[MAX_SUBROOMS];  \/* Subrooms pointers *\/$/;"	m	struct:mkroom	typeref:struct:mkroom::mkroom
scan_map	util/lev_main.c	/^void scan_map(char *map) {$/;"	f
scatter	src/explode.c	/^long scatter($/;"	f
scatter_chain	src/explode.c	/^struct scatter_chain {$/;"	s	file:
sccsid	sys/share/random.c	/^static char sccsid[] = "@(#)random.c	5.5 (Berkeley) 7\/6\/88";$/;"	v	file:
sccsid	sys/share/uudecode.c	/^static char sccsid[] = "@(#)uudecode.c	5.5 (Berkeley) 7\/6\/88";$/;"	v	file:
schar	include/config.h	/^typedef signed char	schar;$/;"	t
schedule_goto	src/do.c	/^void schedule_goto(d_level *tolev, boolean at_stairs, boolean falling, int portal_flag, const char *pre_msg, const char *post_msg) {$/;"	f
sco_chanmap_buf	sys/share/unixtty.c	/^unsigned char sco_chanmap_buf[BSIZE];$/;"	v
sco_flag_console	sys/share/unixtty.c	/^int sco_flag_console = 0;$/;"	v
sco_map_valid	sys/share/unixtty.c	/^int sco_map_valid = -1;$/;"	v
sco_mapoff	sys/share/unixtty.c	/^void sco_mapoff(void) {$/;"	f
sco_mapon	sys/share/unixtty.c	/^void sco_mapon(void) {$/;"	f
score_wanted	src/topten.c	/^static int score_wanted(boolean current_ver, int rank, struct toptenentry *t1, int playerct, const char **players, int uid) {$/;"	f	file:
scroll_window	win/curses/cursmesg.c	/^scroll_window(winid wid)$/;"	f	file:
sdir	src/decl.c	/^char sdir[] = "hykulnjb><";$/;"	v
search_door	src/sp_lev.c	/^static boolean search_door(struct mkroom *croom, xchar *x, xchar *y, xchar wall, int cnt) {$/;"	f	file:
search_special	src/mkroom.c	/^struct mkroom * search_special(schar type) {$/;"	f
searches_for_item	src/muse.c	/^boolean searches_for_item(struct monst *mon, struct obj *obj) {$/;"	f
second_last_hit	src/hack.c	/^int second_last_hit = 0;$/;"	v
secret	include/sp_lev.h	/^	xchar wall, pos, secret, mask;$/;"	m	struct:__anon33
see_lamp_flicker	src/timeout.c	/^static void see_lamp_flicker(struct obj *obj, const char *tailer) {$/;"	f	file:
see_monsters	src/display.c	/^void see_monsters(void) {$/;"	f
see_objects	src/display.c	/^void see_objects(void) {$/;"	f
see_traps	src/display.c	/^void see_traps(void) {$/;"	f
see_with_infrared	include/display.h	67;"	d
see_with_infrared	include/display.h	77;"	d
see_wsegs	src/worm.c	/^see_wsegs (struct monst *worm) {$/;"	f
see_yourself	src/do_wear.c	/^static const char see_yourself[] = "see yourself";$/;"	v	file:
seed_tree	src/hack.c	/^boolean seed_tree(xchar x, xchar y) {$/;"	f
seemimic	src/mon.c	/^void seemimic (struct monst *mtmp) {$/;"	f
seenv	include/rm.h	/^	uchar seenv;		\/* seen vector *\/$/;"	m	struct:rm
seenv_matrix	src/display.c	/^unsigned char seenv_matrix[3][3] = { {SV2,   SV1, SV0},$/;"	v
seetrap	src/trap.c	/^void seetrap (struct trap *trap) {$/;"	f
seffects	src/read.c	/^int seffects (struct obj *sobj) {$/;"	f
select_hwep	src/weapon.c	/^struct obj * select_hwep (	struct monst *mtmp) {$/;"	f
select_menu	include/winprocs.h	96;"	d
select_newcham_form	src/mon.c	/^static int select_newcham_form(struct monst *mon) {$/;"	f	file:
select_off	src/do_wear.c	/^static int select_off(struct obj *otmp) {$/;"	f	file:
select_rwep	src/weapon.c	/^struct obj * select_rwep (	struct monst *mtmp) {$/;"	f
selected	include/wintty.h	/^	boolean selected;		\/* true if selected by user *\/$/;"	m	struct:tty_mi
selected	win/curses/cursdial.c	/^    bool selected;           \/* Whether item is currently selected *\/$/;"	m	struct:nhmi	file:
selector	include/wintty.h	/^	char selector;		\/* keyboard accelerator *\/$/;"	m	struct:tty_mi
self_invis_message	src/pline.c	/^void self_invis_message(void) {$/;"	f
selfmask	include/you.h	/^	short selfmask,		\/* your own race's bit mask *\/$/;"	m	struct:Race
selftouch	src/trap.c	/^	void selftouch(const char *arg) {$/;"	f
sell_how	src/shk.c	/^static int sell_how = SELL_NORMAL;$/;"	v	file:
sell_response	src/shk.c	/^static char sell_response = 'a';$/;"	v	file:
sellobj	src/shk.c	/^void sellobj(struct obj *obj, xchar x, xchar y) {$/;"	f
sellobj_state	src/shk.c	/^void sellobj_state(int deliberate) {$/;"	f
sender	include/nhlan.h	/^	char sender[120];$/;"	m	struct:lan_mail_struct
sengr_at	src/engrave.c	/^int sengr_at(const char *s, xchar x, xchar y) {$/;"	f
sense_engr_at	src/engrave.c	/^boolean sense_engr_at(int x, int y, boolean read_it \/* Read any sensed engraving *\/) {$/;"	f
sense_trap	src/detect.c	/^static void sense_trap(struct trap *trap, xchar x, xchar y, int src_cursed) {$/;"	f	file:
sensemon	include/display.h	32;"	d
senseself	include/display.h	144;"	d
separator	src/cmd.c	/^static const char separator[] = "------------------ -----  ------";$/;"	v	file:
seps	sys/share/random.c	/^static  int		seps[ MAX_TYPES ]	= { SEP_0, SEP_1, SEP_2,$/;"	v	file:
services	include/eshk.h	/^	long services;          \/* Services offered *\/$/;"	m	struct:eshk
set_all_on_page	win/tty/wintty.c	/^static void set_all_on_page(winid window, tty_menu_item *page_start, tty_menu_item *page_end) {$/;"	f	file:
set_apparxy	src/monmove.c	/^void set_apparxy (struct monst *mtmp) {$/;"	f
set_artifact_intrinsic	src/artifact.c	/^void set_artifact_intrinsic(struct obj *otmp, boolean on, long wp_mask) {$/;"	f
set_bc	src/ball.c	/^void set_bc(boolean already_blind) {$/;"	f
set_binary_mode	sys/winnt/winnt.c	/^set_binary_mode(fd, mode)$/;"	f
set_blast_symbols	src/explode.c	/^static void set_blast_symbols(ExplodeRegion *reg) {$/;"	f	file:
set_bonesfile_name	src/files.c	/^static char *set_bonesfile_name(char *file, d_level *lev) {$/;"	f	file:
set_bonestemp_name	src/files.c	/^static char *set_bonestemp_name(void) {$/;"	f	file:
set_corn	src/display.c	/^static int set_corn(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) {$/;"	f	file:
set_corner	src/display.c	2267;"	d	file:
set_cost	src/shk.c	/^static long set_cost(struct obj *obj, struct monst *shkp) {$/;"	f	file:
set_crosswall	src/display.c	/^static int set_crosswall(int x, int y) {$/;"	f	file:
set_cs	src/vision.c	1074;"	d	file:
set_duplicate_opt_detection	src/options.c	/^void set_duplicate_opt_detection (int on_or_off) {$/;"	f
set_entity	src/dbridge.c	/^static void set_entity(int x, int y, struct entity *etmp) {$/;"	f	file:
set_error_savefile	src/files.c	/^void set_error_savefile(void) {$/;"	f
set_font_name	include/winprocs.h	122;"	d
set_glyph_mapping	win/proxy/glyphmap.c	/^set_glyph_mapping()$/;"	f
set_glyph_mapping_cmap	win/proxy/glyphmap.c	/^set_glyph_mapping_cmap(glyph)$/;"	f	file:
set_glyph_mapping_cmap_submapping	win/proxy/glyphmap.c	/^set_glyph_mapping_cmap_submapping(first, next, glyph)$/;"	f	file:
set_glyph_mapping_explosions	win/proxy/glyphmap.c	/^set_glyph_mapping_explosions(glyph)$/;"	f	file:
set_glyph_mapping_invisible_monster	win/proxy/glyphmap.c	/^set_glyph_mapping_invisible_monster(glyph)$/;"	f	file:
set_glyph_mapping_monster_corpses	win/proxy/glyphmap.c	/^set_glyph_mapping_monster_corpses(base_glyphs, glyph)$/;"	f	file:
set_glyph_mapping_monsters	win/proxy/glyphmap.c	/^set_glyph_mapping_monsters(glyph)$/;"	f	file:
set_glyph_mapping_monsters_based	win/proxy/glyphmap.c	/^set_glyph_mapping_monsters_based(base_glyphs, glyph, type)$/;"	f	file:
set_glyph_mapping_objects	win/proxy/glyphmap.c	/^set_glyph_mapping_objects(glyph)$/;"	f	file:
set_glyph_mapping_swallow	win/proxy/glyphmap.c	/^set_glyph_mapping_swallow(base_glyphs, glyph)$/;"	f	file:
set_glyph_mapping_warning	win/proxy/glyphmap.c	/^set_glyph_mapping_warning(glyph)$/;"	f	file:
set_glyph_mapping_zaps	win/proxy/glyphmap.c	/^set_glyph_mapping_zaps(glyph)$/;"	f	file:
set_hero_inside	include/region.h	28;"	d
set_heros_fault	include/region.h	30;"	d
set_item_state	win/tty/wintty.c	/^static void set_item_state(winid window, int lineno, tty_menu_item *item) {$/;"	f	file:
set_itimeout	src/potion.c	/^void set_itimeout (long *which, long val) {$/;"	f
set_levelfile_name	src/files.c	/^void set_levelfile_name(char *file, int lev) {$/;"	f
set_levelfile_name	util/recover.c	/^set_levelfile_name(lev)$/;"	f
set_lit	src/read.c	/^static void set_lit(int x, int y, void * val) {$/;"	f	file:
set_malign	src/makemon.c	/^void set_malign(struct monst *mtmp) {$/;"	f
set_max	src/vision.c	1077;"	d	file:
set_mimic_blocking	src/display.c	/^void set_mimic_blocking(void) {$/;"	f
set_mimic_sym	src/makemon.c	/^void set_mimic_sym(struct monst *mtmp) {$/;"	f
set_min	src/vision.c	1076;"	d	file:
set_mon_data	src/mondata.c	/^void set_mon_data(struct monst *mon, struct permonst *ptr, int flag) {$/;"	f
set_moreluck	src/attrib.c	/^void set_moreluck(void) {$/;"	f
set_obj_poly	src/timeout.c	/^void set_obj_poly(struct obj *obj, struct obj *old) {$/;"	f
set_occupation	src/cmd.c	/^void set_occupation (int (*fn)(void), const char *txt, int xtime) {$/;"	f
set_option_mod_status	src/options.c	/^void set_option_mod_status (const char *optnam, int status) {$/;"	f
set_qtlen	src/questpgr.c	135;"	d	file:
set_qtlen	src/questpgr.c	87;"	d	file:
set_repo_loc	src/shk.c	/^static void set_repo_loc(struct eshk *eshkp) {$/;"	f	file:
set_residency	src/shk.c	/^void set_residency(struct monst *shkp, boolean zero_out) {$/;"	f
set_savefile_name	src/files.c	/^void set_savefile_name(void) {$/;"	f
set_seenv	src/display.c	/^static void set_seenv(struct rm *lev, int x0, int y0, int x, int y) {$/;"	f	file:
set_trap	src/apply.c	/^static int set_trap(void) {$/;"	f	file:
set_twall	src/display.c	/^static int set_twall(int x0, int y0, int x1, int y1, int x2, int y2, int x3, int y3) {$/;"	f	file:
set_uasmon	src/polyself.c	/^set_uasmon (void) {$/;"	f
set_wall	src/display.c	/^static int set_wall(int x, int y, int horiz) {$/;"	f	file:
set_wall_property	src/sp_lev.c	/^static void set_wall_property(xchar x1, xchar y1, xchar x2, xchar y2, int prop) {$/;"	f	file:
set_wall_state	src/display.c	/^void set_wall_state(void) {$/;"	f
set_wc2_option_mod_status	src/options.c	/^void set_wc2_option_mod_status (unsigned long optmask, int status) {$/;"	f
set_wc_option_mod_status	src/options.c	/^void set_wc_option_mod_status (unsigned long optmask, int status) {$/;"	f
set_wear	src/do_wear.c	/^void set_wear(void) {$/;"	f
set_whetstone	src/apply.c	/^static int set_whetstone(void) {$/;"	f	file:
set_window_position	win/curses/cursinit.c	/^set_window_position(int *winx, int *winy, int *winw, int *winh, int orientation,$/;"	f	file:
set_wounded_legs	src/do.c	/^void set_wounded_legs(long side, int timex) {$/;"	f
set_wportal	src/mkmaze.c	/^static void set_wportal() {$/;"	f	file:
setclipped	win/tty/wintty.c	/^void setclipped(void) {$/;"	f
setctty	sys/share/unixtty.c	/^static void setctty(void) {$/;"	f	file:
seteuid	sys/share/pcunix.c	/^void seteuid(int i) {}$/;"	f
setftty	sys/share/pctty.c	/^void setftty(void) {$/;"	f
setftty	sys/share/unixtty.c	/^void setftty(void) {$/;"	f
setftty	sys/winnt/nttty.c	/^setftty()$/;"	f
setgemprobs	src/o_init.c	/^setgemprobs(dlev)$/;"	f	file:
setioctls	sys/share/ioctl.c	/^void setioctls(void) {$/;"	f
setmangry	src/mon.c	/^void setmangry (struct monst *mtmp) {$/;"	f
setmnotwielded	src/weapon.c	/^setmnotwielded (struct monst *mon, struct obj *obj) {$/;"	f
setnotworn	src/worn.c	/^setnotworn (struct obj *obj) {$/;"	f
setpaid	src/shk.c	/^static void setpaid(struct monst *shkp) {$/;"	f	file:
setrandom	src/hacklib.c	/^void setrandom(void) {$/;"	f
setstate	sys/share/random.c	/^char *setstate( char		*arg_state) {$/;"	f
settrack	src/track.c	/^settrack (void) {$/;"	f
settty	sys/share/pctty.c	/^void settty(const char *s) {$/;"	f
settty	sys/share/unixtty.c	/^void settty(const char *s) {$/;"	f
settty	sys/winnt/nttty.c	/^settty(s)$/;"	f
settty_needed	sys/share/unixtty.c	/^static boolean settty_needed = false;$/;"	v	file:
setup_waterlevel	src/mkmaze.c	/^static void setup_waterlevel() {$/;"	f	file:
setuqwep	src/wield.c	/^void setuqwep (struct obj *obj) {$/;"	f
setustuck	include/hack.h	279;"	d
setuswapwep	src/wield.c	/^void setuswapwep(struct obj *obj, boolean put_away) {$/;"	f
setuwep	src/wield.c	/^void setuwep(struct obj *obj, boolean put_away) {$/;"	f
setworn	src/worn.c	/^setworn (struct obj *obj, long mask) {$/;"	f
sflock	src/files.c	/^struct flock sflock; \/\/ for unlocking, sae as above$/;"	v	typeref:struct:flock
sgn	src/hacklib.c	/^int sgn(int n) {$/;"	f
shade_aware	src/uhitm.c	/^	static boolean shade_aware(struct obj *obj) {$/;"	f	file:
shclass	include/mkroom.h	/^struct shclass {$/;"	s
shd	include/eshk.h	/^	coord shd;		\/* position shop door *\/$/;"	m	struct:eshk
shdist	include/mkroom.h	/^	schar	shdist;		\/* object placement type *\/$/;"	m	struct:shclass
shead	src/cmd.c	/^static int phead, ptail, shead, stail;$/;"	v	file:
shield_static	src/decl.c	/^const int shield_static[SHIELD_COUNT] = {$/;"	v
shielded	src/explode.c	/^	xchar shielded;	\/* True if this location is shielded *\/$/;"	m	struct:__anon8	file:
shieldeff	src/display.c	/^void shieldeff(xchar x, xchar y) {$/;"	f
shift	sys/winnt/nh340key.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
shift	sys/winnt/nhdefkey.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
shift	sys/winnt/nhraykey.c	/^	uchar normal, shift, cntrl;$/;"	m	struct:pad	file:
ship_object	src/dokick.c	/^boolean ship_object(struct obj *otmp, xchar x, xchar y, boolean shop_floor_obj) {$/;"	f
shk	include/eshk.h	/^	coord shk;		\/* usual position shopkeeper *\/$/;"	m	struct:eshk
shk_appraisal	src/shk.c	/^static void shk_appraisal(char *slang, struct monst *shkp) {$/;"	f	file:
shk_armor_works	src/shk.c	/^static void shk_armor_works(char *slang, struct monst *shkp) {$/;"	f	file:
shk_charge	src/shk.c	/^static void shk_charge(char *slang, struct monst *shkp) {$/;"	f	file:
shk_chat	src/shk.c	/^void shk_chat(struct monst *shkp) {$/;"	f
shk_class_match	include/eshk.h	64;"	d
shk_embellish	src/shk.c	/^static const char * shk_embellish(struct obj *itm, long cost) {$/;"	f	file:
shk_free	src/shk.c	/^void shk_free (struct monst *shkp) {$/;"	f
shk_identify	src/shk.c	/^static void shk_identify(char *slang, struct monst *shkp) {$/;"	f	file:
shk_move	src/shk.c	/^int shk_move(struct monst *shkp) {$/;"	f
shk_names_obj	src/shk.c	/^static void shk_names_obj(struct monst *shkp, struct obj *obj, const char *fmt, long amt, const char *arg) {$/;"	f	file:
shk_obj_match	src/shk.c	/^static boolean shk_obj_match(struct obj *obj, struct monst *shkp) {$/;"	f	file:
shk_offer_price	src/shk.c	/^static boolean shk_offer_price(char *slang, long charge, struct monst *shkp) {$/;"	f	file:
shk_other_services	src/shk.c	/^static void shk_other_services(void) {$/;"	f	file:
shk_owns	src/shk.c	/^static char * shk_owns(char *buf, struct obj *obj) {$/;"	f	file:
shk_smooth_charge	src/shk.c	/^static void shk_smooth_charge(int *pcharge, int lower, int upper) {$/;"	f	file:
shk_uncurse	src/shk.c	/^static void shk_uncurse(char *slang, struct monst *shkp) {$/;"	f	file:
shk_weapon_works	src/shk.c	/^static void shk_weapon_works(char *slang, struct monst *shkp) {$/;"	f	file:
shk_your	src/shk.c	/^char * shk_your(char *buf, struct obj *obj) {$/;"	f
shkarmors	src/shknam.c	/^static const char * const shkarmors[] = {$/;"	v	file:
shkblack	src/shknam.c	/^static const char *shkblack[] = {$/;"	v	file:
shkbooks	src/shknam.c	/^static const char * const shkbooks[] = {$/;"	v	file:
shkcatch	src/shk.c	/^struct monst * shkcatch(struct obj *obj, xchar x, xchar y) {$/;"	f
shkfoods	src/shknam.c	/^static const char * const shkfoods[] = {$/;"	v	file:
shkgeneral	src/shknam.c	/^static const char * const shkgeneral[] = {$/;"	v	file:
shkgone	src/shk.c	/^void shkgone ( struct monst *mtmp) {$/;"	f
shkinit	src/shknam.c	/^shkinit(shp, sroom)	\/* create a new shopkeeper in the given room *\/$/;"	f	file:
shklight	src/shknam.c	/^static const char * const shklight[] = {$/;"	v	file:
shkliquors	src/shknam.c	/^static const char * const shkliquors[] = {$/;"	v	file:
shknam	include/eshk.h	/^	char shknam[PL_NSIZ];$/;"	m	struct:eshk
shkname	src/shk.c	/^char * shkname (				struct monst *mtmp) {$/;"	f
shknms	include/mkroom.h	/^	const char * const *shknms;	\/* list of shopkeeper names for this type *\/$/;"	m	struct:shclass
shkpet	src/shknam.c	/^static const char *shkpet[] = {$/;"	v	file:
shkrings	src/shknam.c	/^static const char * const shkrings[] = {$/;"	v	file:
shktools	src/shknam.c	/^static const char * const shktools[] = {$/;"	v	file:
shkwands	src/shknam.c	/^static const char * const shkwands[] = {$/;"	v	file:
shkweapons	src/shknam.c	/^static const char * const shkweapons[] = {$/;"	v	file:
sho_obj_return_to_u	src/dothrow.c	/^static void sho_obj_return_to_u(struct obj *obj) {$/;"	f	file:
shop_debt	src/shk.c	/^static long shop_debt(struct eshk *eshkp) {$/;"	f	file:
shop_keeper	src/shk.c	/^struct monst * shop_keeper (char rmno) {$/;"	f
shop_object	src/shk.c	/^struct obj * shop_object(xchar x, xchar y) {$/;"	f
shopdig	src/shk.c	/^void shopdig(int fall) {$/;"	f
shoplevel	include/eshk.h	/^	d_level shoplevel;	\/* level (& dungeon) of his shop *\/$/;"	m	struct:eshk
shopper_financial_report	src/shk.c	/^void shopper_financial_report (void) {$/;"	f
shoproom	include/eshk.h	/^	schar shoproom;		\/* index in rooms; set by inshop() *\/$/;"	m	struct:eshk
shoptype	include/eshk.h	/^	int shoptype;		\/* the value of rooms[shoproom].rtype *\/$/;"	m	struct:eshk
short	build-linux/src/dgn_yacc.c	202;"	d	file:
short	build-linux/src/lev_yacc.c	347;"	d	file:
shortdllname	sys/winnt/nh340key.c	/^char *shortdllname;$/;"	v
shortdllname	sys/winnt/nhdefkey.c	/^char *shortdllname;$/;"	v
shortdllname	sys/winnt/nhraykey.c	/^char *shortdllname;$/;"	v
shorten_bot2	src/botl.c	/^const char *shorten_bot2(const char *str, uint len) {$/;"	f
shortsighted	include/rm.h	/^	bool shortsighted;	\/* monsters are shortsighted *\/$/;"	m	struct:levelflags
should_query_disclose_option	src/end.c	/^static boolean should_query_disclose_option(int category, char *defquery) {$/;"	f	file:
show_conduct	src/cmd.c	/^void show_conduct(int final) {$/;"	f
show_gamewindows	src/allmain.c	/^void show_gamewindows(void) {$/;"	f
show_glyph	src/display.c	/^void show_glyph(int x, int y, int glyph) {$/;"	f
show_map_spot	src/detect.c	/^static void show_map_spot(int x, int y) {$/;"	f	file:
show_region	src/region.c	/^void show_region(NhRegion *reg, xchar x, xchar y) {$/;"	f
showdmg	include/flag.h	/^	bool  showdmg;       \/* show damage *\/$/;"	m	struct:flag
showdmg	src/hack.c	/^void showdmg(int n) {$/;"	f
showexp	include/flag.h	/^	bool  showexp;	\/* show experience points *\/$/;"	m	struct:flag
showrace	include/flag.h	/^	bool  showrace;	\/* show hero glyph by race rather than by role *\/$/;"	m	struct:instance_flags
showrealtime	include/flag.h	/^	bool  showrealtime; \/* show actual elapsed time *\/$/;"	m	struct:instance_flags
showscore	include/flag.h	/^	bool  showscore;	\/* show score *\/$/;"	m	struct:flag
showsymcolors	src/drawing.c	/^uchar showsymcolors[MAXPCHARS] = DUMMY; \/* current feature display colors *\/$/;"	v
showsyms	src/drawing.c	/^glyph_t showsyms[MAXPCHARS]  = DUMMY; \/* the current feature display symbols *\/$/;"	v
showweight	include/flag.h	/^	bool  showweight;    \/* show weight on status line *\/$/;"	m	struct:flag
shralign	include/epri.h	/^	aligntyp shralign;	\/* alignment of priest's shrine *\/$/;"	m	struct:epri
shrine	include/sp_lev.h	/^	xchar		shrine;$/;"	m	struct:__anon37
shrine_pos	src/mkroom.c	/^static coord * shrine_pos(int roomno) {$/;"	f	file:
shrink_worm	src/worm.c	/^static void shrink_worm(int worm_number) {$/;"	f	file:
shrlevel	include/epri.h	/^	d_level shrlevel;	\/* level (& dungeon) of shrine *\/$/;"	m	struct:epri
shroom	include/epri.h	/^	schar shroom;		\/* index in rooms *\/$/;"	m	struct:epri
shrpos	include/epri.h	/^	coord shrpos;		\/* position of shrine *\/$/;"	m	struct:epri
shtypes	src/shknam.c	/^const struct shclass shtypes[] = {$/;"	v	typeref:struct:shclass
shuffle	src/o_init.c	/^static void shuffle(int o_low, int o_high, boolean domaterial) {$/;"	f	file:
shuffle_all	src/o_init.c	/^shuffle_all() {$/;"	f	file:
shuffle_proxy_glyphs	src/o_init.c	/^shuffle_proxy_glyphs() {$/;"	f	file:
shuffle_tiles	src/o_init.c	/^shuffle_tiles() {$/;"	f	file:
sidx	src/display.c	/^	int sidx;		\/* index of next unused slot in saved[] *\/$/;"	m	struct:tmp_glyph	file:
sign	src/display.c	2015;"	d	file:
sign	src/vision.c	106;"	d	file:
silent	include/flag.h	/^	bool  silent;	\/* whether the bell rings or not *\/$/;"	m	struct:flag
silly_thing	src/invent.c	/^void silly_thing(const char *word, struct obj *otmp) {$/;"	f
simple_look	src/pickup.c	/^static void simple_look(struct obj *otmp, boolean here	) {$/;"	f	file:
simple_typename	src/objnam.c	/^char * simple_typename (int otyp) {$/;"	f
sinfo	include/decl.h	/^extern struct sinfo {$/;"	s
singular	src/objnam.c	/^const char * singular (struct obj *otmp, char *(*func)( struct obj*)) {$/;"	f
sink	include/sp_lev.h	/^} sink;$/;"	t	typeref:struct:__anon50
sinks	include/sp_lev.h	/^	sink **sinks;$/;"	m	struct:_room
sitoa	src/hacklib.c	/^char *sitoa(int n) {$/;"	f
size	build-linux/src/lev_yacc.c	/^static struct size {$/;"	s	file:
size	include/dlb.h	/^	long size;		\/* size of file *\/$/;"	m	struct:__anon28
size	include/qtext.h	/^	usize offset, size;$/;"	m	struct:qtmsg
size	src/end.c	/^	int size;$/;"	m	struct:val_list	file:
size	src/options.c	/^	int size;	\/* for frontends and such allocating space --$/;"	m	struct:Comp_Opt	file:
skbonus	include/attk.h	/^	bool skbonus;$/;"	m	struct:Attk
skill	include/attk.h	/^	xchar	skill;			\/* Skill used (if any) *\/$/;"	m	struct:Attk
skill	include/skills.h	/^	xchar skill;$/;"	m	struct:def_skill
skill	include/skills.h	/^	xchar skill;$/;"	m	struct:skills
skill_advance	src/weapon.c	/^static void skill_advance(int skill) {$/;"	f	file:
skill_bonus	src/weapon.c	/^int skill_bonus (int type) {$/;"	f
skill_init	src/weapon.c	/^void skill_init (const struct def_skill *class_skill) {$/;"	f
skill_level_name	src/weapon.c	/^static char * skill_level_name(int skill, char *buf) {$/;"	f	file:
skill_names_indices	src/weapon.c	/^static const short skill_names_indices[P_NUM_SKILLS] = {$/;"	v	file:
skill_range	src/weapon.c	/^const static struct skill_range {$/;"	s	file:
skill_ranges	src/weapon.c	/^} skill_ranges[] = {$/;"	v	typeref:struct:skill_range	file:
skill_record	include/you.h	/^	xchar	skill_record[P_SKILL_LIMIT];	\/* skill advancements *\/$/;"	m	struct:you
skills	include/skills.h	/^struct skills {$/;"	s
skills_advanced	include/you.h	/^	int	skills_advanced;		\/* # of advances made so far *\/$/;"	m	struct:you
skinback	src/polyself.c	/^void skinback(boolean silently) {$/;"	f
skmax	include/skills.h	/^	xchar skmax;$/;"	m	struct:def_skill
sleep_monst	src/mhitm.c	/^int sleep_monst(struct monst *mon, int amt, int how) {$/;"	f
slept_monst	src/mhitm.c	/^void slept_monst(struct monst *mon) {$/;"	f
slime_dialogue	src/timeout.c	/^static void slime_dialogue() {$/;"	f	file:
slime_texts	src/timeout.c	/^static const char * const slime_texts[] = {$/;"	v	file:
slip_or_trip	src/timeout.c	/^static void slip_or_trip() {$/;"	f	file:
sliparm	src/mondata.c	/^boolean sliparm(struct permonst *ptr) {$/;"	f
slither	src/mondata.c	/^static const char *slither[4]	= { "slither", "Slither", "falter", "Falter" };$/;"	v	file:
slithy	include/mondata.h	74;"	d
slots_required	src/weapon.c	/^static int slots_required(int skill) {$/;"	f	file:
smeq	src/decl.c	/^int smeq[MAXNROFROOMS+1] = DUMMY;$/;"	v
smoothed	include/sp_lev.h	/^	boolean	smoothed, joined;$/;"	m	struct:__anon31
snuff_candle	src/apply.c	/^boolean snuff_candle(struct obj *otmp) { \/* call in drop, throw, and put in box, etc. *\/$/;"	f
snuff_light_source	src/light.c	/^void snuff_light_source(int x, int y) {$/;"	f
snuff_lit	src/apply.c	/^boolean snuff_lit(struct obj *obj) {$/;"	f
sobj_at	src/invent.c	/^struct obj *sobj_at(int n, int x, int y) {$/;"	f
sokoban_detect	src/detect.c	/^void sokoban_detect(void) {$/;"	f
sokoban_dnum	include/decl.h	104;"	d
sokoend_level	include/decl.h	112;"	d
some_armor	src/do_wear.c	/^struct obj *some_armor(struct monst *victim) {$/;"	f
somegold	src/steal.c	/^somegold (long umoney) {$/;"	f
something_worth_saving	include/decl.h	/^	int something_worth_saving;	\/* in case of panic *\/$/;"	m	struct:sinfo
somex	src/mkroom.c	/^int somex (struct mkroom *croom) {$/;"	f
somexy	src/mkroom.c	/^boolean somexy(struct mkroom *croom, coord *c) {$/;"	f
somey	src/mkroom.c	/^int somey (struct mkroom *croom) {$/;"	f
sort_rooms	src/mklev.c	/^void sort_rooms(void) {$/;"	f
sort_valuables	src/end.c	/^static void sort_valuables(struct valuable_data list[\/*size*\/], int size \/* max value is less than 20 *\/) {$/;"	f	file:
sortpack	include/flag.h	/^	bool  sortpack;	\/* sorted inventory *\/$/;"	m	struct:flag
sounddir	src/sounds.c	/^char* sounddir = ".";$/;"	v
soundmap	src/sounds.c	/^static audio_mapping *soundmap = 0;$/;"	v	file:
soundok	include/flag.h	/^	bool  soundok;	\/* ok to tell about sounds heard *\/$/;"	m	struct:flag
sp	src/objnam.c	/^	const char *sp;$/;"	m	struct:alt_spellings	file:
sp_id	include/spell.h	/^	short	sp_id;			\/* spell id (== object.otyp) *\/$/;"	m	struct:spell
sp_know	include/spell.h	/^	int		sp_know;		\/* knowlege of spell *\/$/;"	m	struct:spell
sp_lev	include/spell.h	/^	xchar	sp_lev;			\/* power level *\/$/;"	m	struct:spell
sp_lev_shuffle	src/sp_lev.c	/^static void sp_lev_shuffle(char list1[], char list2[], int n) {$/;"	f	file:
sp_levchn	src/decl.c	/^s_level *sp_levchn;$/;"	v
sparkle	include/flag.h	/^	bool  sparkle;	\/* show "resisting" special FX (Scott Bigham) *\/$/;"	m	struct:flag
spbook_types	src/shk.c	/^static const char spbook_types[] = { SPBOOK_CLASS, 0 };$/;"	v	file:
spe	include/obj.h	/^	schar spe;		\/* quality of weapon, armor or ring (+ or -)$/;"	m	struct:obj
spe	include/sp_lev.h	/^	short id, spe;$/;"	m	struct:__anon36
speaker	src/music.c	/^speaker(instr, buf)$/;"	f	file:
spec_ability	src/artifact.c	/^boolean spec_ability(struct obj *otmp, unsigned long abil) {$/;"	f
spec_abon	src/artifact.c	/^int spec_abon (struct obj *otmp, struct monst *mon) {$/;"	f
spec_applies	src/artifact.c	/^static int spec_applies(const struct artifact *weap, struct monst *mtmp) {$/;"	f	file:
spec_dbon	src/artifact.c	/^int spec_dbon (struct obj *otmp, struct monst *mon, int tmp) {$/;"	f
spec_dbon_applies	src/artifact.c	/^static int spec_dbon_applies = 0;$/;"	v	file:
spec_m2	src/artifact.c	/^long spec_m2 (struct obj *otmp) {$/;"	f
special_corpse	src/mkobj.c	968;"	d	file:
special_handling	src/options.c	/^static boolean special_handling(const char *optname, boolean setinitial, boolean setfromfile) {$/;"	f	file:
special_lev	build-linux/src/lev_yacc.c	/^static splev special_lev;$/;"	v	file:
special_subjs	src/objnam.c	/^static const char * const special_subjs[] = {$/;"	v	file:
specialmaze	include/sp_lev.h	/^} specialmaze;$/;"	t	typeref:struct:__anon53
speed_advance	src/weapon.c	/^static boolean speed_advance = false;$/;"	v	file:
speednum	sys/share/unixtty.c	/^static int speednum(speed_t speed) {$/;"	f	file:
spelarmr	include/you.h	/^	int spelarmr;		\/* penalty for wearing metal armour *\/$/;"	m	struct:Role
spelbase	include/you.h	/^	int spelbase;		\/* base spellcasting penalty *\/$/;"	m	struct:Role
spelheal	include/you.h	/^	int spelheal;		\/* penalty (-bonus) for healing spells *\/$/;"	m	struct:Role
spell	include/spell.h	/^struct spell {$/;"	s
spell_backfire	src/spell.c	/^static void spell_backfire(int spell) {$/;"	f	file:
spell_damage_bonus	src/zap.c	/^int spell_damage_bonus(int booktype) {$/;"	f
spell_hit_bonus	src/zap.c	/^static int spell_hit_bonus(int skill) {$/;"	f	file:
spell_let_to_idx	src/spell.c	/^static int spell_let_to_idx(char ilet) {$/;"	f	file:
spell_skilltype	src/spell.c	/^int spell_skilltype (int booktype) {$/;"	f
spell_would_be_useless	src/mcastu.c	/^static boolean spell_would_be_useless(struct monst *mtmp, uint adtyp, int spellnum) {$/;"	f	file:
spellbook_skill_raise	src/u_init.c	/^spellbook_skill_raise (struct def_skill *class_skill, int spellbook) {$/;"	f	file:
spelleffects	src/spell.c	/^int spelleffects(int spell, boolean atme) {$/;"	f
spellet	src/spell.c	36;"	d	file:
spellev	src/spell.c	33;"	d	file:
spellid	include/spell.h	19;"	d
spellid	src/allmain.c	18;"	d	file:
spellid	src/spell.c	34;"	d	file:
spellings	src/objnam.c	/^} spellings[] = {$/;"	v	typeref:struct:alt_spellings
spellknow	include/spell.h	20;"	d
spellknow	src/allmain.c	19;"	d	file:
spellknow	src/spell.c	25;"	d	file:
spellname	src/spell.c	35;"	d	file:
spelltypemnemonic	src/spell.c	/^static const char* spelltypemnemonic(int skill) {$/;"	f	file:
spelsbon	include/you.h	/^	int spelsbon;		\/* penalty (-bonus) for that spell *\/$/;"	m	struct:Role
spelshld	include/you.h	/^	int spelshld;		\/* penalty for wearing any shield *\/$/;"	m	struct:Role
spelspec	include/you.h	/^	int spelspec;		\/* spell (SPE_) the class excels at *\/$/;"	m	struct:Role
spelstat	include/you.h	/^	int spelstat;		\/* which stat (A_) is used *\/$/;"	m	struct:Role
spestudied	include/obj.h	106;"	d
spfx	include/artifact.h	/^	unsigned long spfx;	\/* special effect from wielding\/wearing *\/$/;"	m	struct:artifact
spiders_dnum	include/decl.h	113;"	d
spitmm	src/mhitm.c	/^static int spitmm(struct monst *magr, struct monst *mdef, struct attack *mattk) {$/;"	f	file:
spitmu	src/mthrowu.c	/^int spitmu (		struct monst *mtmp, struct attack *mattk) {$/;"	f
spl_book	src/decl.c	/^struct spell spl_book[MAXSPELL + 1] = {DUMMY};$/;"	v	typeref:struct:spell
splatter_burning_oil	src/explode.c	/^void splatter_burning_oil(int x, int y) {$/;"	f
splev	include/sp_lev.h	/^} splev;$/;"	t	typeref:struct:__anon56
split_mon	src/potion.c	/^struct monst * split_mon ( struct monst *mon, struct monst *mtmp	) {$/;"	f
split_rects	src/rect.c	/^split_rects(r1, r2)$/;"	f
splitbill	src/shk.c	/^void splitbill(struct obj *obj, struct obj *otmp) {$/;"	f
splitobj	src/mkobj.c	/^struct obj * splitobj (struct obj *obj, long num) {$/;"	f
splitoneoff	src/dothrow.c	/^struct obj *splitoneoff(struct obj **pobj) {$/;"	f
spooky	include/rm.h	/^	bool spooky;		\/* Spooky sounds (Tina Hall) *\/$/;"	m	struct:levelflags
spoteffects	src/hack.c	/^void spoteffects(boolean pick) {$/;"	f
sq	src/mkroom.c	29;"	d	file:
sq	src/sp_lev.c	53;"	d	file:
squadmon	src/mkroom.c	/^static struct permonst * squadmon()		{$/;"	f	file:
squadprob	src/mkroom.c	/^} squadprob[NSTYPES] = {$/;"	v	typeref:struct:__anon11	file:
srandom	sys/share/random.c	/^void srandom(unsigned x) {$/;"	f
src	include/sp_lev.h	/^	} src, dest;$/;"	m	struct:__anon54	typeref:struct:__anon54::__anon55
sspace	include/dlb.h	/^	char *sspace;	\/* pointer to string space *\/$/;"	m	struct:dlb_library
sstairs	src/decl.c	/^stairway sstairs = { 0, 0 };$/;"	v
sstairs_room	src/decl.c	/^struct mkroom *upstairs_room, *dnstairs_room, *sstairs_room;$/;"	v	typeref:struct:
stackobj	src/invent.c	/^void stackobj(struct obj *obj) {$/;"	f
stagger	src/mondata.c	/^const char * stagger (const struct permonst *ptr, const char *def) {$/;"	f
stail	src/cmd.c	/^static int phead, ptail, shead, stail;$/;"	v	file:
stair	include/sp_lev.h	/^} stair;$/;"	t	typeref:struct:__anon42
stairs	include/sp_lev.h	/^	stair **stairs;$/;"	m	struct:__anon52
stairs	include/sp_lev.h	/^	stair **stairs;$/;"	m	struct:_room
stairway	include/dungeon.h	/^typedef struct stairway {	\/* basic stairway identifier *\/$/;"	s
stairway	include/dungeon.h	/^} stairway;$/;"	t	typeref:struct:stairway
stale_egg	include/obj.h	261;"	d
standout	include/flag.h	/^	bool  standout;	\/* use standout for --More-- *\/$/;"	m	struct:flag
standoutbeg	sys/winnt/nttty.c	/^void standoutbeg(void) {$/;"	f
standoutbeg	win/tty/termcap.c	/^void standoutbeg(void) {$/;"	f
standoutend	sys/winnt/nttty.c	/^void standoutend(void) {$/;"	f
standoutend	win/tty/termcap.c	/^void standoutend(void) {$/;"	f
start	include/dlb.h	/^	long start;		\/* offset of start of file *\/$/;"	m	struct:__anon28
start	src/dungeon.c	/^	int	start;	\/* starting index of current dungeon sp levels *\/$/;"	m	struct:proto_dungeon	file:
start_col	src/vision.c	/^static int  start_col;$/;"	v	file:
start_color_option	src/botl.c	/^void start_color_option(struct color_option color_option) {$/;"	f
start_corpse_timeout	src/mkobj.c	/^void start_corpse_timeout (struct obj *body) {$/;"	f
start_eating	src/eat.c	/^static void start_eating(struct obj *otmp) {$/;"	f	file:
start_engulf	src/uhitm.c	/^	static void start_engulf(struct monst *mdef) {$/;"	f	file:
start_mailthread	sys/winnt/mapimail.c	/^static long __stdcall start_mailthread(LPVOID ThreadParam)$/;"	f	file:
start_menu	include/winprocs.h	93;"	d
start_row	src/vision.c	/^static int  start_row;$/;"	v	file:
start_screen	include/winprocs.h	135;"	d
start_timer	src/timeout.c	/^boolean start_timer(long when, short kind, short func_index, anything arg) {$/;"	f
start_tin	src/eat.c	/^static void start_tin(struct obj *otmp) {$/;"	f	file:
statcolor	win/curses/cursstat.c	/^struct statcolor {$/;"	s	file:
state	sys/share/random.c	/^static  long		*state			= &randtbl[ 1 ];$/;"	v	file:
statprob	win/curses/cursstat.c	827;"	d	file:
statprob	win/curses/cursstat.c	845;"	d	file:
status_attrnames	src/options.c	/^const struct name_value status_attrnames[] = {$/;"	v	typeref:struct:name_value
status_colornames	src/options.c	/^const struct name_value status_colornames[] = {$/;"	v	typeref:struct:name_value
statuswin	include/wincurs.h	/^WINDOW *mapwin, *statuswin, *messagewin;    \/* Main windows *\/$/;"	v
steal	src/steal.c	/^steal (struct monst *mtmp, char *objnambuf) {$/;"	f
steal_it	src/uhitm.c	/^	static void steal_it(struct monst *mdef, struct attack *mattk) {$/;"	f	file:
stealamulet	src/steal.c	/^stealamulet (struct monst *mtmp) {$/;"	f
stealarm	src/steal.c	/^stealarm() {$/;"	f	file:
stealgold	src/steal.c	/^stealgold (struct monst *mtmp) {$/;"	f
stealmid	src/steal.c	/^uint stealmid;		\/* monster doing the stealing *\/$/;"	v
stealoid	src/steal.c	/^uint stealoid;		\/* object to be stolen *\/$/;"	v
steedintrap	src/trap.c	/^static int steedintrap(struct trap *trap, struct obj *otmp) {$/;"	f	file:
steeds	src/steed.c	/^static const char steeds[] = {$/;"	v	file:
step	src/vision.c	/^static int  step;$/;"	v	file:
sticks	src/mondata.c	/^boolean sticks(struct permonst *ptr) {$/;"	f
still_chewing	src/hack.c	/^static int still_chewing(xchar x, xchar y) {$/;"	f	file:
stock_blkmar	src/shknam.c	/^stock_blkmar(shp, sroom, sh)$/;"	f	file:
stock_room	src/shknam.c	/^stock_room(shp_indx, sroom)$/;"	f
stolen_container	src/shk.c	/^static long stolen_container(struct obj *obj, struct monst *shkp, long price, boolean ininv, boolean destruction) {$/;"	f	file:
stolen_value	src/shk.c	/^long stolen_value(struct obj *obj, xchar x, xchar y, boolean peaceful, boolean silent, boolean destruction) {$/;"	f
stone_luck	src/attrib.c	/^int stone_luck(boolean parameter \/* So I can't think up of a good name.  So sue me. --KAA *\/) {$/;"	f
stoned	src/decl.c	/^boolean stoned = false;	\/* done to monsters hit by 'c' *\/$/;"	v
stoned_dialogue	src/timeout.c	/^static void stoned_dialogue() {$/;"	f	file:
stoned_texts	src/timeout.c	/^static const char * const stoned_texts[] = {$/;"	v	file:
stop_occupation	src/allmain.c	/^void stop_occupation(void) {$/;"	f
stop_timer	src/timeout.c	/^long stop_timer(short func_index, anything arg) {$/;"	f
stopped	src/explode.c	/^	boolean stopped;		\/* flag for in-motion\/stopped	*\/$/;"	m	struct:scatter_chain	file:
stopprint	include/decl.h	/^	int stopprint;		\/* inhibit further end of game disclosure *\/$/;"	m	struct:sinfo
store_part	util/lev_main.c	/^void store_part(void) {$/;"	f
store_place_list	util/lev_main.c	/^void store_place_list(int npart, int nlist, int nloc, const struct coord *plist) {$/;"	f
store_room	util/lev_main.c	/^void store_room(void) {$/;"	f
store_version	src/version.c	/^void store_version(int fd) {$/;"	f
str	build-linux/include/dgn_comp.h	/^	char*	str;$/;"	m	union:YYSTYPE
str	build-linux/src/dgn_yacc.c	/^	char*	str;$/;"	m	union:YYSTYPE	file:
str	include/sp_lev.h	/^	char *str;$/;"	m	union:str_or_len
str	include/wintty.h	/^	char *str;			\/* description string (including accelerator) *\/$/;"	m	struct:tty_mi
str	win/curses/cursdial.c	/^    const char *str;            \/* Text of menu item *\/$/;"	m	struct:nhmi	file:
str	win/curses/cursmesg.c	/^    char *str;                  \/* Message text *\/$/;"	m	struct:nhpm	file:
str2align	src/role.c	/^str2align (char *str) {$/;"	f
str2gend	src/role.c	/^str2gend (char *str) {$/;"	f
str2race	src/role.c	/^str2race (char *str) {$/;"	f
str2role	src/role.c	/^str2role (char *str) {$/;"	f
str2txt	src/cmd.c	/^char *str2txt(char* s, char* txt) {$/;"	f
str_or_len	include/sp_lev.h	/^typedef union str_or_len {$/;"	u
strange_feeling	src/potion.c	/^void strange_feeling (struct obj *obj, const char *txt) {$/;"	f
strategy	src/wizard.c	/^static long strategy(struct monst *mtmp) {$/;"	f	file:
strcmpi	include/global.h	53;"	d
strcmpi	sys/winnt/win32api.h	11;"	d
string_for_auth_opt	src/options.c	/^static char * string_for_auth_opt(char *opts, boolean val_optional) {$/;"	f	file:
string_for_env_opt	src/options.c	/^static char * string_for_env_opt(const char *optname, char *opts, boolean val_optional) {$/;"	f	file:
string_for_opt	src/options.c	/^static char * string_for_opt(char *opts, boolean val_optional) {$/;"	f	file:
string_for_tile_opt	src/options.c	/^static char * string_for_tile_opt(char *opts, boolean val_optional) {$/;"	f	file:
stripspace	src/cmd.c	/^stripspace(txt)$/;"	f
stripspe	src/read.c	/^static void stripspe (struct obj *obj) {$/;"	f	file:
strkitten	src/hacklib.c	/^char *strkitten(char *s, char c) {$/;"	f
strncmpi	include/ntconf.h	58;"	d
strncmpi	src/hacklib.c	/^int strncmpi(const char *s1, const char *s2, usize n) {$/;"	f
stronghold_level	include/decl.h	82;"	d
strongmonst	include/mondata.h	119;"	d
strprepend	src/objnam.c	/^static char *strprepend(char *s, const char *pref) {$/;"	f	file:
strsize	include/dlb.h	/^	long strsize;	\/* dlb file string size *\/$/;"	m	struct:dlb_library
strstri	src/hacklib.c	/^char *strstri(const char *str, const char *sub) {$/;"	f
struct_sizes	include/global.h	/^	unsigned long	struct_sizes;	\/* size of key structs *\/$/;"	m	struct:version_info
stuck_ring	src/do_wear.c	/^struct obj *stuck_ring(struct obj *ring, int otyp) {$/;"	f
study_book	src/spell.c	/^int study_book (struct obj *spellbook) {$/;"	f
studyspell	src/spell.c	/^boolean studyspell() {$/;"	f
stumble_onto_mimic	src/uhitm.c	/^	void stumble_onto_mimic(struct monst *mtmp) {$/;"	f
style	src/display.c	/^	int style;		\/* either DISP_BEAM or DISP_FLASH or DISP_ALWAYS *\/$/;"	m	struct:tmp_glyph	file:
styluses	src/engrave.c	/^static const char styluses[] = {$/;"	v	file:
sub_one_frombill	src/shk.c	/^static void sub_one_frombill(struct obj *obj, struct monst *shkp) {$/;"	f	file:
subfrombill	src/shk.c	/^void subfrombill(struct obj *obj, struct monst *shkp) {$/;"	f
subject	include/nhlan.h	/^	char subject[120];$/;"	m	struct:lan_mail_struct
subrooms	include/sp_lev.h	/^	struct _room *subrooms[MAX_SUBROOMS];$/;"	m	struct:_room	typeref:struct:_room::_room
subrooms	src/decl.c	/^struct mkroom* subrooms = &rooms[MAXNROFROOMS+1];$/;"	v	typeref:struct:mkroom
subs_otyp	src/u_init.c	/^	short item_otyp, subs_otyp;$/;"	m	struct:inv_asub	file:
subs_otyp	src/u_init.c	/^	short race_pm, item_otyp, subs_otyp;$/;"	m	struct:inv_sub	file:
suits	src/gypsy.c	/^static const char *suits[CARD_SUITS] =$/;"	v	file:
summon_minion	src/minion.c	/^void summon_minion(aligntyp alignment, boolean talk) {$/;"	f
suppress_alert	include/flag.h	/^	unsigned long suppress_alert;$/;"	m	struct:flag
surcharge	include/eshk.h	/^	boolean surcharge;	\/* angry shk inflates prices *\/$/;"	m	struct:eshk
surface	src/engrave.c	/^const char *surface(int x, int y) {$/;"	f
suspend_nhwindows	include/winprocs.h	84;"	d
swallow_cmaps	win/proxy/glyphmap.c	/^} swallow_cmaps[] = {$/;"	v	typeref:struct:__anon24	file:
swallow_to_glyph	src/display.c	/^static int swallow_to_glyph(int mnum, int loc) {$/;"	f	file:
swallowed	src/display.c	/^void swallowed(int first) {$/;"	f
switch_graphics	src/drawing.c	/^void switch_graphics(int graphics) {$/;"	f
switchar	sys/winnt/winnt.c	/^switchar()$/;"	f
sx	include/dungeon.h	/^	xchar	sx, sy;		\/* x \/ y location of the stair *\/$/;"	m	struct:stairway
sy	include/dungeon.h	/^	xchar	sx, sy;		\/* x \/ y location of the stair *\/$/;"	m	struct:stairway
sym_desc	src/drawing.c	/^const struct symdef sym_desc[MAXPCHARS] = {$/;"	v	typeref:struct:symdef
symb	include/mkroom.h	/^	char	symb;		\/* this identifies the shop type *\/$/;"	m	struct:shclass
symdef	include/rm.h	/^struct symdef {$/;"	s
syms	src/makemon.c	/^static char syms[] = {$/;"	v	file:
synch_cursor	sys/winnt/nttty.c	/^synch_cursor()$/;"	f
t_at	src/trap.c	/^	struct trap * t_at(int x, int y) {$/;"	f
t_id	include/tech.h	/^	int         t_id;                  \/* tech id$/;"	m	struct:tech
t_intrinsic	include/tech.h	/^	long        t_intrinsic;           \/* Source(s) *\/$/;"	m	struct:tech
t_inuse	include/tech.h	/^	int         t_inuse;               \/* time till effect stops$/;"	m	struct:tech
t_lev	include/tech.h	/^	xchar       t_lev;                 \/* power level$/;"	m	struct:tech
t_tout	include/tech.h	/^	int         t_tout;                \/* timeout - time until tech can be$/;"	m	struct:tech
t_warn	src/display.c	/^static void t_warn(struct rm *lev) {$/;"	f	file:
tabexpand	src/hacklib.c	/^char *tabexpand(char *sbuf) {$/;"	f
tabflgs	sys/share/unixtty.c	105;"	d	file:
tabflgs	sys/share/unixtty.c	50;"	d	file:
tactics	src/wizard.c	/^int tactics (struct monst *mtmp) {$/;"	f
take_gold	src/sit.c	/^take_gold() {$/;"	f
take_off	src/do_wear.c	/^static int take_off(void) {$/;"	f	file:
takeoff_mask	src/do_wear.c	/^static long takeoff_mask = 0L;$/;"	v	file:
takeoff_order	src/do_wear.c	/^static const long takeoff_order[] = {WORN_BLINDF, W_WEP,$/;"	v	file:
taking_off	src/do_wear.c	/^static long taking_off = 0L;$/;"	v	file:
taking_off	src/invent.c	/^static boolean taking_off(const char *action) {$/;"	f	file:
tamedog	src/dog.c	/^struct monst *tamedog(struct monst *mtmp, struct obj *obj) {$/;"	f
target_on	src/wizard.c	/^static long target_on(int mask, struct monst *mtmp) {$/;"	f	file:
tarocchi	src/gypsy.c	/^static void tarocchi(struct monst *mtmp) {$/;"	f	file:
tbuf	win/tty/termcap.c	/^static char tbuf[512];$/;"	v	file:
tbx	src/decl.c	/^schar tbx = 0, tby = 0;	\/* mthrowu: target *\/$/;"	v
tby	src/decl.c	/^schar tbx = 0, tby = 0;	\/* mthrowu: target *\/$/;"	v
tc_AE	include/decl.h	/^	char *tc_AS, *tc_AE;	\/* graphics start and end (tty font swapping) *\/$/;"	m	struct:tc_gbl_data
tc_AE	include/tcap.h	/^	char *tc_AS, *tc_AE;	\/* graphics start and end (tty font swapping) *\/$/;"	m	struct:tc_gbl_data
tc_AS	include/decl.h	/^	char *tc_AS, *tc_AE;	\/* graphics start and end (tty font swapping) *\/$/;"	m	struct:tc_gbl_data
tc_AS	include/tcap.h	/^	char *tc_AS, *tc_AE;	\/* graphics start and end (tty font swapping) *\/$/;"	m	struct:tc_gbl_data
tc_CD	include/tcap.h	/^	char *tc_CM, *tc_ND, *tc_CD;$/;"	m	struct:tc_lcl_data
tc_CM	include/tcap.h	/^	char *tc_CM, *tc_ND, *tc_CD;$/;"	m	struct:tc_lcl_data
tc_CO	include/decl.h	/^	int   tc_LI,  tc_CO;	\/* lines and columns *\/$/;"	m	struct:tc_gbl_data
tc_CO	include/tcap.h	/^	int   tc_LI,  tc_CO;	\/* lines and columns *\/$/;"	m	struct:tc_gbl_data
tc_HE	include/tcap.h	/^	char *tc_HI, *tc_HE, *tc_US, *tc_UE;$/;"	m	struct:tc_lcl_data
tc_HI	include/tcap.h	/^	char *tc_HI, *tc_HE, *tc_US, *tc_UE;$/;"	m	struct:tc_lcl_data
tc_LI	include/decl.h	/^	int   tc_LI,  tc_CO;	\/* lines and columns *\/$/;"	m	struct:tc_gbl_data
tc_LI	include/tcap.h	/^	int   tc_LI,  tc_CO;	\/* lines and columns *\/$/;"	m	struct:tc_gbl_data
tc_ND	include/tcap.h	/^	char *tc_CM, *tc_ND, *tc_CD;$/;"	m	struct:tc_lcl_data
tc_UE	include/tcap.h	/^	char *tc_HI, *tc_HE, *tc_US, *tc_UE;$/;"	m	struct:tc_lcl_data
tc_US	include/tcap.h	/^	char *tc_HI, *tc_HE, *tc_US, *tc_UE;$/;"	m	struct:tc_lcl_data
tc_entry	sys/share/tclib.c	/^static char *tc_entry;$/;"	v	file:
tc_field	sys/share/tclib.c	/^static const char * tc_field(const char *field, const char **tc_end) {$/;"	f	file:
tc_find	sys/share/tclib.c	/^static char *tc_find(FILE *fp, const char *term, char *buffer, int bufsiz) {$/;"	f	file:
tc_gbl_data	include/decl.h	/^extern struct tc_gbl_data {	\/* also declared in tcap.h *\/$/;"	s
tc_gbl_data	include/tcap.h	/^extern struct tc_gbl_data {   \/* also declared in decl.h; defined in decl.c *\/$/;"	s
tc_gbl_data	src/decl.c	/^struct tc_gbl_data tc_gbl_data = { 0,0, 0,0 };	\/* AS,AE, LI,CO *\/$/;"	v	typeref:struct:tc_gbl_data
tc_lcl_data	include/tcap.h	/^extern struct tc_lcl_data {   \/* defined and set up in termcap.c *\/$/;"	s
tc_lcl_data	util/lev_main.c	/^struct tc_lcl_data tc_lcl_data;$/;"	v	typeref:struct:tc_lcl_data
tc_lcl_data	win/tty/termcap.c	/^struct tc_lcl_data tc_lcl_data = {0, 0, 0, 0,0, 0,0, false};$/;"	v	typeref:struct:tc_lcl_data
tc_name	sys/share/tclib.c	/^static char *tc_name(const char *nam, char *ent) {$/;"	f	file:
tc_store	sys/share/tclib.c	/^static int tc_store(const char *trm, const char *ent) {$/;"	f	file:
tc_ul_hack	include/tcap.h	/^	boolean tc_ul_hack;$/;"	m	struct:tc_lcl_data
tech	include/tech.h	/^struct tech {$/;"	s
tech_id	include/tech.h	/^	short   tech_id; \/* the tech unique ID*\/$/;"	m	struct:innate_tech
tech_inuse	src/tech.c	/^int tech_inuse (int tech_id) {$/;"	f
tech_known	src/tech.c	/^boolean tech_known(short tech) {$/;"	f
tech_lev	include/tech.h	/^	int	tech_lev; \/* starts at level *\/$/;"	m	struct:innate_tech
tech_list	src/decl.c	/^struct tech tech_list[MAXTECH + 1] = {DUMMY};$/;"	v	typeref:struct:tech
tech_names	src/tech.c	/^static const char *tech_names[] = {$/;"	v	file:
tech_timeout	src/tech.c	/^void tech_timeout (void) {$/;"	f
techeffects	src/tech.c	/^static int techeffects (int tech_no) {$/;"	f	file:
techid	src/tech.c	212;"	d	file:
techlet	src/tech.c	214;"	d	file:
techlev	src/tech.c	211;"	d	file:
techname	src/tech.c	213;"	d	file:
techt_inuse	src/tech.c	209;"	d	file:
techtout	src/tech.c	210;"	d	file:
tele	src/teleport.c	/^void tele(void) {$/;"	f
tele_jump_ok	src/teleport.c	/^static boolean tele_jump_ok(int x1, int y1, int x2, int y2) {$/;"	f	file:
tele_restrict	src/teleport.c	/^boolean tele_restrict(struct monst *mon) {$/;"	f
tele_trap	src/teleport.c	/^tele_trap (struct trap *trap) {$/;"	f
teleds	src/teleport.c	/^void teleds(int nux, int nuy, boolean allow_drag) {$/;"	f
teleok	src/teleport.c	/^static boolean teleok(int x, int y, boolean trapok) {$/;"	f	file:
telepathic	include/mondata.h	82;"	d
teleport_pet	src/teleport.c	/^boolean teleport_pet(struct monst *mtmp, boolean force_it) {$/;"	f
template	src/cmd.c	/^static const char template[] = "%-18s %4ld  %6ld";$/;"	v	file:
temple_occupied	src/priest.c	/^temple_occupied (char *array) {$/;"	f
templit	include/vision.h	37;"	d
tended_shop	src/shk.c	/^boolean tended_shop(struct mkroom *sroom) {$/;"	f
term_cols	include/wincurs.h	/^int term_rows, term_cols; \/* size of underlying terminal *\/$/;"	v
term_end_attr	sys/winnt/nttty.c	/^void term_end_attr(int attrib) {$/;"	f
term_end_attr	win/curses/cursmisc.c	/^term_end_attr(int attr)$/;"	f
term_end_attr	win/tty/termcap.c	/^void term_end_attr(int attr) {$/;"	f
term_end_bgcolor	sys/winnt/nttty.c	/^void term_end_bgcolor(void) {$/;"	f
term_end_color	sys/winnt/nttty.c	/^void term_end_color(void) {$/;"	f
term_end_color	win/curses/cursmisc.c	/^term_end_color()$/;"	f
term_end_color	win/tty/termcap.c	/^void term_end_color(void) {$/;"	f
term_end_raw_bold	sys/winnt/nttty.c	/^void term_end_raw_bold(void) {$/;"	f
term_end_raw_bold	win/tty/termcap.c	/^void term_end_raw_bold(void) {$/;"	f
term_rows	include/wincurs.h	/^int term_rows, term_cols; \/* size of underlying terminal *\/$/;"	v
term_start_attr	sys/winnt/nttty.c	/^void term_start_attr(int attrib) {$/;"	f
term_start_attr	win/curses/cursmisc.c	/^term_start_attr(int attr)$/;"	f
term_start_attr	win/tty/termcap.c	/^void term_start_attr(int attr) {$/;"	f
term_start_bgcolor	sys/winnt/nttty.c	/^void term_start_bgcolor(int color) {$/;"	f
term_start_bgcolor	win/tty/termcap.c	/^void term_start_bgcolor(int color) {$/;"	f
term_start_color	sys/winnt/nttty.c	/^void term_start_color(int color) {$/;"	f
term_start_color	win/curses/cursmisc.c	/^term_start_color(int color)$/;"	f
term_start_color	win/tty/termcap.c	/^void term_start_color(int color) {$/;"	f
term_start_raw_bold	sys/winnt/nttty.c	/^void term_start_raw_bold(void) {$/;"	f
term_start_raw_bold	win/tty/termcap.c	/^void term_start_raw_bold(void) {$/;"	f
terminate	src/end.c	/^void terminate(int status) {$/;"	f
termio	sys/share/ioctl.c	/^struct termios termio;$/;"	v	typeref:struct:termios
termstruct	sys/share/unixtty.c	100;"	d	file:
termstruct	sys/share/unixtty.c	28;"	d	file:
termstruct	sys/share/unixtty.c	32;"	d	file:
termstruct	sys/share/unixtty.c	34;"	d	file:
test_move	src/hack.c	/^boolean test_move(int ux, int uy, int dx, int dy, int mode) {$/;"	f
text	include/color.h	/^	const char *text;$/;"	m	struct:text_color_option
text_color_of	src/botl.c	/^struct color_option text_color_of(const char *text, const struct text_color_option *color_options) {$/;"	f
text_color_option	include/color.h	/^struct text_color_option {$/;"	s
text_colors	src/options.c	/^const struct text_color_option *text_colors = NULL;$/;"	v	typeref:struct:text_color_option
tgetch	include/unixconf.h	242;"	d
tgetch	sys/winnt/nttty.c	/^tgetch()$/;"	f
tgetent	sys/share/tclib.c	/^int tgetent(char *entbuf, const char *term) {$/;"	f
tgetflag	sys/share/tclib.c	/^int tgetflag(const char *which) {$/;"	f
tgetnum	sys/share/tclib.c	/^int tgetnum(const char *which) {$/;"	f
tgetstr	sys/share/tclib.c	/^char * tgetstr(const char *which, char **outptr) {$/;"	f
tgfirst	src/display.c	/^} tgfirst;$/;"	v	typeref:struct:tmp_glyph	file:
tglyph	include/attk.h	/^	long	tglyph;			\/* Glyph to use for tobj *\/$/;"	m	struct:Attk
tglyph	src/display.c	/^static struct tmp_glyph *tglyph = NULL;$/;"	v	typeref:struct:tmp_glyph	file:
tgoto	sys/share/tclib.c	/^char *tgoto(const char *cm, int col, int row) {$/;"	f
tgoto	win/tty/termcap.c	56;"	d	file:
tgotobuf	win/tty/termcap.c	/^static char tgotobuf[20];$/;"	v	file:
the	src/objnam.c	/^char * the (const char *str) {$/;"	f
the_unique_obj	src/objnam.c	/^boolean the_unique_obj(struct obj *obj) {$/;"	f
thick_skinned	include/mondata.h	76;"	d
third_last_hit	src/hack.c	/^int third_last_hit = 0;$/;"	v
this_type	src/invent.c	/^static int this_type;$/;"	v	file:
this_type_only	src/invent.c	/^static bool this_type_only(struct obj *obj) {$/;"	f	file:
thisplace	src/decl.c	/^struct obj thisplace = DUMMY;$/;"	v	typeref:struct:obj
thitm	src/trap.c	/^	static boolean thitm(int tlev, struct monst *mon, struct obj *obj, int d_override, boolean nocorpse) {$/;"	f	file:
thitmonst	src/dothrow.c	/^int thitmonst (struct monst *mon, struct obj *obj, int thrown) {$/;"	f
thitu	src/mthrowu.c	/^int thitu ( int tlev, int dam, struct obj *obj, const char *name	) {$/;"	f
throw_gold	src/dothrow.c	/^static int throw_gold(struct obj *obj) {$/;"	f	file:
throw_obj	src/dothrow.c	/^static int throw_obj(struct obj *obj, int shotlimit, int thrown) {$/;"	f	file:
throwing_weapon	src/dothrow.c	/^static boolean throwing_weapon(struct obj *obj) {$/;"	f	file:
throwit	src/dothrow.c	/^void throwit($/;"	f
thrownobj	src/dothrow.c	/^struct obj *thrownobj = 0;	\/* tracks an object until it lands *\/$/;"	v	typeref:struct:obj
throws_rocks	include/mondata.h	129;"	d
throwspell	src/zap.c	/^throwspell() {$/;"	f
throwstorm	src/zap.c	/^static void throwstorm(struct obj *obj, int skilldmg, int min, int range) {$/;"	f	file:
thrwmm	src/mhitm.c	/^static int thrwmm(struct monst *magr, struct monst *mdef) {$/;"	f	file:
thrwmu	src/mthrowu.c	/^void thrwmu (struct monst *mtmp) {$/;"	f
ti_map	win/tty/termcap.c	/^const int ti_map[8] = {$/;"	v
tid	include/timeout.h	/^	unsigned long tid;		\/* timer ID *\/$/;"	m	struct:fe
tile_view	include/flag.h	/^	bool tile_view;$/;"	m	struct:instance_flags
tileset	include/decl.h	/^extern struct tileset {$/;"	s
tileset	src/decl.c	/^char tileset[PL_PSIZ] = DUMMY;$/;"	v
tilesets	src/decl.c	/^struct tileset tilesets[MAXNOTILESETS];$/;"	v	typeref:struct:tileset
time	include/flag.h	/^	bool  time;		\/* display elapsed 'time' *\/$/;"	m	struct:flag
time_needed	src/apply.c	/^	int time_needed;$/;"	m	struct:trapinfo	file:
time_needed	src/apply.c	/^	int time_needed;$/;"	m	struct:whetstoneinfo	file:
timed	include/obj.h	/^	xchar timed;		\/* # of fuses (timers) attached to this obj *\/$/;"	m	struct:obj
timed_occ_fn	src/cmd.c	/^static int (*timed_occ_fn)(void);$/;"	v	file:
timed_occupation	src/cmd.c	/^static int timed_occupation(void) {$/;"	f	file:
timeout	include/timeout.h	/^	long timeout;			\/* when we time out *\/$/;"	m	struct:fe
timeout_funcs	src/timeout.c	/^static const ttable timeout_funcs[NUM_TIME_FUNCS] = {$/;"	v	file:
timeout_proc	include/timeout.h	/^typedef void (*timeout_proc)(void *, long);$/;"	t
timer_base	src/timeout.c	/^static timer_element *timer_base;		\/* "active" *\/$/;"	v	file:
timer_element	include/timeout.h	/^} timer_element;$/;"	t	typeref:struct:fe
timer_id	src/timeout.c	/^static unsigned long timer_id = 1;$/;"	v	file:
timer_is_local	src/timeout.c	/^static boolean timer_is_local(timer_element *timer) {$/;"	f	file:
timer_sanity_check	src/timeout.c	/^void timer_sanity_check(void) {$/;"	f
tin	src/eat.c	/^	struct	obj *tin;$/;"	m	struct:__anon5	typeref:struct:__anon5::obj	file:
tin	src/eat.c	/^} tin;$/;"	v	typeref:struct:__anon5	file:
tinker	src/tech.c	/^static int tinker(void) {$/;"	f	file:
tinnable	src/apply.c	/^boolean tinnable(struct obj *corpse) {$/;"	f
tinnables	src/apply.c	/^static const char tinnables[] = { ALLOW_FLOOROBJ, FOOD_CLASS, 0 };$/;"	v	file:
tintxts	src/eat.c	/^} tintxts[] = {$/;"	v	typeref:struct:__anon4	file:
title_to_mon	src/botl.c	/^int title_to_mon(const char *str, int *rank_indx, int *title_length) {$/;"	f
tmiss	src/dothrow.c	/^static void tmiss(struct obj *obj, struct monst *mon) {$/;"	f	file:
tmp_at	src/display.c	/^void tmp_at(int x, int y) {$/;"	f
tmp_glyph	src/display.c	/^static struct tmp_glyph {$/;"	s	file:
tmp_levels	src/files.c	1274;"	d	file:
tmp_levels	src/files.c	1278;"	d	file:
tmp_ramdisk	src/files.c	1275;"	d	file:
tmpaltar	build-linux/src/lev_yacc.c	/^altar *tmpaltar[MAX_OF_TYPE];$/;"	v
tmpbranch	build-linux/src/dgn_yacc.c	/^static struct tmpbranch tmpbranch[BRANCH_LIMIT];$/;"	v	typeref:struct:tmpbranch	file:
tmpbranch	include/dgn_file.h	/^struct tmpbranch {$/;"	s
tmpbranch	src/dungeon.c	/^	struct	tmpbranch  tmpbranch[BRANCH_LIMIT];$/;"	m	struct:proto_dungeon	typeref:struct:proto_dungeon::tmpbranch	file:
tmpcor	build-linux/src/lev_yacc.c	/^corridor *tmpcor[MAX_OF_TYPE];$/;"	v
tmpdb	build-linux/src/lev_yacc.c	/^drawbridge *tmpdb[MAX_OF_TYPE];$/;"	v
tmpdig	build-linux/src/lev_yacc.c	/^digpos *tmpdig[MAX_OF_TYPE];$/;"	v
tmpdoor	build-linux/src/lev_yacc.c	/^door *tmpdoor[MAX_OF_TYPE];$/;"	v
tmpdungeon	build-linux/src/dgn_yacc.c	/^static struct tmpdungeon tmpdungeon[MAXDUNGEON];$/;"	v	typeref:struct:tmpdungeon	file:
tmpdungeon	include/dgn_file.h	/^struct tmpdungeon {$/;"	s
tmpdungeon	src/dungeon.c	/^	struct	tmpdungeon tmpdungeon[MAXDUNGEON];$/;"	m	struct:proto_dungeon	typeref:struct:proto_dungeon::tmpdungeon	file:
tmpengraving	build-linux/src/lev_yacc.c	/^engraving *tmpengraving[MAX_OF_TYPE];$/;"	v
tmpfountain	build-linux/src/lev_yacc.c	/^fountain *tmpfountain[MAX_OF_TYPE];$/;"	v
tmpgold	build-linux/src/lev_yacc.c	/^gold *tmpgold[MAX_OF_TYPE];$/;"	v
tmplad	build-linux/src/lev_yacc.c	/^lad *tmplad[MAX_OF_TYPE];$/;"	v
tmplevel	build-linux/src/dgn_yacc.c	/^static struct tmplevel tmplevel[LEV_LIMIT];$/;"	v	typeref:struct:tmplevel	file:
tmplevel	include/dgn_file.h	/^struct tmplevel {$/;"	s
tmplevel	src/dungeon.c	/^	struct	tmplevel   tmplevel[LEV_LIMIT];$/;"	m	struct:proto_dungeon	typeref:struct:proto_dungeon::tmplevel	file:
tmplreg	build-linux/src/lev_yacc.c	/^lev_region *tmplreg[MAX_OF_TYPE];$/;"	v
tmpmap	build-linux/src/lev_yacc.c	/^char *tmpmap[ROWNO];$/;"	v
tmpmessage	build-linux/src/lev_yacc.c	/^char tmpmessage[256];$/;"	v
tmpmonst	build-linux/src/lev_yacc.c	/^monster *tmpmonst[MAX_OF_TYPE];$/;"	v
tmpobj	build-linux/src/lev_yacc.c	/^object *tmpobj[MAX_OF_TYPE];$/;"	v
tmpparent	src/dungeon.c	/^	int	tmpparent[BRANCH_LIMIT];$/;"	m	struct:proto_dungeon	file:
tmppart	build-linux/src/lev_yacc.c	/^mazepart *tmppart[10];$/;"	v
tmppass	build-linux/src/lev_yacc.c	/^digpos *tmppass[32];$/;"	v
tmppool	build-linux/src/lev_yacc.c	/^pool *tmppool[MAX_OF_TYPE];$/;"	v
tmprdoor	build-linux/src/lev_yacc.c	/^room_door *tmprdoor[MAX_OF_TYPE];$/;"	v
tmpreg	build-linux/src/lev_yacc.c	/^region *tmpreg[MAX_OF_TYPE];$/;"	v
tmprndlreg	build-linux/src/lev_yacc.c	/^lev_region *tmprndlreg[MAX_REGISTERS];$/;"	v
tmproom	build-linux/src/lev_yacc.c	/^room *tmproom[MAXNROFROOMS*2];$/;"	v
tmpsink	build-linux/src/lev_yacc.c	/^sink *tmpsink[MAX_OF_TYPE];$/;"	v
tmpstair	build-linux/src/lev_yacc.c	/^stair *tmpstair[MAX_OF_TYPE];$/;"	v
tmptrap	build-linux/src/lev_yacc.c	/^trap *tmptrap[MAX_OF_TYPE];$/;"	v
tmpwalk	build-linux/src/lev_yacc.c	/^walk *tmpwalk[MAX_OF_TYPE];$/;"	v
tmspc10	win/tty/termcap.c	/^static const short tmspc10[] = {		\/* from termcap *\/$/;"	v	file:
to_continue	win/tty/wintty.c	/^static const char to_continue[] = "to continue";$/;"	v	file:
tobj	include/attk.h	/^	struct obj *tobj;		\/* The thrown, kicked, or zapped object *\/$/;"	m	struct:Attk	typeref:struct:Attk::obj
tobj	src/apply.c	/^	struct obj *tobj, *wsobj;$/;"	m	struct:whetstoneinfo	typeref:struct:whetstoneinfo::obj	file:
tobj	src/apply.c	/^	struct obj *tobj;$/;"	m	struct:trapinfo	typeref:struct:trapinfo::obj	file:
todelay	src/do_wear.c	/^static int todelay;$/;"	v	file:
toggle_mouse_support	sys/winnt/nttty.c	/^void toggle_mouse_support(void) {$/;"	f
tohit	include/attk.h	/^	xchar	tohit;			\/* Calculated to-hit value *\/$/;"	m	struct:Attk
tohit	src/uhitm.c	31;"	d	file:
tolev	include/dungeon.h	/^	d_level	tolev;		\/* where does it go *\/$/;"	m	struct:stairway
tombstone	include/flag.h	/^	bool  tombstone;	\/* print tombstone *\/$/;"	m	struct:flag
tone	src/music.c	/^static void tone(hz, ticks)$/;"	f	file:
tool_in_use	src/invent.c	/^static boolean tool_in_use(struct obj *obj) {$/;"	f	file:
tool_types	src/shk.c	/^static const char tool_types[] = { TOOL_CLASS, 0 };$/;"	v	file:
tools	src/apply.c	/^static const char tools[] = { TOOL_CLASS, WEAPON_CLASS, WAND_CLASS, 0 };$/;"	v	file:
tools_too	src/apply.c	/^static const char tools_too[] = { ALL_CLASSES, TOOL_CLASS, POTION_CLASS,$/;"	v	file:
toostrong	src/makemon.c	34;"	d	file:
tooweak	src/makemon.c	35;"	d	file:
top	include/egyp.h	/^	int top;					\/* Index of top of the deck *\/$/;"	m	struct:egyp
topl_putsym	win/tty/topl.c	/^static void topl_putsym(glyph_t c) {$/;"	f	file:
toplin	include/wintty.h	/^	int toplin;			\/* flag for topl stuff *\/$/;"	m	struct:DisplayDesc
toplines	src/decl.c	/^char toplines[TBUFSZ];$/;"	v
topologize	src/mklev.c	/^topologize(struct mkroom *croom, boolean do_ordinary)$/;"	f
topten	src/topten.c	/^void topten (int how) {$/;"	f
topten_print	src/topten.c	/^static void topten_print(const char *x) {$/;"	f	file:
topten_print_bold	src/topten.c	/^static void topten_print_bold(const char *x) {$/;"	f	file:
toptenentry	src/topten.c	/^struct toptenentry {$/;"	s	file:
toptenwin	include/flag.h	/^	bool  toptenwin;	\/* ending list in window instead of stdout *\/$/;"	m	struct:flag
toptenwin	src/topten.c	/^static winid toptenwin = WIN_ERR;$/;"	v	file:
toss_objs	src/dothrow.c	/^static const char toss_objs[] =$/;"	v	file:
toss_up	src/dothrow.c	/^static boolean toss_up(struct obj *obj, boolean hitsroof) {$/;"	f	file:
toss_wsegs	src/worm.c	/^static void toss_wsegs(struct wseg *curr, boolean display_update) {$/;"	f	file:
tou_abil	src/attrib.c	/^tou_abil[] = { {	10, &(HSearching), "perceptive", "" },$/;"	v	typeref:struct:innate	file:
tou_tech	src/tech.c	/^tou_tech[] = { \/* Put Tech here *\/$/;"	v	typeref:struct:	file:
touch_artifact	src/artifact.c	/^int touch_artifact (struct obj *obj, struct monst *mon) {$/;"	f
touch_petrifies	include/mondata.h	199;"	d
touched_artifact	include/quest.h	/^	bool touched_artifact;	\/* for a special message *\/$/;"	m	struct:q_score
touchfood	src/eat.c	/^static struct obj *touchfood(struct obj *otmp) {$/;"	f	file:
tower_dnum	include/decl.h	103;"	d
tower_of_flame	src/trap.c	/^static const char tower_of_flame[] = "tower of flame";$/;"	v	file:
town	include/dungeon.h	/^	bool town;	\/* is this a town? (levels only) *\/$/;"	m	struct:d_flags
tp_sensemon	include/display.h	23;"	d
tparam	sys/share/tclib.c	/^char *tparam(const char *ctl, char *buf, int buflen, int row, int col, int row2, int col2) {$/;"	f
tputs	sys/share/tclib.c	/^void tputs(const char *string, int range, int (*output_func)()) {$/;"	f
traditional_view	include/flag.h	/^	bool traditional_view;$/;"	m	struct:instance_flags
transp	src/display.c	/^static boolean transp;    \/* cached transparency flag for current tileset *\/$/;"	v	file:
trap	include/sp_lev.h	/^} trap;$/;"	t	typeref:struct:__anon34
trap	include/trap.h	/^struct trap {$/;"	s
trap_detect	src/detect.c	/^int trap_detect(struct obj *sobj) {$/;"	f
trap_engravings	src/mklev.c	/^static const char *trap_engravings[TRAPNUM] = {$/;"	v	file:
trap_to_cmap	include/display.h	308;"	d
trap_to_defsym	include/rm.h	522;"	d
trap_to_glyph	include/display.h	309;"	d
trap_types	util/lev_main.c	/^} trap_types[] = {$/;"	v	typeref:struct:__anon20	file:
trapinfo	src/apply.c	/^static struct trapinfo {$/;"	s	file:
trapinfo	src/apply.c	/^} trapinfo;$/;"	v	typeref:struct:trapinfo	file:
traps	include/sp_lev.h	/^	trap **traps;$/;"	m	struct:__anon52
traps	include/sp_lev.h	/^	trap **traps;$/;"	m	struct:_room
traps	util/lev_main.c	/^const char *traps[TRAPNUM];$/;"	v
trapx	src/muse.c	/^static int trapx, trapy;$/;"	v	file:
trapy	src/muse.c	/^static int trapx, trapy;$/;"	v	file:
travel	include/flag.h	/^	bool  travel;        \/* find way automatically to u.tx,u.ty *\/$/;"	m	struct:flag
travel1	include/flag.h	/^	bool	travel1;	\/* first travel step *\/$/;"	m	struct:instance_flags
travelcc	include/flag.h	/^	coord	travelcc;	\/* coordinates for travel_cache *\/$/;"	m	struct:instance_flags
travelcmd	include/flag.h	/^	bool  travelcmd;	\/* allow travel command *\/$/;"	m	struct:instance_flags
trclass	src/u_init.c	/^	char trclass;$/;"	m	struct:trobj	file:
treefruits	src/mkobj.c	/^static int treefruits[] = {APPLE,ORANGE,PEAR,BANANA,EUCALYPTUS_LEAF};$/;"	v	file:
trickery	src/restore.c	/^void trickery (char *reason) {$/;"	f
trobj	src/u_init.c	/^struct trobj {$/;"	s	file:
trotyp	src/u_init.c	/^	short trotyp;$/;"	m	struct:trobj	file:
trspe	src/u_init.c	/^	schar trspe;$/;"	m	struct:trobj	file:
true	win/tty/termcap.c	606;"	d	file:
trumps	src/gypsy.c	/^static const char *trumps[CARD_TRUMPS] = {$/;"	v	file:
try_disarm	src/trap.c	/^	static int try_disarm(struct trap *ttmp, boolean force_failure) {$/;"	f	file:
try_lift	src/trap.c	/^	static int try_lift( struct monst *mtmp, struct trap *ttmp, int wt, boolean stuff) {$/;"	f	file:
trycall	src/do.c	/^static void trycall(struct obj *obj) {$/;"	f	file:
tseen	include/trap.h	/^	bool tseen;$/;"	m	struct:trap
tt_head	src/topten.c	/^} *tt_head;$/;"	v	typeref:struct:toptenentry
tt_next	src/topten.c	/^	struct toptenentry *tt_next;$/;"	m	struct:toptenentry	typeref:struct:toptenentry::toptenentry	file:
tt_oname	src/topten.c	/^struct obj * tt_oname(struct obj *otmp) {$/;"	f
ttable	src/timeout.c	/^} ttable;$/;"	t	typeref:struct:__anon19	file:
ttl	include/region.h	/^	short  ttl;			\/* Time to live. -1 is forever *\/$/;"	m	struct:__anon29
ttyDisplay	win/tty/wintty.c	/^struct DisplayDesc *ttyDisplay;	\/* the tty display descriptor *\/$/;"	v	typeref:struct:DisplayDesc
tty_add_menu	win/tty/wintty.c	/^void tty_add_menu($/;"	f
tty_askname	win/tty/wintty.c	/^void tty_askname(void) {$/;"	f
tty_clear_nhwindow	win/tty/wintty.c	/^void tty_clear_nhwindow(winid window) {$/;"	f
tty_cliparound	win/tty/wintty.c	/^void tty_cliparound(int x, int y) {$/;"	f
tty_create_nhwindow	win/tty/wintty.c	/^winid tty_create_nhwindow(int type) {$/;"	f
tty_curs	win/tty/wintty.c	/^void tty_curs(winid window, int x, int y) {$/;"	f
tty_delay_output	sys/winnt/nttty.c	/^void tty_delay_output(void) {$/;"	f
tty_delay_output	win/tty/termcap.c	/^void tty_delay_output(void) {$/;"	f
tty_destroy_nhwindow	win/tty/wintty.c	/^void tty_destroy_nhwindow(winid window) {$/;"	f
tty_dismiss_nhwindow	win/tty/wintty.c	/^void tty_dismiss_nhwindow(winid window) {$/;"	f
tty_display_file	win/tty/wintty.c	/^void tty_display_file(const char *fname, bool complain) {$/;"	f
tty_display_nhwindow	win/tty/wintty.c	/^void tty_display_nhwindow(winid window, bool blocking) {$/;"	f
tty_doprev_message	win/tty/topl.c	/^int tty_doprev_message(void) {$/;"	f
tty_end_menu	win/tty/wintty.c	/^void tty_end_menu(winid window, const char *prompt) {$/;"	f
tty_end_screen	sys/winnt/nttty.c	/^tty_end_screen()$/;"	f
tty_end_screen	win/tty/termcap.c	/^void tty_end_screen(void) {$/;"	f
tty_exit_nhwindows	win/tty/wintty.c	/^void tty_exit_nhwindows(const char *str) {$/;"	f
tty_get_ext_cmd	win/tty/getline.c	/^int tty_get_ext_cmd(void) {$/;"	f
tty_get_nh_event	win/tty/wintty.c	/^void tty_get_nh_event(void) {$/;"	f
tty_getlin	win/tty/getline.c	/^void tty_getlin(const char *query, char *bufp) {$/;"	f
tty_init_nhwindows	win/tty/wintty.c	/^void tty_init_nhwindows(int* argcp, char** argv) {$/;"	f
tty_kbhit	win/tty/wintty.c	/^int tty_kbhit(void) {$/;"	f
tty_mark_synch	win/tty/wintty.c	/^void tty_mark_synch(void) {$/;"	f
tty_menu_item	include/wintty.h	/^} tty_menu_item;$/;"	t	typeref:struct:tty_mi
tty_message_menu	win/tty/wintty.c	/^char tty_message_menu(char let, int how, const char *mesg) {$/;"	f
tty_mi	include/wintty.h	/^typedef struct tty_mi {$/;"	s
tty_nh_poskey	win/tty/wintty.c	/^int tty_nh_poskey(int *x, int *y, int *mod) {$/;"	f
tty_nhbell	sys/winnt/nttty.c	/^tty_nhbell()$/;"	f
tty_nhbell	win/tty/termcap.c	/^void tty_nhbell(void) {$/;"	f
tty_nhgetch	win/tty/wintty.c	/^int tty_nhgetch(void) {$/;"	f
tty_number_pad	sys/winnt/nttty.c	/^tty_number_pad(state)$/;"	f
tty_number_pad	win/tty/termcap.c	/^void tty_number_pad(int state) {$/;"	f
tty_player_selection	win/tty/wintty.c	/^void tty_player_selection(void) {$/;"	f
tty_print_glyph	win/tty/wintty.c	/^void tty_print_glyph(winid window, xchar x, xchar y, int glyph) {$/;"	f
tty_procs	win/tty/wintty.c	/^struct window_procs tty_procs = {$/;"	v	typeref:struct:window_procs
tty_putstr	win/tty/wintty.c	/^void tty_putstr(winid window, int attr, const char *str) {$/;"	f
tty_putsym	win/tty/wintty.c	/^static void tty_putsym(winid window, int x, int y, char ch) {$/;"	f	file:
tty_race_select	win/tty/wintty.c	/^static int tty_race_select(char * pbuf, char * plbuf) {$/;"	f	file:
tty_raw_print	win/tty/wintty.c	/^void tty_raw_print(const char *str) {$/;"	f
tty_raw_print_bold	win/tty/wintty.c	/^void tty_raw_print_bold(const char *str) {$/;"	f
tty_resume_nhwindows	win/tty/wintty.c	/^void tty_resume_nhwindows(void) {$/;"	f
tty_role_select	win/tty/wintty.c	/^static int tty_role_select(char * pbuf, char * plbuf) {$/;"	f	file:
tty_select_menu	win/tty/wintty.c	/^int tty_select_menu(winid window, int how, menu_item **menu_list) {$/;"	f
tty_shutdown	win/tty/termcap.c	/^void tty_shutdown(void) {$/;"	f
tty_start_menu	win/tty/wintty.c	/^void tty_start_menu(winid window) {$/;"	f
tty_start_screen	sys/winnt/nttty.c	/^tty_start_screen()$/;"	f
tty_start_screen	win/tty/termcap.c	/^void tty_start_screen(void) {$/;"	f
tty_startup	sys/winnt/nttty.c	/^tty_startup(wid, hgt)$/;"	f
tty_startup	win/tty/termcap.c	/^void tty_startup(int *wid, int *hgt) {$/;"	f
tty_suspend_nhwindows	win/tty/wintty.c	/^void tty_suspend_nhwindows(const char *str) {$/;"	f
tty_update_inventory	win/tty/wintty.c	/^void tty_update_inventory(void) {$/;"	f
tty_update_positionbar	win/tty/wintty.c	/^void tty_update_positionbar(char *posbar) {$/;"	f
tty_wait_synch	win/tty/wintty.c	/^void tty_wait_synch(void) {$/;"	f
tty_yn_function	win/tty/topl.c	/^char tty_yn_function(const char *query, const char *resp, char def) {$/;"	f
ttycolors	sys/winnt/nttty.c	/^int ttycolors[CLR_MAX];$/;"	v
ttycolors	win/tty/termcap.c	/^char ttycolors[CLR_MAX];$/;"	v
tune	src/decl.c	/^char tune[6] = DUMMY;$/;"	v
tunnels	include/mondata.h	48;"	d
turn	win/curses/cursmesg.c	/^    long turn;                  \/* Turn number for message *\/$/;"	m	struct:nhpm	file:
turn_lines	win/curses/cursmesg.c	/^static int turn_lines = 1;$/;"	v	file:
turn_undead	src/pray.c	/^int turn_undead (void) {$/;"	f
twoweap	include/you.h	/^	boolean twoweap;		\/* KMH -- using two-weapon combat *\/$/;"	m	struct:you
tx	include/attk.h	/^	xchar	tx, ty;			\/* Location of tobj *\/$/;"	m	struct:Attk
tx	include/trap.h	/^	xchar tx,ty;$/;"	m	struct:trap
tx	include/you.h	/^	xchar tx, ty;		\/* destination of travel *\/$/;"	m	struct:you
tx	src/apply.c	/^	xchar tx, ty;$/;"	m	struct:trapinfo	file:
txt	src/eat.c	/^	const char *txt;$/;"	m	struct:__anon4	file:
txt	win/curses/cursstat.c	/^    const char *txt; \/* For status problems *\/$/;"	m	struct:statcolor	file:
txt2key	src/cmd.c	/^txt2key(txt)$/;"	f
ty	include/attk.h	/^	xchar	tx, ty;			\/* Location of tobj *\/$/;"	m	struct:Attk
ty	include/trap.h	/^	xchar tx,ty;$/;"	m	struct:trap
ty	include/you.h	/^	xchar tx, ty;		\/* destination of travel *\/$/;"	m	struct:you
ty	src/apply.c	/^	xchar tx, ty;$/;"	m	struct:trapinfo	file:
typ	include/rm.h	/^	schar typ;		\/* what is really there *\/$/;"	m	struct:rm
typ	include/rm.h	/^	schar typ;$/;"	m	struct:damage
typ	src/end.c	/^	int typ;$/;"	m	struct:valuable_data	file:
type	include/align.h	/^	aligntyp	type;$/;"	m	struct:align
type	include/dgn_file.h	/^	int	type;		\/* branch type (see below) *\/$/;"	m	struct:tmpbranch
type	include/dungeon.h	/^	int		  type;		\/* type of branch *\/$/;"	m	struct:branch
type	include/lev.h	/^	short type;		\/* type of light source *\/$/;"	m	struct:ls_t
type	include/sp_lev.h	/^	xchar x, y, chance, type;$/;"	m	struct:__anon34
type	include/wintty.h	/^	xchar type;			\/* type of window *\/$/;"	m	struct:WinDesc
type	util/lev_main.c	/^	int type;$/;"	m	struct:__anon20	file:
type	util/lev_main.c	/^	int type;$/;"	m	struct:__anon21	file:
type_is_pname	include/mondata.h	130;"	d
type_names	src/display.c	/^static const char *type_names[MAX_TYPE] = {$/;"	v	file:
type_to_name	src/display.c	/^static const char *type_to_name (int type) {$/;"	f	file:
u	src/decl.c	/^struct you u = DUMMY;$/;"	v	typeref:struct:you
u_achieve	include/decl.h	/^struct u_achieve {$/;"	s
u_conduct	include/you.h	/^struct u_conduct {		\/* number of times... *\/$/;"	s
u_entered_shop	src/shk.c	/^void u_entered_shop (char *enterstring) {$/;"	f
u_event	include/you.h	/^struct u_event {$/;"	s
u_gname	src/pray.c	/^const char * u_gname (void)  {$/;"	f
u_have	include/you.h	/^struct u_have {$/;"	s
u_init	src/u_init.c	/^u_init (void) {$/;"	f
u_left_shop	src/shk.c	/^void u_left_shop(char *leavestring, boolean newlev) {$/;"	f
u_on_dnstairs	src/dungeon.c	/^void u_on_dnstairs(void) {$/;"	f
u_on_newpos	src/dungeon.c	/^void u_on_newpos(int x, int y) {$/;"	f
u_on_sstairs	src/dungeon.c	/^void u_on_sstairs(void) {$/;"	f
u_on_upstairs	src/dungeon.c	/^void u_on_upstairs(void) {$/;"	f
u_slip_free	src/mhitu.c	/^static boolean u_slip_free(struct monst *mtmp, struct attack *mattk) {$/;"	f	file:
u_slow_down	src/mhitu.c	/^void u_slow_down(void) {$/;"	f
u_teleport_mon	src/teleport.c	/^boolean u_teleport_mon(struct monst *mtmp, boolean give_feedback) {$/;"	f
u_to_e	src/dbridge.c	/^static void u_to_e(struct entity *etmp) {$/;"	f	file:
u_wipe_engr	src/engrave.c	/^void u_wipe_engr(int cnt) {$/;"	f
uac	include/you.h	/^	schar	uac;$/;"	m	struct:you
ualign	include/you.h	/^	align	ualign;			\/* character alignment *\/$/;"	m	struct:you
ualignbase	include/you.h	/^	aligntyp ualignbase[CONVERT];	\/* for ualign conversion record *\/$/;"	m	struct:you
uamul	src/decl.c	/^	                   *uarmf = NULL, *uamul = NULL,$/;"	v	typeref:struct:
uarm	src/decl.c	/^	            *uwep = NULL, *uarm = NULL,$/;"	v	typeref:struct:
uarmc	src/decl.c	/^	                 *uarmc = NULL, *uarmh = NULL,$/;"	v	typeref:struct:
uarmf	src/decl.c	/^	                   *uarmf = NULL, *uamul = NULL,$/;"	v	typeref:struct:
uarmfbon	src/spell.c	107;"	d	file:
uarmg	src/decl.c	/^	                  *uarms = NULL, *uarmg = NULL,$/;"	v	typeref:struct:
uarmgbon	src/spell.c	106;"	d	file:
uarmh	src/decl.c	/^	                 *uarmc = NULL, *uarmh = NULL,$/;"	v	typeref:struct:
uarmhbon	src/spell.c	105;"	d	file:
uarms	src/decl.c	/^	                  *uarms = NULL, *uarmg = NULL,$/;"	v	typeref:struct:
uarmu	src/decl.c	/^	               *uarmu = NULL, \/* under-wear, so to speak *\/$/;"	v	typeref:struct:
uball	src/decl.c	/^	                         *uball = NULL;$/;"	v	typeref:struct:
ubirthday	include/you.h	/^	time_t	ubirthday;		\/* real world time when game began *\/$/;"	m	struct:you
ublesscnt	include/you.h	/^	int ublessed, ublesscnt;	\/* blessing\/duration from #pray *\/$/;"	m	struct:you
ublessed	include/you.h	/^	int ublessed, ublesscnt;	\/* blessing\/duration from #pray *\/$/;"	m	struct:you
ublindf	src/decl.c	/^	                      *ublindf = NULL,$/;"	v	typeref:struct:
uburied	include/you.h	/^	bool uburied;		\/* you're buried *\/$/;"	m	struct:you
uchain	src/decl.c	/^	                        *uchain = NULL,$/;"	v	typeref:struct:
uchar	include/config.h	/^typedef unsigned char	uchar;$/;"	t
ucleansed	include/you.h	/^	long	ucleansed;	\/* to record moves when player was cleansed *\/$/;"	m	struct:you
uconduct	include/you.h	/^	struct u_conduct uconduct;	\/* KMH, conduct *\/$/;"	m	struct:you	typeref:struct:you::u_conduct
ucreamed	include/you.h	/^	unsigned ucreamed;$/;"	m	struct:you
udaminc	include/you.h	/^	schar	udaminc;		\/* Additional damage bonus *\/$/;"	m	struct:you
udemigod	include/you.h	/^	bool udemigod;		\/* killed the wiz *\/$/;"	m	struct:u_event
udg_cnt	include/you.h	/^	unsigned udg_cnt;		\/* how long you have been demigod *\/$/;"	m	struct:you
uedibility	include/you.h	/^	bool uedibility;		\/* blessed food detection; sense unsafe food *\/$/;"	m	struct:you
uen	include/you.h	/^	int	uen, uenmax;		\/* magical energy - M. Stephenson *\/$/;"	m	struct:you
uenmax	include/you.h	/^	int	uen, uenmax;		\/* magical energy - M. Stephenson *\/$/;"	m	struct:you
uentered	include/you.h	/^	char	uentered[5];	\/* rooms (roomno + 3) entered this turn *\/$/;"	m	struct:you
uevent	include/you.h	/^	struct u_event	uevent;		\/* certain events have happened *\/$/;"	m	struct:you	typeref:struct:you::u_event
uexp	include/monst.h	/^	bool uexp;		\/* you get experience for its kills *\/$/;"	m	struct:monst
uexp	include/you.h	/^	long	uexp, urexp;$/;"	m	struct:you
ugallop	include/you.h	/^	long ugallop;$/;"	m	struct:you
ugangr	include/you.h	/^	int ugangr;			\/* if the gods are angry at you *\/$/;"	m	struct:you
ugifts	include/you.h	/^	int ugifts;			\/* number of artifacts bestowed *\/$/;"	m	struct:you
ugly_checks	src/invent.c	/^static int ugly_checks(const char *let, const char *word, struct obj *otmp) {$/;"	f	file:
ugly_word	src/invent.c	/^static const char *ugly_word;$/;"	v	file:
ugod_is_angry	src/pray.c	117;"	d	file:
ugolemeffects	src/polyself.c	/^ugolemeffects (int damtype, int dam) {$/;"	f
ugrave_arise	include/you.h	/^	int ugrave_arise; \/* you die and become something aside from a ghost *\/$/;"	m	struct:you
uhave	include/you.h	/^	struct u_have	uhave;		\/* you're carrying special objects *\/$/;"	m	struct:you	typeref:struct:you::u_have
uhave_graystone	src/apply.c	/^static boolean uhave_graystone(void) {$/;"	f	file:
uhe	include/you.h	214;"	d
uhealbonus	include/you.h	/^	long	uhealbonus;		\/* KMH -- Healing bonus from healthstones *\/$/;"	m	struct:you
uhim	include/you.h	215;"	d
uhis	include/you.h	216;"	d
uhitinc	include/you.h	/^	schar	uhitinc;		\/* KMH -- additional to-hit bonus *\/$/;"	m	struct:you
uhp	include/you.h	/^	int     uhp, uhpmax;$/;"	m	struct:you
uhp	src/attrib.c	/^uhp() {$/;"	f
uhpmax	include/you.h	/^	int     uhp, uhpmax;$/;"	m	struct:you
uhpmax	src/attrib.c	/^uhpmax() {$/;"	f
uhs	include/you.h	/^	unsigned uhs;		\/* hunger state - see eat.c *\/$/;"	m	struct:you
uhunger	include/you.h	/^	int	 uhunger;	\/* refd only in eat.c and shk.c *\/$/;"	m	struct:you
uid	src/topten.c	/^	int uid;$/;"	m	struct:toptenentry	file:
uint	include/global.h	/^typedef unsigned int uint;$/;"	t
uint_to_any	src/hack.c	/^anything uint_to_any(uint ui) {$/;"	f
uinvault	include/you.h	/^	int uinvault;$/;"	m	struct:you
uinvulnerable	include/you.h	/^	bool uinvulnerable;	\/* you're invulnerable (praying) *\/$/;"	m	struct:you
uinwater	include/you.h	/^	bool uinwater;		\/* if you're currently in water (only$/;"	m	struct:you
ul_hack	include/tcap.h	36;"	d
uleft	src/decl.c	/^	                     *uleft = NULL,$/;"	v	typeref:struct:
ulevel	include/tech.h	/^	schar   ulevel; \/* gains tech at level *\/$/;"	m	struct:innate_tech
ulevel	include/you.h	/^	int ulevel;		\/* 1 to MAXULEV *\/$/;"	m	struct:you
ulevel	src/attrib.c	/^	schar	ulevel;$/;"	m	struct:innate	file:
ulevelmax	include/you.h	/^	int ulevelmax;		\/* Maximmum level achieved *\/$/;"	m	struct:you
ulong	include/global.h	/^typedef unsigned long ulong;$/;"	t
uluck	include/you.h	/^	schar uluck, moreluck;		\/* luck and luck bonus *\/$/;"	m	struct:you
ulycn	include/you.h	/^	int ulycn;			\/* lycanthrope type *\/$/;"	m	struct:you
um_dist	src/apply.c	/^boolean um_dist(xchar x, xchar y, xchar n) {$/;"	f
umconf	include/you.h	/^	unsigned umconf;$/;"	m	struct:you
umoney0	include/you.h	/^	long	umoney0;$/;"	m	struct:you
umonnum	include/you.h	/^	int umonnum;			\/* current monster number *\/$/;"	m	struct:you
umonster	include/you.h	/^	int umonster;			\/* hero's "real" monster num *\/$/;"	m	struct:you
umontelast	include/you.h	/^	char umontelast;	\/* Last monte card picked *\/$/;"	m	struct:you
umonteluck	include/you.h	/^	int umonteluck;		\/* Chance of winning; lower is better *\/$/;"	m	struct:you
umortality	include/you.h	/^	int	umortality;		\/* how many times you died *\/$/;"	m	struct:you
umoved	include/you.h	/^	boolean umoved;		\/* changed map location (post-move) *\/$/;"	m	struct:you
unbless	src/mkobj.c	/^unbless (struct obj *otmp) {$/;"	f
unblock_point	src/vision.c	/^unblock_point (int x, int y) {$/;"	f
unchanger	src/do_wear.c	/^struct obj *unchanger(void) {$/;"	f
uncommon	src/makemon.c	/^static boolean uncommon(int mndx) {$/;"	f	file:
unconscious	src/trap.c	/^	boolean unconscious(void) {$/;"	f
uncurse	src/mkobj.c	/^uncurse (struct obj *otmp) {$/;"	f
und_abil	src/attrib.c	/^und_abil[] = { {   1, &(HStealth), "", "" },$/;"	v	typeref:struct:innate	file:
und_tech	src/tech.c	/^und_tech[] = { {   1, T_TURN_UNDEAD, 1},$/;"	v	typeref:struct:	file:
undead_to_corpse	src/mon.c	/^undead_to_corpse (int mndx) {$/;"	f
under_ground	src/display.c	/^void under_ground(int mode) {$/;"	f
under_water	src/display.c	/^void under_water(int mode) {$/;"	f
undiscover_object	src/o_init.c	/^undiscover_object (int oindx) {$/;"	f
undiscovered_artifact	src/artifact.c	/^boolean undiscovered_artifact(xchar m) {$/;"	f
unearth_objs	src/dig.c	/^void unearth_objs(int x, int y) {$/;"	f
unfaint	src/eat.c	/^static int unfaint(void) {$/;"	f	file:
unfixable_trouble_count	src/apply.c	/^int unfixable_trouble_count(boolean is_horn) {$/;"	f
unicode_to_utf8	src/unicode.c	/^void unicode_to_utf8(glyph_t c, char buf[5]) {$/;"	f
uniq_objs	src/o_init.c	/^static short uniq_objs[] = {$/;"	v	file:
unkn	src/potion.c	/^static int nothing, unkn;$/;"	v	file:
unknown_type	src/do_wear.c	/^static const char unknown_type[] = "Unknown type of %s (%d)";$/;"	v	file:
unleash_all	src/apply.c	/^void unleash_all(void) { \/* player is about to die (for bones) *\/$/;"	f
unlink	src/files.c	103;"	d	file:
unload_qtlist	src/questpgr.c	/^void unload_qtlist(void) {$/;"	f
unlock_file	src/files.c	/^void unlock_file(const char *filename) {$/;"	f
unmap_object	src/display.c	/^void unmap_object (int x, int y) {$/;"	f
unmul	src/hack.c	/^void unmul(const char *msg_override) {$/;"	f
unpaid	include/obj.h	/^	bool unpaid;	\/* on some bill *\/$/;"	m	struct:obj
unpaid_cost	src/shk.c	/^long unpaid_cost(struct obj *unpaid_obj) {$/;"	f
unplacebc	src/ball.c	/^void unplacebc(void) {$/;"	f
unpoly_mon	src/timeout.c	/^void unpoly_mon(void *arg, long timeout) {$/;"	f
unpoly_monster	src/mon.c	/^static void unpoly_monster (struct monst *mtmp) {$/;"	f	file:
unpoly_obj	src/timeout.c	/^void unpoly_obj(void * arg, long timeout) {$/;"	f
unpunish	src/read.c	/^void unpunish (void) {$/;"	f
unput	build-linux/src/dgn_lex.c	182;"	d	file:
unput	build-linux/src/dgn_lex.c	650;"	d	file:
unput	build-linux/src/dgn_lex.c	651;"	d	file:
unput	build-linux/src/lev_lex.c	182;"	d	file:
unput	build-linux/src/lev_lex.c	952;"	d	file:
unput	build-linux/src/lev_lex.c	953;"	d	file:
unrestrict_weapon_skill	src/weapon.c	/^void unrestrict_weapon_skill (int skill) {$/;"	f
unscroll_window	win/curses/cursmesg.c	/^unscroll_window(winid wid)$/;"	f	file:
unset_all_on_page	win/tty/wintty.c	/^static void unset_all_on_page(winid window, tty_menu_item *page_start, tty_menu_item *page_end) {$/;"	f	file:
unsetup_waterlevel	src/mkmaze.c	/^static void unsetup_waterlevel() {$/;"	f	file:
unsolid	include/mondata.h	70;"	d
unstuck	src/mon.c	/^void unstuck (struct monst *mtmp) {$/;"	f
untrap	src/trap.c	/^	int untrap(boolean force) {$/;"	f
untrap_prob	src/trap.c	/^	static int untrap_prob(struct trap *ttmp) {$/;"	f	file:
unturn_dead	src/zap.c	/^int unturn_dead(struct monst *mon) {$/;"	f
untwoweapon	src/wield.c	/^void untwoweapon (void) {$/;"	f
unused	include/dungeon.h	/^	bool unused;	\/* etc... *\/$/;"	m	struct:d_flags
unused	include/eshk.h	/^	schar unused;		\/* to force alignment for stupid compilers *\/$/;"	m	struct:eshk
unvegan	include/you.h	/^	long	unvegan;	\/* ... or any animal byproduct *\/$/;"	m	struct:u_conduct
unvegetarian	include/you.h	/^	long	unvegetarian;	\/* eaten any animal *\/$/;"	m	struct:u_conduct
unweapon	src/decl.c	/^boolean unweapon = false;$/;"	v
unwield	src/wield.c	/^void unwield(struct obj *obj, boolean put_away) {$/;"	f
uopened_dbridge	include/you.h	/^	bool uopened_dbridge;	\/* opened the drawbridge *\/$/;"	m	struct:u_event
up	include/dgn_file.h	/^	int	up;		\/* branch is up or down *\/$/;"	m	struct:tmpbranch
up	include/dungeon.h	/^	char	up;		\/* what type of stairway (up\/down) *\/$/;"	m	struct:stairway
up	include/sp_lev.h	/^	xchar x, y, up;$/;"	m	struct:__anon41
up	include/sp_lev.h	/^	xchar x, y, up;$/;"	m	struct:__anon42
update_inventory	include/winprocs.h	98;"	d
update_mlstmv	src/dog.c	/^void update_mlstmv(void) {$/;"	f
update_mon_intrinsics	src/worn.c	/^void update_mon_intrinsics(struct monst *mon, struct obj *obj, boolean on, boolean silently) {$/;"	f
update_monster_region	src/region.c	/^update_monster_region (struct monst *mon) {$/;"	f
update_player_regions	src/region.c	/^update_player_regions (void) {$/;"	f
update_positionbar	include/winprocs.h	105;"	d
update_topl	win/tty/topl.c	/^void update_topl(const char *bp) {$/;"	f
updest	src/decl.c	/^dest_area updest = { 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
upermonst	src/decl.c	/^struct permonst upermonst = DUMMY;$/;"	v	typeref:struct:permonst
upgrade_obj	src/potion.c	/^int upgrade_obj (struct obj *obj) {$/;"	f
upladder	src/decl.c	/^stairway upladder = { 0, 0 }, dnladder = { 0, 0 };$/;"	v
uprops	include/you.h	/^	struct prop uprops[LAST_PROP+1];$/;"	m	struct:you	typeref:struct:you::prop
upstair	src/decl.c	/^stairway upstair = { 0, 0 }, dnstair = { 0, 0 };$/;"	v
upstairs_room	src/decl.c	/^struct mkroom *upstairs_room, *dnstairs_room, *sstairs_room;$/;"	v	typeref:struct:mkroom
upstart	src/hacklib.c	/^char *upstart(char *s) {$/;"	f
uptodate	src/version.c	/^boolean uptodate(int fd, const char *name) {$/;"	f
uquiver	src/decl.c	/^	              *uquiver = NULL, \/* quiver *\/$/;"	v	typeref:struct:
uqwepgone	src/wield.c	/^void uqwepgone (void) {$/;"	f
urace	src/role.c	/^struct Race urace = {$/;"	v	typeref:struct:Race
ureflects	src/muse.c	/^boolean ureflects (const char *fmt, const char *str) {$/;"	f
urexp	include/you.h	/^	long	uexp, urexp;$/;"	m	struct:you
urideturns	include/you.h	/^	int urideturns;$/;"	m	struct:you
uright	src/decl.c	/^	                    *uright = NULL,$/;"	v	typeref:struct:
urole	src/role.c	/^struct Role urole = {$/;"	v	typeref:struct:Role
urooms	include/you.h	/^	char	urooms[5];	\/* rooms (roomno + 3) occupied now *\/$/;"	m	struct:you
urooms0	include/you.h	/^	char	urooms0[5];	\/* ditto, for previous position *\/$/;"	m	struct:you
urustm	src/mhitu.c	/^static void urustm(struct monst *mon, struct obj *obj) {$/;"	f	file:
usaddle	src/decl.c	/^	                       *usaddle = NULL,$/;"	v	typeref:struct:
usage	util/dlb_main.c	/^usage()$/;"	f	file:
use_bell	src/apply.c	/^static void use_bell(struct obj **optr) {$/;"	f	file:
use_camera	src/apply.c	/^static int use_camera(struct obj *obj) {$/;"	f	file:
use_candelabrum	src/apply.c	/^static void use_candelabrum(struct obj *obj) {$/;"	f	file:
use_candle	src/apply.c	/^static void use_candle(struct obj **optr) {$/;"	f	file:
use_color	include/flag.h	276;"	d
use_container	src/pickup.c	/^int use_container(struct obj **objp, int held) {$/;"	f
use_cream_pie	src/apply.c	/^static int use_cream_pie(struct obj *obj) {$/;"	f	file:
use_crystal_ball	src/detect.c	/^void use_crystal_ball(struct obj *obj) {$/;"	f
use_defensive	src/muse.c	/^int use_defensive (struct monst *mtmp) {$/;"	f
use_figurine	src/apply.c	/^static void use_figurine(struct obj **optr) {$/;"	f	file:
use_grapple	src/apply.c	/^static int use_grapple(struct obj *obj) {$/;"	f	file:
use_grease	src/apply.c	/^static void use_grease(struct obj *obj) {$/;"	f	file:
use_inverse	include/flag.h	278;"	d
use_lamp	src/apply.c	/^static void use_lamp(struct obj *obj) {$/;"	f	file:
use_leash	src/apply.c	/^static void use_leash(struct obj **optr) {$/;"	f	file:
use_magic_whistle	src/apply.c	/^static void use_magic_whistle(struct obj *obj) {$/;"	f	file:
use_medical_kit	src/tech.c	/^static struct obj * use_medical_kit(int type, boolean feedback, char *verb) {$/;"	f	file:
use_menu_color	include/flag.h	/^	bool use_menu_color; \/* use color in menus; only if wc_color *\/$/;"	m	struct:instance_flags
use_menu_glyphs	include/flag.h	/^	bool  use_menu_glyphs;$/;"	m	struct:flag
use_menu_glyphs	include/flag.h	/^	bool use_menu_glyphs; \/* item glyphs in inventory *\/$/;"	m	struct:instance_flags
use_mirror	src/apply.c	/^static int use_mirror(struct obj *obj) {$/;"	f	file:
use_misc	src/muse.c	/^int use_misc(struct monst *mtmp) {$/;"	f
use_offensive	src/muse.c	/^int use_offensive (struct monst *mtmp) {$/;"	f
use_pick_axe	src/dig.c	/^int use_pick_axe (struct obj *obj) {$/;"	f
use_pick_axe2	src/dig.c	/^int use_pick_axe2 (struct obj *obj) {$/;"	f
use_pole	src/apply.c	/^static int use_pole(struct obj *obj) {$/;"	f	file:
use_saddle	src/steed.c	/^use_saddle (struct obj *otmp) {$/;"	f
use_skill	src/weapon.c	/^void use_skill (int skill, int degree) {$/;"	f
use_status_colors	include/flag.h	/^	bool use_status_colors; \/* use color in status line; only if wc_color *\/$/;"	m	struct:instance_flags
use_stethoscope	src/apply.c	/^static int use_stethoscope(struct obj *obj) {$/;"	f	file:
use_stone	src/apply.c	/^static void use_stone(struct obj *tstone) {$/;"	f	file:
use_tinning_kit	src/apply.c	/^static void use_tinning_kit(struct obj *obj) {$/;"	f	file:
use_torch	src/apply.c	/^static int use_torch(struct obj *obj) {$/;"	f	file:
use_towel	src/apply.c	/^static int use_towel(struct obj *obj) {$/;"	f	file:
use_trap	src/apply.c	/^static void use_trap(struct obj *otmp) {$/;"	f	file:
use_unicorn_horn	src/apply.c	/^void use_unicorn_horn (struct obj *obj) {$/;"	f
use_whetstone	src/apply.c	/^static void use_whetstone(struct obj *stone, struct obj *obj) {$/;"	f	file:
use_whip	src/apply.c	/^static int use_whip(struct obj *obj) {$/;"	f	file:
use_whistle	src/apply.c	/^static void use_whistle(struct obj *obj) {$/;"	f	file:
usedtime	src/eat.c	/^	int	usedtime,	\/* turns spent eating *\/$/;"	m	struct:__anon6	file:
usedtime	src/eat.c	/^	int	usedtime, reqtime;$/;"	m	struct:__anon5	file:
usedtime	src/lock.c	/^	int picktyp, chance, usedtime;$/;"	m	struct:xlock_s	file:
usepcspeaker	include/flag.h	/^	bool usepcspeaker;	\/* use the pc speaker *\/$/;"	m	struct:instance_flags
usesound	include/flag.h	/^	bool usesound;	\/* use the sound card *\/$/;"	m	struct:instance_flags
useup	include/eshk.h	/^	boolean useup;$/;"	m	struct:bill_x
useup	src/invent.c	/^void useup(struct obj *obj) {$/;"	f
useup_eggs	src/uhitm.c	1076;"	d	file:
useup_eggs	src/uhitm.c	1135;"	d	file:
useupall	src/invent.c	/^void useupall(struct obj *obj) {$/;"	f
useupf	src/invent.c	/^void useupf(struct obj *obj, long numused) {$/;"	f
ushops	include/you.h	/^	char	ushops[5];	\/* shop rooms (roomno + 3) occupied now *\/$/;"	m	struct:you
ushops0	include/you.h	/^	char	ushops0[5];	\/* ditto, for previous position *\/$/;"	m	struct:you
ushops_entered	include/you.h	/^	char	ushops_entered[5]; \/* ditto, shops entered this turn *\/$/;"	m	struct:you
ushops_left	include/you.h	/^	char	ushops_left[5]; \/* ditto, shops exited this turn *\/$/;"	m	struct:you
ushort	include/global.h	/^typedef unsigned short ushort;$/;"	t
usick_cause	include/you.h	/^	char usick_cause[PL_PSIZ+20]; \/* sizeof "unicorn horn named "+1 *\/$/;"	m	struct:you
usize	include/global.h	/^typedef size_t usize;$/;"	t
uskin	src/decl.c	/^	                *uskin = NULL, \/* dragon armor, if a dragon *\/$/;"	v	typeref:struct:
usleep	include/you.h	/^	long	usleep;		\/* sleeping; monstermove you last started *\/$/;"	m	struct:you
uslinging	include/obj.h	204;"	d
uspellprot	include/you.h	/^	uchar	uspellprot;		\/* protection by SPE_PROTECTION *\/$/;"	m	struct:you
uspmtime	include/you.h	/^	uchar	uspmtime;		\/* #moves between uspellprot-- *\/$/;"	m	struct:you
usptime	include/you.h	/^	uchar	usptime;		\/* #moves until uspellprot-- *\/$/;"	m	struct:you
ustatusline	src/pline.c	/^void ustatusline(void) {$/;"	f
usteed	include/you.h	/^	struct monst *usteed;$/;"	m	struct:you	typeref:struct:you::monst
usteed_id	src/save.c	/^static unsigned ustuck_id = 0, usteed_id = 0;$/;"	v	file:
ustuck	include/you.h	/^	struct monst *ustuck;$/;"	m	struct:you	typeref:struct:you::monst
ustuck_id	src/save.c	/^static unsigned ustuck_id = 0, usteed_id = 0;$/;"	v	file:
uswallow	include/you.h	/^	bool uswallow;		\/* true if swallowed *\/$/;"	m	struct:you
uswapwep	src/decl.c	/^	             *uswapwep = NULL,$/;"	v	typeref:struct:
uswapwepgone	src/wield.c	/^void uswapwepgone (void) {$/;"	f
uswldtim	include/you.h	/^	unsigned uswldtim;		\/* time you have been swallowed *\/$/;"	m	struct:you
utcnt	src/track.c	/^static int utcnt, utpnt;$/;"	v	file:
utf8_graphics	src/drawing.c	/^static glyph_t utf8_graphics[MAXPCHARS] = {$/;"	v	file:
utf8_tmpstr	src/unicode.c	/^char *utf8_tmpstr(glyph_t c) {$/;"	f
utf8compat_graphics	src/drawing.c	/^static glyph_t utf8compat_graphics[MAXPCHARS] = {$/;"	v	file:
utolev	include/you.h	/^	d_level utolev;		\/* level monster teleported you to, or uz *\/$/;"	m	struct:you
utotype	include/you.h	/^	uchar utotype;		\/* bitmask of goto_level() flags for utolev *\/$/;"	m	struct:you
utpnt	src/track.c	/^static int utcnt, utpnt;$/;"	v	file:
utrack	src/track.c	/^static coord utrack[UTSZ];$/;"	v	file:
utrap	include/you.h	/^	unsigned utrap;		\/* trap timeout *\/$/;"	m	struct:you
utraptype	include/you.h	/^	unsigned utraptype;	\/* defined if utrap nonzero *\/$/;"	m	struct:you
uundetected	include/you.h	/^	bool uundetected;	\/* if you're a hiding monster\/piercer *\/$/;"	m	struct:you
uunstick	src/polyself.c	/^uunstick() {$/;"	f	file:
uunstone	src/trap.c	/^	int uunstone(void) {$/;"	f
uwep	src/decl.c	/^	            *uwep = NULL, *uarm = NULL,$/;"	v	typeref:struct:
uwep_skill_type	src/weapon.c	/^int uwep_skill_type (void) {$/;"	f
uwepgone	src/wield.c	/^void uwepgone (void) {$/;"	f
ux	include/you.h	/^	xchar ux, uy;$/;"	m	struct:you
ux0	include/you.h	/^	xchar ux0, uy0;		\/* initial position FF *\/$/;"	m	struct:you
uy	include/you.h	/^	xchar ux, uy;$/;"	m	struct:you
uy0	include/you.h	/^	xchar ux0, uy0;		\/* initial position FF *\/$/;"	m	struct:you
uz	include/you.h	/^	d_level uz, uz0;	\/* your level on this and the previous turn *\/$/;"	m	struct:you
uz0	include/you.h	/^	d_level uz, uz0;	\/* your level on this and the previous turn *\/$/;"	m	struct:you
v	include/obj.h	/^	union vptrs v;$/;"	m	struct:obj	typeref:union:obj::vptrs
v_abs	src/vision.c	107;"	d	file:
v_launch2	include/trap.h	/^	coord v_launch2;	\/* secondary launch point (for boulders) *\/$/;"	m	union:vlaunchinfo
v_launch_otyp	include/trap.h	/^	short v_launch_otyp;	\/* type of object to be triggered *\/$/;"	m	union:vlaunchinfo
v_nexthere	include/obj.h	/^	struct obj *v_nexthere;	\/* floor location lists *\/$/;"	m	union:vptrs	typeref:struct:vptrs::obj
v_ocarry	include/obj.h	/^	struct monst *v_ocarry;	\/* point back to carrying monst *\/$/;"	m	union:vptrs	typeref:struct:vptrs::monst
v_ocontainer	include/obj.h	/^	struct obj *v_ocontainer;	\/* point back to container *\/$/;"	m	union:vptrs	typeref:struct:vptrs::obj
val_abil	src/attrib.c	/^val_abil[] = { {	 1, &(HCold_resistance), "", "" },$/;"	v	typeref:struct:innate	file:
val_for_n_or_more	src/pickup.c	/^static long val_for_n_or_more;$/;"	v	file:
val_list	src/end.c	/^static struct val_list {$/;"	s	file:
val_tech	src/tech.c	/^val_tech[] = { {   1, T_PRACTICE, 1},$/;"	v	typeref:struct:	file:
valid	sys/winnt/nh340key.c	/^boolean *valid;$/;"	v
valid	sys/winnt/nhdefkey.c	/^boolean *valid;$/;"	v
valid	sys/winnt/nhraykey.c	/^boolean *valid;$/;"	v
valid_menu_classes	src/pickup.c	/^static char valid_menu_classes[MAXOCLASSES + 2];$/;"	v	file:
valid_ugly_classes	src/invent.c	/^static char valid_ugly_classes[MAXOCLASSES + 1];$/;"	v	file:
validalign	src/role.c	/^validalign(rolenum, racenum, alignnum)$/;"	f
validate_prefix_locations	src/files.c	/^int validate_prefix_locations(char *reasonbuf) {$/;"	f
validgend	src/role.c	/^validgend(rolenum, racenum, gendnum)$/;"	f
validrace	src/role.c	/^validrace(rolenum, racenum)$/;"	f
validrole	src/role.c	/^validrole(rolenum)$/;"	f
valign	include/sp_lev.h	/^	char halign, valign;$/;"	m	struct:__anon52
valley_level	include/decl.h	83;"	d
valuable_data	src/end.c	/^struct valuable_data {$/;"	s	file:
valuables	src/end.c	/^} valuables[] = {$/;"	v	typeref:struct:val_list	file:
value	include/you.h	/^	aligntyp value;		\/* equivalent A_ value *\/$/;"	m	struct:Align
value	src/options.c	/^	int value;$/;"	m	struct:name_value	file:
value	win/curses/cursstat.c	/^    long value;$/;"	m	struct:nhs	file:
value_of_name	src/options.c	/^int value_of_name(const char *name, const struct name_value *name_values) {$/;"	f
vam_tech	src/tech.c	/^vam_tech[] = { {   1, T_DAZZLE, 1},$/;"	v	typeref:struct:	file:
vampmsg	include/attk.h	/^	bool vampmsg;$/;"	m	struct:Attk
varg	src/vision.c	/^static void * varg;$/;"	v	file:
vault_occupied	src/vault.c	/^vault_occupied (char *array) {$/;"	f
vault_tele	src/teleport.c	/^vault_tele() {$/;"	f	file:
vault_x	src/mklev.c	/^static xchar		vault_x, vault_y;$/;"	v	file:
vault_y	src/mklev.c	/^static xchar		vault_x, vault_y;$/;"	v	file:
vegan	include/mondata.h	216;"	d
vegetarian	include/mondata.h	228;"	d
venom_inv	src/invent.c	/^static char venom_inv[] = { VENOM_CLASS, 0 };	\/* (constant) *\/$/;"	v	file:
ver_major	src/topten.c	/^	int ver_major, ver_minor, patchlevel;$/;"	m	struct:toptenentry	file:
ver_minor	src/topten.c	/^	int ver_major, ver_minor, patchlevel;$/;"	m	struct:toptenentry	file:
verbalize	src/pline.c	/^void verbalize(const char *line, ...) {$/;"	f
verbalizes	include/extern.h	1483;"	d
verbose	include/flag.h	/^	bool  verbose;	\/* max battle info *\/$/;"	m	struct:flag
verbose_help	util/dlb_main.c	/^verbose_help()$/;"	f	file:
verify_key_list	src/cmd.c	/^static void verify_key_list(void) {$/;"	f	file:
version_info	include/global.h	/^struct version_info {$/;"	s
version_string_tmp	src/version.c	/^char *version_string_tmp(void) {$/;"	f
vert	src/shk.c	3140;"	d	file:
vert	src/shk.c	3198;"	d	file:
veryold	sys/unix/unixunix.c	/^veryold(fd)$/;"	f	file:
verysmall	include/mondata.h	8;"	d
victual	src/eat.c	/^} victual;$/;"	v	typeref:struct:__anon6	file:
view_from	src/vision.c	/^view_from(srow, scol, loc_cs_rows, left_most, right_most, range, func, arg)$/;"	f	file:
violated_vegetarian	src/eat.c	/^void violated_vegetarian(void) {$/;"	f
vis	src/mhitm.c	/^static boolean vis, far_noise;$/;"	v	file:
vis_func	src/vision.c	/^static void (*vis_func)(int,int,void *);$/;"	v	file:
visctrl	src/hacklib.c	/^char *visctrl(char c) {$/;"	f
visible	include/region.h	/^	boolean visible;		\/* Is the region visible ? *\/$/;"	m	struct:__anon29
visible_region_at	src/region.c	/^NhRegion * visible_region_at(xchar x, xchar y) {$/;"	f
vision_full_recalc	src/decl.c	/^boolean vision_full_recalc = 0;$/;"	v
vision_init	src/vision.c	/^vision_init (void) {$/;"	f
vision_inited	include/flag.h	/^	bool  vision_inited; \/* true if vision is ready *\/$/;"	m	struct:instance_flags
vision_recalc	src/vision.c	/^vision_recalc (int control) {$/;"	f
vision_reset	src/vision.c	/^vision_reset (void) {$/;"	f
visitct	include/eshk.h	/^	int visitct;		\/* nr of visits by most recent customer *\/$/;"	m	struct:eshk
viz_array	src/decl.c	/^char	 **viz_array = 0;\/* used in cansee() and couldsee() macros *\/$/;"	v
viz_clear	src/vision.c	/^static char  viz_clear[ROWNO][COLNO];		\/* vision clear\/blocked map *\/$/;"	v	file:
viz_clear_rows	src/vision.c	/^static char *viz_clear_rows[ROWNO];$/;"	v	file:
viz_rmax	src/vision.c	/^char	*viz_rmin, *viz_rmax;		\/* current vision cs bounds *\/$/;"	v
viz_rmin	src/vision.c	/^char	*viz_rmin, *viz_rmax;		\/* current vision cs bounds *\/$/;"	v
vl	include/trap.h	/^	union vlaunchinfo vl;$/;"	m	struct:trap	typeref:union:trap::vlaunchinfo
vlaunchinfo	include/trap.h	/^union vlaunchinfo {$/;"	u
vobj_at	src/display.c	/^struct obj *vobj_at(xchar x, xchar y) {$/;"	f
volume	src/sounds.c	/^	int volume;$/;"	m	struct:audio_mapping_rec	file:
vomit	src/eat.c	/^void vomit(void)	{$/;"	f
vomiting_dialogue	src/timeout.c	/^static void vomiting_dialogue() {$/;"	f	file:
vomiting_texts	src/timeout.c	/^static const char * const vomiting_texts[] = {$/;"	v	file:
vowels	src/decl.c	/^const char vowels[] = "aeiouAEIOU";$/;"	v
vpline	src/pline.c	/^static void vpline(const char *line, va_list the_args) {$/;"	f	file:
vptrs	include/obj.h	/^union vptrs {$/;"	u
vraw_printf	src/pline.c	/^static void vraw_printf(const char *line, va_list the_args) {$/;"	f	file:
vroom	include/vault.h	/^	int vroom;		\/* room number of the vault *\/$/;"	m	struct:egd
vtense	src/objnam.c	/^vtense (const char *subj, const char *verb) {$/;"	f
w	include/sp_lev.h	/^	xchar x, y, w, h;$/;"	m	struct:_room
w_ammotyp	include/objclass.h	109;"	d
w_blocks	src/worn.c	38;"	d	file:
w_mask	src/worn.c	/^	long w_mask;$/;"	m	struct:worn	file:
w_obj	src/worn.c	/^	struct obj **w_obj;$/;"	m	struct:worn	typeref:struct:worn::obj	file:
wailmsg	src/decl.c	/^long wailmsg = 0L;$/;"	v
wait_synch	include/winprocs.h	100;"	d
wake_nearby	src/mon.c	/^void wake_nearby (void) {$/;"	f
wake_nearto	src/mon.c	/^void wake_nearto (int x, int y, int distance) {$/;"	f
wakeup	src/mon.c	/^void wakeup (struct monst *mtmp) {$/;"	f
walk	include/sp_lev.h	/^} walk;$/;"	t	typeref:struct:__anon39
walk_path	src/dothrow.c	/^boolean walk_path(coord *src_cc, coord *dest_cc, boolean (*check_proc)(void*, int, int), void *arg) {$/;"	f
walkfrom	src/mkmaze.c	/^void walkfrom(int x, int y) {$/;"	f
walklist	src/sp_lev.c	/^static walk walklist[50];$/;"	v	file:
walks	include/sp_lev.h	/^	walk **walks;$/;"	m	struct:__anon52
wall	build-linux/include/lev_comp.h	/^		xchar wall;$/;"	m	struct:YYSTYPE::__anon25
wall	build-linux/src/lev_yacc.c	/^		xchar wall;$/;"	m	struct:YYSTYPE::__anon1	file:
wall	include/sp_lev.h	/^		xchar wall;$/;"	m	struct:__anon54::__anon55
wall	include/sp_lev.h	/^	xchar wall, pos, secret, mask;$/;"	m	struct:__anon33
wall_angle	src/display.c	/^static int wall_angle(struct rm *lev) {$/;"	f	file:
wall_info	include/rm.h	449;"	d
wall_matrix	src/display.c	/^static const int wall_matrix[4][5] = {$/;"	v	file:
walled	include/sp_lev.h	/^	xchar   lit, walled;$/;"	m	struct:__anon31
wallification	src/mkmaze.c	/^void wallification(int x1, int y1, int x2, int y2, boolean initial) {$/;"	f
wallify_map	src/mkmap.c	/^static void wallify_map(void) {$/;"	f	file:
wallify_map	util/lev_main.c	/^void wallify_map(void) {$/;"	f
wallify_special	src/mkmaze.c	/^static void wallify_special(int x1, int y1, int x2, int y2, int floortype) {$/;"	f	file:
wallify_stone	src/mkmaze.c	/^static void wallify_stone(int x1, int y1, int x2, int y2) {$/;"	f	file:
wallify_vault	src/vault.c	/^static void wallify_vault(struct monst *grd) {$/;"	f	file:
wand_explode	src/apply.c	/^int wand_explode(struct obj *obj, boolean hero_broke) {$/;"	f
wand_types	src/shk.c	/^static const char wand_types[] = { WAND_CLASS, 0 };$/;"	v	file:
want_warnings	util/lev_main.c	/^int want_warnings = 0;$/;"	v
wantdoor	src/dogmove.c	/^static void wantdoor(int x, int y, void *distance) {$/;"	f	file:
warn_color	src/mapglyph.c	36;"	d	file:
warncnt	include/vault.h	/^	xchar warncnt;		\/* number of warnings to follow *\/$/;"	m	struct:egd
warned	include/decl.h	/^	boolean down, chew, warned, quiet;$/;"	m	struct:dig_info
warning_to_glyph	include/display.h	288;"	d
warnlevel	include/flag.h	/^	int	 warnlevel;$/;"	m	struct:flag
warntype	include/flag.h	/^	unsigned long warntype; \/* warn_of_mon monster type M2 *\/$/;"	m	struct:flag
wary_dog	src/dog.c	/^void wary_dog(struct monst *mtmp, boolean was_dead) {$/;"	f
was_thrown	include/obj.h	/^	bool was_thrown; \/* thrown by the hero since last picked up *\/$/;"	m	struct:obj
was_waterlevel	src/mkmaze.c	/^static boolean was_waterlevel; \/* ugh... this shouldn't be needed *\/$/;"	v	file:
waslit	include/rm.h	/^	bool waslit;	\/* remember if a location was lit *\/$/;"	m	struct:rm
watch_dig	src/dig.c	/^void watch_dig(struct monst *mtmp, xchar x, xchar y, boolean zap) {$/;"	f
watch_on_duty	src/monmove.c	/^static void watch_on_duty(struct monst *mtmp) {$/;"	f	file:
water_current	src/hack.c	/^boolean water_current(xchar x, xchar y, int dir, unsigned waterforce  \/* strength of the water current *\/, boolean showmsg, boolean update) {$/;"	f
water_damage	src/trap.c	/^	bool water_damage(struct obj *obj, boolean force, boolean here) {$/;"	f
water_friction	src/mkmaze.c	/^water_friction() {$/;"	f
water_level	include/decl.h	99;"	d
water_prayer	src/pray.c	/^static boolean water_prayer(boolean bless_water) {$/;"	f	file:
waterbody_name	src/mkmaze.c	/^const char *waterbody_name(xchar x, xchar y) {$/;"	f
wc	src/hack.c	/^static int wc;	\/* current weight_cap(); valid after call to inv_weight() *\/$/;"	v	file:
wc2_fullscreen	include/flag.h	/^	bool wc2_fullscreen;		\/* run fullscreen *\/$/;"	m	struct:instance_flags
wc2_guicolor	include/flag.h	/^	bool wc2_guicolor;       \/* allow colors in GUI (outside map) *\/$/;"	m	struct:instance_flags
wc2_options	src/options.c	/^struct wc_Opt wc2_options[] = {$/;"	v	typeref:struct:wc_Opt
wc2_petattr	include/flag.h	/^	int     wc2_petattr;        \/* points to text attributes for pet *\/$/;"	m	struct:instance_flags
wc2_softkeyboard	include/flag.h	/^	bool wc2_softkeyboard;	\/* use software keyboard *\/$/;"	m	struct:instance_flags
wc2_supported	src/options.c	/^static boolean wc2_supported(const char *optnam) {$/;"	f	file:
wc2_term_cols	include/flag.h	/^	int     wc2_term_cols;      \/* terminal width, in characters *\/$/;"	m	struct:instance_flags
wc2_term_rows	include/flag.h	/^	int     wc2_term_rows;      \/* terminal height, in characters *\/$/;"	m	struct:instance_flags
wc2_windowborders	include/flag.h	/^	int     wc2_windowborders;  \/* display borders on NetHack windows *\/$/;"	m	struct:instance_flags
wc2_wraptext	include/flag.h	/^	bool wc2_wraptext;		\/* wrap text *\/$/;"	m	struct:instance_flags
wc_Opt	include/winprocs.h	/^struct wc_Opt {$/;"	s
wc_align_message	include/flag.h	/^	int	wc_align_message;	\/* message win at top|bot|right|left   *\/$/;"	m	struct:instance_flags
wc_align_status	include/flag.h	/^	int	wc_align_status;	\/*  status win at top|bot|right|left   *\/$/;"	m	struct:instance_flags
wc_ascii_map	include/flag.h	/^	bool wc_ascii_map;		\/* show map using traditional ascii    *\/$/;"	m	struct:instance_flags
wc_backgrnd_menu	include/flag.h	/^	char    *wc_backgrnd_menu;	\/* points to backgrnd color name for menu win   *\/$/;"	m	struct:instance_flags
wc_backgrnd_message	include/flag.h	/^	char    *wc_backgrnd_message;	\/* points to backgrnd color name for msg win    *\/$/;"	m	struct:instance_flags
wc_backgrnd_status	include/flag.h	/^	char    *wc_backgrnd_status;	\/* points to backgrnd color name for status win *\/$/;"	m	struct:instance_flags
wc_backgrnd_text	include/flag.h	/^	char    *wc_backgrnd_text;	\/* points to backgrnd color name for text win   *\/$/;"	m	struct:instance_flags
wc_bit	include/winprocs.h	/^	unsigned long wc_bit;$/;"	m	struct:wc_Opt
wc_color	include/flag.h	/^	bool wc_color;		\/* use color graphics                  *\/$/;"	m	struct:instance_flags
wc_font_map	include/flag.h	/^	char    *wc_font_map;		\/* points to font name for the map win *\/$/;"	m	struct:instance_flags
wc_font_menu	include/flag.h	/^	char    *wc_font_menu;		\/* points to font name for menu win    *\/$/;"	m	struct:instance_flags
wc_font_message	include/flag.h	/^	char    *wc_font_message;	\/* points to font name for message win *\/$/;"	m	struct:instance_flags
wc_font_status	include/flag.h	/^	char    *wc_font_status;	\/* points to font name for status win  *\/$/;"	m	struct:instance_flags
wc_font_text	include/flag.h	/^	char    *wc_font_text;		\/* points to font name for text win    *\/$/;"	m	struct:instance_flags
wc_fontsiz_map	include/flag.h	/^	int     wc_fontsiz_map;		\/* font size for the map win           *\/$/;"	m	struct:instance_flags
wc_fontsiz_menu	include/flag.h	/^	int     wc_fontsiz_menu;	\/* font size for the menu window       *\/$/;"	m	struct:instance_flags
wc_fontsiz_message	include/flag.h	/^	int     wc_fontsiz_message;	\/* font size for the message window    *\/$/;"	m	struct:instance_flags
wc_fontsiz_status	include/flag.h	/^	int     wc_fontsiz_status;	\/* font size for the status window     *\/$/;"	m	struct:instance_flags
wc_fontsiz_text	include/flag.h	/^	int     wc_fontsiz_text;	\/* font size for text windows          *\/$/;"	m	struct:instance_flags
wc_foregrnd_menu	include/flag.h	/^	char    *wc_foregrnd_menu;	\/* points to foregrnd color name for menu win   *\/$/;"	m	struct:instance_flags
wc_foregrnd_message	include/flag.h	/^	char    *wc_foregrnd_message;	\/* points to foregrnd color name for msg win    *\/$/;"	m	struct:instance_flags
wc_foregrnd_status	include/flag.h	/^	char    *wc_foregrnd_status;	\/* points to foregrnd color name for status win *\/$/;"	m	struct:instance_flags
wc_foregrnd_text	include/flag.h	/^	char    *wc_foregrnd_text;	\/* points to foregrnd color name for text win   *\/$/;"	m	struct:instance_flags
wc_hilite_pet	include/flag.h	/^	bool wc_hilite_pet;		\/* hilight pets                        *\/$/;"	m	struct:instance_flags
wc_inverse	include/flag.h	/^	bool wc_inverse;		\/* use inverse video for some things   *\/$/;"	m	struct:instance_flags
wc_map_mode	include/flag.h	/^	int	wc_map_mode;		\/* specify map viewing options, mostly$/;"	m	struct:instance_flags
wc_mouse_support	include/flag.h	/^	bool wc_mouse_support;	\/* allow mouse support *\/$/;"	m	struct:instance_flags
wc_name	include/winprocs.h	/^	const char *wc_name;$/;"	m	struct:wc_Opt
wc_options	src/options.c	/^struct wc_Opt wc_options[] = {$/;"	v	typeref:struct:wc_Opt
wc_player_selection	include/flag.h	/^	int	wc_player_selection;	\/* method of choosing character *\/$/;"	m	struct:instance_flags
wc_popup_dialog	include/flag.h	/^	bool	wc_popup_dialog;	\/* put queries in pop up dialogs instead of$/;"	m	struct:instance_flags
wc_preload_tiles	include/flag.h	/^	bool wc_preload_tiles;	\/* preload tiles into memory           *\/$/;"	m	struct:instance_flags
wc_scroll_amount	include/flag.h	/^	int	wc_scroll_amount;	\/* scroll this amount at scroll_margin *\/$/;"	m	struct:instance_flags
wc_scroll_margin	include/flag.h	/^	int	wc_scroll_margin;	\/* scroll map when this far from$/;"	m	struct:instance_flags
wc_set_font_name	src/options.c	/^static void wc_set_font_name(int wtype, char *fontname) {$/;"	f	file:
wc_set_window_colors	src/options.c	/^static int wc_set_window_colors(char *op) {$/;"	f	file:
wc_splash_screen	include/flag.h	/^	bool	wc_splash_screen;	\/* display an opening splash screen or not *\/$/;"	m	struct:instance_flags
wc_supported	src/options.c	/^static boolean wc_supported(const char *optnam) {$/;"	f	file:
wc_tile_file	include/flag.h	/^	char	*wc_tile_file;		\/* name of tile file;overrides default *\/$/;"	m	struct:instance_flags
wc_tile_height	include/flag.h	/^	int	wc_tile_height;		\/* tile height                         *\/$/;"	m	struct:instance_flags
wc_tile_width	include/flag.h	/^	int	wc_tile_width;		\/* tile width                          *\/$/;"	m	struct:instance_flags
wc_tiled_map	include/flag.h	/^	bool wc_tiled_map;		\/* show map using tiles                *\/$/;"	m	struct:instance_flags
wc_vary_msgcount	include/flag.h	/^	int     wc_vary_msgcount;	\/* show more old messages at a time    *\/$/;"	m	struct:instance_flags
wd_message	sys/unix/unixmain.c	/^static void wd_message(void) {$/;"	f	file:
we_offer	src/shk.c	/^static const char we_offer[] = "We offer the finest service available!";$/;"	v	file:
weaphit	include/you.h	/^	long	weaphit;	\/* hit a monster with a weapon *\/$/;"	m	struct:u_conduct
weapon_check	include/monst.h	/^	xchar weapon_check;$/;"	m	struct:monst
weapon_dam_bonus	src/weapon.c	/^int weapon_dam_bonus (struct obj *weapon) {$/;"	f
weapon_hit_bonus	src/weapon.c	/^int weapon_hit_bonus (struct obj *weapon) {$/;"	f
weapon_skills	include/you.h	/^	struct skills weapon_skills[P_NUM_SKILLS];$/;"	m	struct:you	typeref:struct:you::skills
weapon_slots	include/you.h	/^	int	weapon_slots;		\/* unused skill slots *\/$/;"	m	struct:you
weapon_type	src/weapon.c	/^int weapon_type (struct obj *obj) {$/;"	f
weapon_types	src/shk.c	/^static const char weapon_types[] = { WEAPON_CLASS, TOOL_CLASS, 0 };$/;"	v	file:
wearing_armor	src/invent.c	/^boolean wearing_armor(void) {$/;"	f
webmaker	include/mondata.h	143;"	d
weffects	src/zap.c	/^void weffects(struct obj *obj) {$/;"	f
weight	src/mkobj.c	/^weight (struct obj *obj) {$/;"	f
weight_cap	src/hack.c	/^int weight_cap(void) {$/;"	f
welcome	src/allmain.c	/^void welcome(boolean new_game \/* false => restoring an old game *\/ ) {$/;"	f
welded	src/wield.c	/^int welded (struct obj *obj) {$/;"	f
weldmsg	src/wield.c	/^void weldmsg (struct obj *obj) {$/;"	f
were	src/cmd.c	/^         are[]  = "are ",  were[]  = "were ",$/;"	v	file:
were_change	src/were.c	/^void were_change (struct monst *mon) {$/;"	f
were_summon	src/were.c	/^int were_summon(struct permonst *ptr, boolean yours, int *visible, char *genbuf) {$/;"	f
wgrowtime	src/worm.c	/^long	    wgrowtime[MAX_NUM_WORMS] = DUMMY;$/;"	v
what	include/lev.h	/^	short what;$/;"	m	struct:container
what	src/detect.c	/^	const char *what;$/;"	m	struct:__anon2	file:
what_is_an_unknown_object	src/pager.c	/^const char what_is_an_unknown_object[] = "an unknown object";$/;"	v
what_map_char	util/lev_main.c	/^char what_map_char(char c) {$/;"	f
what_mon	include/display.h	167;"	d
what_obj	include/display.h	166;"	d
what_trap	include/display.h	168;"	d
wheads	src/worm.c	/^struct wseg *wheads[MAX_NUM_WORMS]   = DUMMY, *wtails[MAX_NUM_WORMS] = DUMMY;$/;"	v	typeref:struct:wseg
when	include/rm.h	/^	long when, cost;$/;"	m	struct:damage
where	include/obj.h	/^	xchar where;		\/* where the object thinks it is *\/$/;"	m	struct:obj
where	src/detect.c	/^	d_level *where;$/;"	m	struct:__anon2	file:
where_name	src/mkobj.c	/^static const char *where_name(int where) {$/;"	f	file:
where_to_get_source	sys/winnt/nh340key.c	/^static char where_to_get_source[] = "http:\/\/www.nethack.org\/";$/;"	v	file:
where_to_get_source	sys/winnt/nhdefkey.c	/^static char where_to_get_source[] = "http:\/\/www.nethack.org\/";$/;"	v	file:
where_to_get_source	sys/winnt/nhraykey.c	/^static char where_to_get_source[] = "http:\/\/www.nethack.org\/";$/;"	v	file:
whetstone_fountain_effects	src/fountain.c	/^void whetstone_fountain_effects(struct obj *obj) {$/;"	f
whetstone_sink_effects	src/fountain.c	/^void whetstone_sink_effects(struct obj *obj) {$/;"	f
whetstone_toilet_effects	src/fountain.c	/^void whetstone_toilet_effects(struct obj *obj) {$/;"	f
whetstoneinfo	src/apply.c	/^static struct whetstoneinfo {$/;"	s	file:
whetstoneinfo	src/apply.c	/^} whetstoneinfo;$/;"	v	typeref:struct:whetstoneinfo	file:
which_armor	src/worn.c	/^which_armor (struct monst *mon, long flag) {$/;"	f
which_arti	src/wizard.c	/^static short which_arti(int mask) {$/;"	f	file:
whimper	include/extern.h	1825;"	d
whimper_sound	src/sounds.c	/^whimper_sound (struct monst *mtmp) {$/;"	f	file:
whistletime	include/edog.h	/^	long whistletime;		\/* last time he whistled *\/$/;"	m	struct:edog
whoami	sys/unix/unixmain.c	/^static bool whoami(void) {$/;"	f	file:
wid	win/curses/cursdial.c	/^    winid wid;                  \/* NetHack window id *\/$/;"	m	struct:nhm	file:
wid	win/curses/cursdial.c	/^    winid wid;                  \/* NetHack window id *\/$/;"	m	struct:nhmi	file:
width	build-linux/src/lev_yacc.c	/^	int width;$/;"	m	struct:size	file:
width	win/curses/cursdial.c	/^    int width;                  \/* Window width of menu *\/$/;"	m	struct:nhm	file:
width	win/curses/curswins.c	/^    int width;                  \/* Usable width not counting border *\/$/;"	m	struct:__anon22	file:
wield_objs	src/wield.c	/^static const char wield_objs[] =$/;"	v	file:
wield_tool	src/wield.c	/^boolean wield_tool(struct obj *obj, const char *verb) {$/;"	f
wildmiss	src/mhitu.c	/^static void wildmiss(struct monst *mtmp, struct attack *mattk) {$/;"	f	file:
will_feel_cockatrice	src/invent.c	/^boolean will_feel_cockatrice(struct obj *otmp, boolean force_touch) {$/;"	f
will_weld	src/wield.c	62;"	d	file:
win32_abort	sys/winnt/winnt.c	/^void win32_abort(void) {$/;"	f
win32con_debug_keystrokes	sys/winnt/nttty.c	/^win32con_debug_keystrokes()$/;"	f
win32con_handler_info	sys/winnt/nttty.c	/^win32con_handler_info()$/;"	f
win32con_toggle_cursor_info	sys/winnt/nttty.c	/^void win32con_toggle_cursor_info()$/;"	f
win_add_menu	include/winprocs.h	/^	void (*win_add_menu)(winid,int,const anything *,$/;"	m	struct:window_procs
win_askname	include/winprocs.h	/^	void (*win_askname)(void);$/;"	m	struct:window_procs
win_change_background	include/winprocs.h	/^	void (*win_change_background)(int);$/;"	m	struct:window_procs
win_change_color	include/winprocs.h	/^	void (*win_change_color)(int,long,int);$/;"	m	struct:window_procs
win_choices	src/windows.c	/^struct win_choices {$/;"	s	file:
win_clear_nhwindow	include/winprocs.h	/^	void (*win_clear_nhwindow)(winid);$/;"	m	struct:window_procs
win_cliparound	include/winprocs.h	/^	void (*win_cliparound)(int, int);$/;"	m	struct:window_procs
win_create_nhwindow	include/winprocs.h	/^	winid (*win_create_nhwindow)(int);$/;"	m	struct:window_procs
win_curs	include/winprocs.h	/^	void (*win_curs)(winid,int,int);$/;"	m	struct:window_procs
win_delay_output	include/winprocs.h	/^	void (*win_delay_output)(void);$/;"	m	struct:window_procs
win_destroy_nhwindow	include/winprocs.h	/^	void (*win_destroy_nhwindow)(winid);$/;"	m	struct:window_procs
win_display_file	include/winprocs.h	/^	void (*win_display_file)(const char *, bool);$/;"	m	struct:window_procs
win_display_nhwindow	include/winprocs.h	/^	void (*win_display_nhwindow)(winid, bool);$/;"	m	struct:window_procs
win_doprev_message	include/winprocs.h	/^	int (*win_doprev_message)(void);$/;"	m	struct:window_procs
win_end_menu	include/winprocs.h	/^	void (*win_end_menu)(winid, const char *);$/;"	m	struct:window_procs
win_end_screen	include/winprocs.h	/^	void (*win_end_screen)(void);$/;"	m	struct:window_procs
win_exit_nhwindows	include/winprocs.h	/^	void (*win_exit_nhwindows)(const char *);$/;"	m	struct:window_procs
win_get_color_string	include/winprocs.h	/^	char * (*win_get_color_string)(void);$/;"	m	struct:window_procs
win_get_ext_cmd	include/winprocs.h	/^	int (*win_get_ext_cmd)(void);$/;"	m	struct:window_procs
win_get_nh_event	include/winprocs.h	/^	void (*win_get_nh_event)(void);$/;"	m	struct:window_procs
win_getlin	include/winprocs.h	/^	void (*win_getlin)(const char *,char *);$/;"	m	struct:window_procs
win_init_nhwindows	include/winprocs.h	/^	void (*win_init_nhwindows)(int *, char **);$/;"	m	struct:window_procs
win_kbhit	include/winprocs.h	/^	int (*win_kbhit)(void);$/;"	m	struct:window_procs
win_mark_synch	include/winprocs.h	/^	void (*win_mark_synch)(void);$/;"	m	struct:window_procs
win_message_menu	include/winprocs.h	/^	char (*win_message_menu)(char,int,const char *);$/;"	m	struct:window_procs
win_nh_poskey	include/winprocs.h	/^	int (*win_nh_poskey)(int *, int *, int *);$/;"	m	struct:window_procs
win_nhbell	include/winprocs.h	/^	void (*win_nhbell)(void);$/;"	m	struct:window_procs
win_nhgetch	include/winprocs.h	/^	int (*win_nhgetch)(void);$/;"	m	struct:window_procs
win_number_pad	include/winprocs.h	/^	void (*win_number_pad)(int);$/;"	m	struct:window_procs
win_outrip	include/winprocs.h	/^	void (*win_outrip)(winid,int);$/;"	m	struct:window_procs
win_player_selection	include/winprocs.h	/^	void (*win_player_selection)(void);$/;"	m	struct:window_procs
win_preference_update	include/winprocs.h	/^	void (*win_preference_update)(const char *);$/;"	m	struct:window_procs
win_print_glyph	include/winprocs.h	/^	void (*win_print_glyph)(winid,xchar,xchar,int);$/;"	m	struct:window_procs
win_proxy_callbacks	win/proxy/callback.c	/^struct nhproxy_serv_callbacks win_proxy_callbacks = {$/;"	v	typeref:struct:nhproxy_serv_callbacks
win_proxy_errhandler	win/proxy/winproxy.c	/^win_proxy_errhandler(class, error)$/;"	f	file:
win_proxy_extents	win/proxy/winproxy.c	/^struct nhproxy_extension win_proxy_extents[] = {$/;"	v	typeref:struct:nhproxy_extension
win_proxy_init	win/proxy/winproxy.c	/^win_proxy_init()$/;"	f
win_putstr	include/winprocs.h	/^	void (*win_putstr)(winid, int, const char *);$/;"	m	struct:window_procs
win_raw_print	include/winprocs.h	/^	void (*win_raw_print)(const char *);$/;"	m	struct:window_procs
win_raw_print_bold	include/winprocs.h	/^	void (*win_raw_print_bold)(const char *);$/;"	m	struct:window_procs
win_resume_nhwindows	include/winprocs.h	/^	void (*win_resume_nhwindows)(void);$/;"	m	struct:window_procs
win_select_menu	include/winprocs.h	/^	int (*win_select_menu)(winid, int, menu_item **);$/;"	m	struct:window_procs
win_set_font_name	include/winprocs.h	/^	short (*win_set_font_name)(winid, char *);$/;"	m	struct:window_procs
win_start_menu	include/winprocs.h	/^	void (*win_start_menu)(winid);$/;"	m	struct:window_procs
win_start_screen	include/winprocs.h	/^	void (*win_start_screen)(void);$/;"	m	struct:window_procs
win_suspend_nhwindows	include/winprocs.h	/^	void (*win_suspend_nhwindows)(const char *);$/;"	m	struct:window_procs
win_tty_init	win/tty/wintty.c	/^void win_tty_init(void) {$/;"	f
win_update_inventory	include/winprocs.h	/^	void (*win_update_inventory)(void);$/;"	m	struct:window_procs
win_update_positionbar	include/winprocs.h	/^	void (*win_update_positionbar)(char *);$/;"	m	struct:window_procs
win_wait_synch	include/winprocs.h	/^	void (*win_wait_synch)(void);$/;"	m	struct:window_procs
win_yn_function	include/winprocs.h	/^	char (*win_yn_function)(const char *, const char *, char);$/;"	m	struct:window_procs
wincap	include/winprocs.h	/^	unsigned long wincap;	\/* window port capability options supported *\/$/;"	m	struct:window_procs
wincap2	include/winprocs.h	/^	unsigned long wincap2;	\/* additional window port capability options supported *\/$/;"	m	struct:window_procs
winch	win/tty/wintty.c	/^static void winch(int sig) {$/;"	f	file:
winchoices	src/windows.c	/^} winchoices[] = {$/;"	v	typeref:struct:win_choices	file:
window_inited	include/flag.h	/^	bool  window_inited; \/* true if init_nhwindows() completed *\/$/;"	m	struct:instance_flags
window_procs	include/winprocs.h	/^struct window_procs {$/;"	s
windowprocs	src/windows.c	/^struct window_procs windowprocs;$/;"	v	typeref:struct:window_procs
windowprocs	util/lev_main.c	/^struct window_procs windowprocs;$/;"	v	typeref:struct:window_procs
windows_lock	src/windows.c	/^static int windows_lock = false;$/;"	v	file:
winid	include/wintype.h	/^typedef int winid;              \/* a window identifier *\/$/;"	t
winpanicstr	win/tty/wintty.c	/^static char winpanicstr[] = "Bad window id %d";$/;"	v	file:
wins	win/tty/wintty.c	/^struct WinDesc *wins[MAXWIN];$/;"	v	typeref:struct:WinDesc
wipe_engr_at	src/engrave.c	/^void wipe_engr_at(xchar x, xchar y, xchar cnt) {$/;"	f
wipefrom	src/engrave.c	/^	char		wipefrom;$/;"	m	struct:__anon7	file:
wipeoff	src/do.c	/^static int wipeoff(void) {$/;"	f	file:
wipeout_text	src/engrave.c	/^void wipeout_text( char *engr, int cnt, unsigned seed \/* for semi-controlled randomization *\/) {$/;"	f
wipeto	src/engrave.c	/^	const char *	wipeto;$/;"	m	struct:__anon7	file:
wisharti	include/you.h	/^	long	wisharti;	\/* wished for an artifact *\/$/;"	m	struct:u_conduct
wishes	include/you.h	/^	long	wishes;		\/* used a wish *\/$/;"	m	struct:u_conduct
wishymatch	src/objnam.c	/^static boolean wishymatch(const char *u_str, const char *o_str, boolean retry_inverted) {$/;"	f	file:
within_bounded_area	include/dungeon.h	146;"	d
wiz1_level	include/decl.h	85;"	d
wiz2_level	include/decl.h	86;"	d
wiz3_level	include/decl.h	87;"	d
wiz_abil	src/attrib.c	/^wiz_abil[] = { {	15, &(HWarning), "sensitive", "" },$/;"	v	typeref:struct:innate	file:
wiz_debug_cmd	src/dig.c	/^int wiz_debug_cmd(void) {$/;"	f
wiz_debug_cmd	src/shk.c	/^int wiz_debug_cmd(void) {$/;"	f
wiz_debug_cmd	src/tech.c	/^void wiz_debug_cmd (void) {$/;"	f
wiz_debug_cmd	src/teleport.c	/^wiz_debug_cmd (void) {$/;"	f
wiz_debug_wpathto	src/teleport.c	/^static boolean wiz_debug_wpathto(void * arg, int x, int y) {$/;"	f	file:
wiz_detect	src/cmd.c	/^static int wiz_detect(void) {$/;"	f	file:
wiz_error_flag	sys/unix/unixmain.c	/^static bool wiz_error_flag = false;$/;"	v	file:
wiz_gain_ac	src/cmd.c	/^static int wiz_gain_ac(void) {$/;"	f	file:
wiz_gain_level	src/cmd.c	/^static int wiz_gain_level(void) {$/;"	f	file:
wiz_genesis	src/cmd.c	/^static int wiz_genesis(void) {$/;"	f	file:
wiz_identify	src/cmd.c	/^static int wiz_identify(void) {$/;"	f	file:
wiz_level_change	src/cmd.c	/^static int wiz_level_change(void) {$/;"	f	file:
wiz_level_tele	src/cmd.c	/^static int wiz_level_tele(void) {$/;"	f	file:
wiz_light_sources	src/light.c	/^int wiz_light_sources(void) {$/;"	f
wiz_map	src/cmd.c	/^static int wiz_map(void) {$/;"	f	file:
wiz_migrate_mons	src/cmd.c	/^static int wiz_migrate_mons(void) {$/;"	f	file:
wiz_mon_polycontrol	src/cmd.c	/^static int wiz_mon_polycontrol(void) {$/;"	f	file:
wiz_panic	src/cmd.c	/^static int wiz_panic(void) {$/;"	f	file:
wiz_polyself	src/cmd.c	/^static int wiz_polyself(void) {$/;"	f	file:
wiz_port_debug	src/cmd.c	/^int wiz_port_debug(void) {$/;"	f
wiz_show_display	src/cmd.c	/^static int wiz_show_display(void) {$/;"	f	file:
wiz_show_seenv	src/cmd.c	/^static int wiz_show_seenv(void) {$/;"	f	file:
wiz_show_stats	src/cmd.c	/^static int wiz_show_stats(void) {$/;"	f	file:
wiz_show_vision	src/cmd.c	/^static int wiz_show_vision(void) {$/;"	f	file:
wiz_show_wmodes	src/cmd.c	/^static int wiz_show_wmodes(void) {$/;"	f	file:
wiz_tech	src/tech.c	/^wiz_tech[] = { {   1, T_REINFORCE, 1},$/;"	v	typeref:struct:	file:
wiz_timeout_queue	src/timeout.c	/^int wiz_timeout_queue(void) {$/;"	f
wiz_toggle_invulnerability	src/cmd.c	/^static int wiz_toggle_invulnerability(void) {$/;"	f	file:
wiz_where	src/cmd.c	/^static int wiz_where(void) {$/;"	f	file:
wiz_wish	src/cmd.c	/^static int wiz_wish(void) {$/;"	f	file:
wizapp	src/wizard.c	/^static const unsigned wizapp[] = {$/;"	v	file:
wizard	include/flag.h	28;"	d
wizard_menu	src/cmd.c	/^static const struct menu_tab wizard_menu[] = {$/;"	v	typeref:struct:menu_tab	file:
wizdead	src/wizard.c	/^wizdead (void) {$/;"	f
wizkit	src/files.c	/^static char wizkit[WIZKIT_MAX];$/;"	v	file:
wlearn	include/attk.h	/^	bool wlearn;		\/* Character learns identity of wobj *\/$/;"	m	struct:Attk
wobj	include/attk.h	/^	struct obj *wobj;		\/* The wielded object, launcher, or wand *\/$/;"	m	struct:Attk	typeref:struct:Attk::obj
wolfname	src/decl.c	/^char wolfname[PL_PSIZ] = DUMMY;$/;"	v
worm_known	src/worm.c	/^boolean worm_known(struct monst *worm) {$/;"	f
worm_move	src/worm.c	/^worm_move (struct monst *worm) {$/;"	f
worm_nomove	src/worm.c	/^worm_nomove (struct monst *worm) {$/;"	f
wormgone	src/worm.c	/^wormgone (struct monst *worm) {$/;"	f
wormhitu	src/worm.c	/^wormhitu (struct monst *worm) {$/;"	f
worn	src/worn.c	/^const struct worn {$/;"	s	file:
worn	src/worn.c	/^} worn[] = {$/;"	v	typeref:struct:worn
worn_wield_only	src/invent.c	/^static bool worn_wield_only(struct obj *obj) {$/;"	f	file:
worst_cursed_item	src/pray.c	/^static struct obj * worst_cursed_item() {$/;"	f	file:
wpathto	src/teleport.c	/^boolean wpathto(coord *src_cc, coord *dest_cc, boolean (*step_proc)(void *, int, int), void * arg, struct permonst *mdat, int max_pathlen) {$/;"	f
wportal	src/mkmaze.c	/^static struct trap *wportal;$/;"	v	typeref:struct:trap	file:
write_char	win/curses/curswins.c	/^static void write_char(WINDOW * win, int x, int y, nethack_char nch) {$/;"	f	file:
write_common_data	util/lev_main.c	/^static bool write_common_data(int fd, int typ, lev_init *init, long flgs) {$/;"	f	file:
write_dlb_directory	util/dlb_main.c	/^write_dlb_directory(out, nfiles, ld, slen, dir_size, flen)$/;"	f	file:
write_engravings	util/lev_main.c	/^static bool write_engravings(int fd, char *nengraving_p, engraving ***engravings_p) {$/;"	f	file:
write_level_file	util/lev_main.c	/^bool write_level_file(char *filename, splev *room_level, specialmaze *maze_level) {$/;"	f
write_ls	src/light.c	/^static void write_ls(int fd, light_source *ls) {$/;"	f	file:
write_maze	util/lev_main.c	/^static bool write_maze(int fd, specialmaze *maze) {$/;"	f	file:
write_monsters	util/lev_main.c	/^static bool write_monsters(int fd, char *nmonster_p, monster ***monsters_p) {$/;"	f	file:
write_objects	util/lev_main.c	/^static bool write_objects(int fd, char *nobject_p, object ***objects_p) {$/;"	f	file:
write_on	src/write.c	/^static const char write_on[] = { SCROLL_CLASS, SPBOOK_CLASS, 0 };$/;"	v	file:
write_rooms	util/lev_main.c	/^static bool write_rooms(int fd, splev *lev) {$/;"	f	file:
write_timer	src/timeout.c	/^static void write_timer(int fd, timer_element *timer) {$/;"	f	file:
write_xlentry	src/topten.c	/^static void write_xlentry(FILE *rfile, struct toptenentry *tt) {$/;"	f	file:
writeentry	src/topten.c	/^static void writeentry(FILE *rfile, struct toptenentry *tt) {$/;"	f	file:
wrong_elem_type	src/makemon.c	/^static boolean wrong_elem_type(struct permonst *ptr) {$/;"	f	file:
wrp	src/objnam.c	/^static const char *wrp[] = {$/;"	v	file:
wrpsym	src/objnam.c	/^static const char wrpsym[] = {$/;"	v	file:
wseg	src/worm.c	/^struct wseg {$/;"	s	file:
wsobj	src/apply.c	/^	struct obj *tobj, *wsobj;$/;"	m	struct:whetstoneinfo	typeref:struct:whetstoneinfo::	file:
wtails	src/worm.c	/^struct wseg *wheads[MAX_NUM_WORMS]   = DUMMY, *wtails[MAX_NUM_WORMS] = DUMMY;$/;"	v	typeref:struct:
wx	src/worm.c	/^	xchar  wx, wy;	\/* the segment's position *\/$/;"	m	struct:wseg	file:
wy	src/worm.c	/^	xchar  wx, wy;	\/* the segment's position *\/$/;"	m	struct:wseg	file:
x	include/coord.h	/^	xchar x,y;$/;"	m	struct:__anon27
x	include/lev.h	/^	xchar x, y;		\/* source's position *\/$/;"	m	struct:ls_t
x	include/lev.h	/^	xchar x, y;	\/* coordinates of the upper left corner *\/$/;"	m	struct:bubble
x	include/lev.h	/^	xchar x, y;$/;"	m	struct:container
x	include/mkroom.h	/^	xchar x,y;$/;"	m	struct:door
x	include/sp_lev.h	/^	int x, y;$/;"	m	struct:coord
x	include/sp_lev.h	/^	xchar		x, y;$/;"	m	struct:__anon37
x	include/sp_lev.h	/^	xchar x, y, chance, class, appear;$/;"	m	struct:__anon35
x	include/sp_lev.h	/^	xchar x, y, chance, class, containment;$/;"	m	struct:__anon36
x	include/sp_lev.h	/^	xchar x, y, chance, type;$/;"	m	struct:__anon34
x	include/sp_lev.h	/^	xchar x, y, dir, db_open;$/;"	m	struct:__anon38
x	include/sp_lev.h	/^	xchar x, y, dir;$/;"	m	struct:__anon39
x	include/sp_lev.h	/^	xchar x, y, mask;$/;"	m	struct:__anon32
x	include/sp_lev.h	/^	xchar x, y, up;$/;"	m	struct:__anon41
x	include/sp_lev.h	/^	xchar x, y, up;$/;"	m	struct:__anon42
x	include/sp_lev.h	/^	xchar x, y, w, h;$/;"	m	struct:_room
x	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon47
x	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon48
x	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon49
x	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon50
x	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon51
x	src/explode.c	/^	xchar x, y;$/;"	m	struct:__anon8	file:
x	win/curses/curswins.c	/^    int x;                      \/* start of window on terminal (left) *\/$/;"	m	struct:__anon22	file:
x1	build-linux/src/lev_yacc.c	/^	int x1, y1;$/;"	m	struct:reg	file:
x1	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon45
x1	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon46
x1	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon40
x1	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon43
x2	build-linux/src/lev_yacc.c	/^	int x2, y2;$/;"	m	struct:reg	file:
x2	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon45
x2	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon46
x2	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon40
x2	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon43
x_maze_max	src/decl.c	/^int x_maze_max, y_maze_max;	\/* initialized in main, used in mkmaze.c *\/$/;"	v
x_maze_min	src/mklev.c	1351;"	d	file:
x_maze_min	src/mkmaze.c	616;"	d	file:
x_maze_min	src/mkmaze.c	655;"	d	file:
x_monnam	src/do_name.c	/^char *x_monnam(struct monst *mtmp, int article, const char *adjective, int suppress, boolean called) {$/;"	f
xalign	include/sp_lev.h	/^	xchar xalign, yalign;$/;"	m	struct:_room
xchar	include/global.h	/^typedef schar	xchar;$/;"	t
xdir	src/decl.c	/^const schar xdir[10] = {-1,-1, 0, 1, 1, 1, 0,-1, 0, 0};$/;"	v
xdnladder	include/decl.h	126;"	d
xdnstair	include/decl.h	120;"	d
xexit	util/dlb_main.c	/^static void xexit(int retcd) {$/;"	f	file:
xkilled	src/mon.c	/^void xkilled (struct monst *mtmp, int dest) {$/;"	f
xlev	include/you.h	/^	xchar xlev;		\/* cutoff experience level *\/$/;"	m	struct:Role
xlev_to_rank	src/botl.c	/^int xlev_to_rank(int xlev) {$/;"	f
xlock	src/lock.c	/^} xlock;$/;"	v	typeref:struct:xlock_s	file:
xlock_s	src/lock.c	/^static struct xlock_s {$/;"	s	file:
xmax	src/mkmaze.c	/^static int xmin, ymin, xmax, ymax;	\/* level boundaries *\/$/;"	v	file:
xmin	src/mkmaze.c	/^static int xmin, ymin, xmax, ymax;	\/* level boundaries *\/$/;"	v	file:
xname	src/objnam.c	/^char * xname (struct obj *obj) {$/;"	f
xname2	src/objnam.c	/^char * xname2 (struct obj *obj) {$/;"	f
xpathto	src/teleport.c	/^void xpathto(int r, xchar xx, xchar yy, int (*func)(void *, int, int), void * data) {$/;"	f
xprname	src/invent.c	/^char *xprname(struct obj *obj,$/;"	f
xputc	sys/winnt/nttty.c	/^xputc(ch)$/;"	f
xputc_core	sys/winnt/nttty.c	/^xputc_core(ch)$/;"	f
xputs	sys/winnt/nttty.c	/^xputs(s)$/;"	f
xputs	win/tty/termcap.c	/^void xputs(const char *s) {$/;"	f
xray_range	include/you.h	/^	int xray_range;		\/* current xray vision range *\/$/;"	m	struct:you
xsize	include/sp_lev.h	/^	char xsize, ysize;$/;"	m	struct:__anon52
xsize	src/sp_lev.c	/^static char xsize, ysize;$/;"	v	file:
xstart	src/sp_lev.c	/^static xchar xstart, ystart;$/;"	v	file:
xupladder	include/decl.h	128;"	d
xupstair	include/decl.h	122;"	d
xwaitforspace	win/tty/getline.c	/^void xwaitforspace(const char *s) {$/;"	f
xytod	src/cmd.c	/^int xytod(schar x, schar y) {$/;"	f
y	include/coord.h	/^	xchar x,y;$/;"	m	struct:__anon27
y	include/lev.h	/^	xchar x, y;		\/* source's position *\/$/;"	m	struct:ls_t
y	include/lev.h	/^	xchar x, y;	\/* coordinates of the upper left corner *\/$/;"	m	struct:bubble
y	include/lev.h	/^	xchar x, y;$/;"	m	struct:container
y	include/mkroom.h	/^	xchar x,y;$/;"	m	struct:door
y	include/sp_lev.h	/^	int x, y;$/;"	m	struct:coord
y	include/sp_lev.h	/^	xchar		x, y;$/;"	m	struct:__anon37
y	include/sp_lev.h	/^	xchar x, y, chance, class, appear;$/;"	m	struct:__anon35
y	include/sp_lev.h	/^	xchar x, y, chance, class, containment;$/;"	m	struct:__anon36
y	include/sp_lev.h	/^	xchar x, y, chance, type;$/;"	m	struct:__anon34
y	include/sp_lev.h	/^	xchar x, y, dir, db_open;$/;"	m	struct:__anon38
y	include/sp_lev.h	/^	xchar x, y, dir;$/;"	m	struct:__anon39
y	include/sp_lev.h	/^	xchar x, y, mask;$/;"	m	struct:__anon32
y	include/sp_lev.h	/^	xchar x, y, up;$/;"	m	struct:__anon41
y	include/sp_lev.h	/^	xchar x, y, up;$/;"	m	struct:__anon42
y	include/sp_lev.h	/^	xchar x, y, w, h;$/;"	m	struct:_room
y	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon47
y	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon48
y	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon49
y	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon50
y	include/sp_lev.h	/^	xchar x, y;$/;"	m	struct:__anon51
y	src/explode.c	/^	xchar x, y;$/;"	m	struct:__anon8	file:
y	win/curses/curswins.c	/^    int y;                      \/* start of window on termial (top) *\/$/;"	m	struct:__anon22	file:
y1	build-linux/src/lev_yacc.c	/^	int x1, y1;$/;"	m	struct:reg	file:
y1	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon45
y1	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon46
y1	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon40
y1	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon43
y2	build-linux/src/lev_yacc.c	/^	int x2, y2;$/;"	m	struct:reg	file:
y2	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon45
y2	include/sp_lev.h	/^		xchar x1, y1, x2, y2;$/;"	m	struct:__anon44::__anon46
y2	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon40
y2	include/sp_lev.h	/^	xchar x1, y1, x2, y2;$/;"	m	struct:__anon43
y_maze_max	src/decl.c	/^int x_maze_max, y_maze_max;	\/* initialized in main, used in mkmaze.c *\/$/;"	v
y_maze_min	src/mklev.c	1352;"	d	file:
y_maze_min	src/mkmaze.c	617;"	d	file:
y_maze_min	src/mkmaze.c	656;"	d	file:
y_monnam	src/do_name.c	/^char *y_monnam(struct monst *mtmp) {$/;"	f
yalign	include/sp_lev.h	/^	xchar xalign, yalign;$/;"	m	struct:_room
ydir	src/decl.c	/^const schar ydir[10] = { 0,-1,-1,-1, 0, 1, 1, 1, 0, 0};$/;"	v
ydnladder	include/decl.h	127;"	d
ydnstair	include/decl.h	121;"	d
yeenoghu_level	include/decl.h	91;"	d
yell_types	src/zap.c	/^const char *yell_types[] = {    \/*10 different beam types*\/$/;"	v
yelp	include/extern.h	1824;"	d
yelp_sound	src/sounds.c	/^yelp_sound (struct monst *mtmp) {$/;"	f	file:
yeo_abil	src/attrib.c	/^yeo_abil[] = {$/;"	v	typeref:struct:innate	file:
yeo_tech	src/tech.c	/^yeo_tech[] = {$/;"	v	typeref:struct:	file:
ymax	src/mkmaze.c	/^static int xmin, ymin, xmax, ymax;	\/* level boundaries *\/$/;"	v	file:
ymin	src/mkmaze.c	/^static int xmin, ymin, xmax, ymax;	\/* level boundaries *\/$/;"	v	file:
yn	include/hack.h	184;"	d
ynNaq	include/hack.h	189;"	d
ynNaqchars	src/decl.c	/^const char ynNaqchars[] = "yn#aq";$/;"	v
yn_function	src/cmd.c	/^char yn_function(const char *query, const char *resp, char def) {$/;"	f
yn_number	src/decl.c	/^long yn_number = 0L;$/;"	v
yname	src/objnam.c	/^char * yname (struct obj *obj) {$/;"	f
ynaq	include/hack.h	186;"	d
ynaqchars	src/decl.c	/^const char ynaqchars[] = "ynaq";$/;"	v
ynchars	src/decl.c	/^const char ynchars[] = "yn";$/;"	v
ynq	include/hack.h	185;"	d
ynqchars	src/decl.c	/^const char ynqchars[] = "ynq";$/;"	v
you	include/you.h	/^struct you {$/;"	s
you_aggravate	src/muse.c	/^static void you_aggravate(struct monst *mtmp) {$/;"	f	file:
you_are	src/cmd.c	1078;"	d	file:
you_buf	src/pline.c	/^static char *you_buf = 0;$/;"	v	file:
you_buf_siz	src/pline.c	/^static int you_buf_siz = 0;$/;"	v	file:
you_can	src/cmd.c	1080;"	d	file:
you_have	src/cmd.c	1079;"	d	file:
you_have	src/wizard.c	/^static boolean you_have(int mask) {$/;"	f	file:
you_have_X	src/cmd.c	1083;"	d	file:
you_have_been	src/cmd.c	1081;"	d	file:
you_have_never	src/cmd.c	1082;"	d	file:
you_moving	src/apply.c	/^	boolean you_moving;		\/* True if hero is the one moving *\/$/;"	m	struct:leash_check	file:
you_unwere	src/were.c	/^void you_unwere(boolean purify) {$/;"	f
you_were	src/were.c	/^void you_were (void) {$/;"	f
youmonst	src/decl.c	/^struct monst youmonst = DUMMY;$/;"	v	typeref:struct:monst
your_race	include/mondata.h	100;"	d
yours	include/obj.h	/^	bool yours;	\/* obj is yours (eg. thrown by you) *\/$/;"	m	struct:obj
ysimple_name	src/objnam.c	/^char * ysimple_name (struct obj *obj) {$/;"	f
ysize	include/sp_lev.h	/^	char xsize, ysize;$/;"	m	struct:__anon52
ysize	src/sp_lev.c	/^static char xsize, ysize;$/;"	v	file:
ystart	src/sp_lev.c	/^static xchar xstart, ystart;$/;"	v	file:
yupladder	include/decl.h	129;"	d
yupstair	include/decl.h	123;"	d
yy_accept	build-linux/src/dgn_lex.c	/^static const flex_int16_t yy_accept[196] =$/;"	v	file:
yy_accept	build-linux/src/lev_lex.c	/^static const flex_int16_t yy_accept[679] =$/;"	v	file:
yy_at_bol	build-linux/src/dgn_lex.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_at_bol	build-linux/src/lev_lex.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	build-linux/src/dgn_lex.c	/^static const flex_int16_t yy_base[198] =$/;"	v	file:
yy_base	build-linux/src/lev_lex.c	/^static const flex_int16_t yy_base[684] =$/;"	v	file:
yy_bs_column	build-linux/src/dgn_lex.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_column	build-linux/src/lev_lex.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	build-linux/src/dgn_lex.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	build-linux/src/lev_lex.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	build-linux/src/dgn_lex.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	build-linux/src/lev_lex.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	build-linux/src/dgn_lex.c	/^	int yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	build-linux/src/lev_lex.c	/^	int yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	build-linux/src/dgn_lex.c	/^static YY_BUFFER_STATE * yy_buffer_stack = NULL; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack	build-linux/src/lev_lex.c	/^static YY_BUFFER_STATE * yy_buffer_stack = NULL; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	build-linux/src/dgn_lex.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_max	build-linux/src/lev_lex.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	build-linux/src/dgn_lex.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_stack_top	build-linux/src/lev_lex.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	build-linux/src/dgn_lex.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state	build-linux/src/lev_lex.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	build-linux/src/dgn_lex.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_status	build-linux/src/lev_lex.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	build-linux/src/dgn_lex.c	/^static char *yy_c_buf_p = NULL;$/;"	v	file:
yy_c_buf_p	build-linux/src/lev_lex.c	/^static char *yy_c_buf_p = NULL;$/;"	v	file:
yy_ch_buf	build-linux/src/dgn_lex.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_ch_buf	build-linux/src/lev_lex.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	build-linux/src/dgn_lex.c	/^static const flex_int16_t yy_chk[269] =$/;"	v	file:
yy_chk	build-linux/src/lev_lex.c	/^static const flex_int16_t yy_chk[905] =$/;"	v	file:
yy_create_buffer	build-linux/src/dgn_lex.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_create_buffer	build-linux/src/lev_lex.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	build-linux/src/dgn_lex.c	/^static const flex_int16_t yy_def[198] =$/;"	v	file:
yy_def	build-linux/src/lev_lex.c	/^static const flex_int16_t yy_def[684] =$/;"	v	file:
yy_delete_buffer	build-linux/src/dgn_lex.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_delete_buffer	build-linux/src/lev_lex.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	build-linux/src/dgn_lex.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_did_buffer_switch_on_eof	build-linux/src/lev_lex.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	build-linux/src/dgn_lex.c	/^static const YY_CHAR yy_ec[256] =$/;"	v	file:
yy_ec	build-linux/src/lev_lex.c	/^static const YY_CHAR yy_ec[256] =$/;"	v	file:
yy_fatal_error	build-linux/src/dgn_lex.c	/^static void yynoreturn yy_fatal_error (const char* msg )$/;"	f	file:
yy_fatal_error	build-linux/src/lev_lex.c	/^static void yynoreturn yy_fatal_error (const char* msg )$/;"	f	file:
yy_fill_buffer	build-linux/src/dgn_lex.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_fill_buffer	build-linux/src/lev_lex.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	build-linux/src/dgn_lex.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_debug	build-linux/src/lev_lex.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	build-linux/src/dgn_lex.c	/^static int yy_flex_strlen (const char * s )$/;"	f	file:
yy_flex_strlen	build-linux/src/lev_lex.c	/^static int yy_flex_strlen (const char * s )$/;"	f	file:
yy_flex_strncpy	build-linux/src/dgn_lex.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	f	file:
yy_flex_strncpy	build-linux/src/lev_lex.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	f	file:
yy_flush_buffer	build-linux/src/dgn_lex.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_flush_buffer	build-linux/src/lev_lex.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	build-linux/src/dgn_lex.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_next_buffer	build-linux/src/lev_lex.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	build-linux/src/dgn_lex.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_get_previous_state	build-linux/src/lev_lex.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	build-linux/src/dgn_lex.c	/^static char yy_hold_char;$/;"	v	file:
yy_hold_char	build-linux/src/lev_lex.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	build-linux/src/dgn_lex.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init	build-linux/src/lev_lex.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	build-linux/src/dgn_lex.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_buffer	build-linux/src/lev_lex.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	build-linux/src/dgn_lex.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_init_globals	build-linux/src/lev_lex.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	build-linux/src/dgn_lex.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_input_file	build-linux/src/lev_lex.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	build-linux/src/dgn_lex.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	build-linux/src/lev_lex.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	build-linux/src/dgn_lex.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	build-linux/src/lev_lex.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	build-linux/src/dgn_lex.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_cpos	build-linux/src/lev_lex.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	build-linux/src/dgn_lex.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_last_accepting_state	build-linux/src/lev_lex.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	build-linux/src/dgn_lex.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_load_buffer_state	build-linux/src/lev_lex.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	build-linux/src/dgn_lex.c	/^static const YY_CHAR yy_meta[49] =$/;"	v	file:
yy_meta	build-linux/src/lev_lex.c	/^static const YY_CHAR yy_meta[66] =$/;"	v	file:
yy_more_len	util/lev_main.c	/^int yy_more_len = 0;$/;"	v
yy_n_chars	build-linux/src/dgn_lex.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	build-linux/src/dgn_lex.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_n_chars	build-linux/src/lev_lex.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	build-linux/src/lev_lex.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	build-linux/src/dgn_lex.c	304;"	d	file:
yy_new_buffer	build-linux/src/lev_lex.c	304;"	d	file:
yy_nxt	build-linux/src/dgn_lex.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	build-linux/src/dgn_lex.c	/^static const flex_int16_t yy_nxt[269] =$/;"	v	file:
yy_nxt	build-linux/src/lev_lex.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	build-linux/src/lev_lex.c	/^static const flex_int16_t yy_nxt[905] =$/;"	v	file:
yy_reduce_print	build-linux/src/dgn_yacc.c	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_reduce_print	build-linux/src/lev_yacc.c	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_scan_buffer	build-linux/src/dgn_lex.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_buffer	build-linux/src/lev_lex.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	build-linux/src/dgn_lex.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	f
yy_scan_bytes	build-linux/src/lev_lex.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	f
yy_scan_string	build-linux/src/dgn_lex.c	/^YY_BUFFER_STATE yy_scan_string (const char * yystr )$/;"	f
yy_scan_string	build-linux/src/lev_lex.c	/^YY_BUFFER_STATE yy_scan_string (const char * yystr )$/;"	f
yy_set_bol	build-linux/src/dgn_lex.c	314;"	d	file:
yy_set_bol	build-linux/src/lev_lex.c	314;"	d	file:
yy_set_interactive	build-linux/src/dgn_lex.c	305;"	d	file:
yy_set_interactive	build-linux/src/lev_lex.c	305;"	d	file:
yy_size_t	build-linux/src/dgn_lex.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_size_t	build-linux/src/lev_lex.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	build-linux/src/dgn_yacc.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_stack_print	build-linux/src/lev_yacc.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	build-linux/src/dgn_lex.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_start	build-linux/src/lev_lex.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	build-linux/src/dgn_lex.c	/^typedef int yy_state_type;$/;"	t	file:
yy_state_type	build-linux/src/lev_lex.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	build-linux/src/dgn_lex.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_switch_to_buffer	build-linux/src/lev_lex.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	build-linux/src/dgn_yacc.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_print	build-linux/src/lev_yacc.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	build-linux/src/dgn_yacc.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	build-linux/src/lev_yacc.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	build-linux/src/dgn_lex.c	/^struct yy_trans_info$/;"	s	file:
yy_trans_info	build-linux/src/lev_lex.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	build-linux/src/dgn_lex.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_try_NUL_trans	build-linux/src/lev_lex.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	build-linux/src/dgn_lex.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yy_verify	build-linux/src/lev_lex.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	build-linux/src/dgn_lex.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	build-linux/src/dgn_yacc.c	/^union yyalloc$/;"	u	file:
yyalloc	build-linux/src/lev_lex.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	build-linux/src/lev_yacc.c	/^union yyalloc$/;"	u	file:
yychar	build-linux/src/dgn_yacc.c	/^int yychar;$/;"	v
yychar	build-linux/src/lev_yacc.c	/^int yychar;$/;"	v
yycheck	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yycheck[] =$/;"	v	file:
yycheck	build-linux/src/lev_yacc.c	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	build-linux/src/dgn_yacc.c	659;"	d	file:
yyclearin	build-linux/src/lev_yacc.c	1130;"	d	file:
yyconst	build-linux/src/dgn_lex.c	98;"	d	file:
yyconst	build-linux/src/lev_lex.c	98;"	d	file:
yydebug	build-linux/src/dgn_yacc.c	/^int yydebug;$/;"	v
yydebug	build-linux/src/lev_yacc.c	/^int yydebug;$/;"	v
yydefact	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefact	build-linux/src/lev_yacc.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	build-linux/src/dgn_yacc.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydefgoto	build-linux/src/lev_yacc.c	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	build-linux/src/dgn_yacc.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yydestruct	build-linux/src/lev_yacc.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	build-linux/src/dgn_lex.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyensure_buffer_stack	build-linux/src/lev_lex.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	build-linux/src/dgn_yacc.c	658;"	d	file:
yyerrok	build-linux/src/lev_yacc.c	1129;"	d	file:
yyerror	util/dgn_main.c	/^void yyerror(s)$/;"	f
yyerror	util/lev_main.c	/^void yyerror(const char *s) {$/;"	f
yyfree	build-linux/src/dgn_lex.c	/^void yyfree (void * ptr )$/;"	f
yyfree	build-linux/src/lev_lex.c	/^void yyfree (void * ptr )$/;"	f
yyget_debug	build-linux/src/dgn_lex.c	/^int yyget_debug  (void)$/;"	f
yyget_debug	build-linux/src/lev_lex.c	/^int yyget_debug  (void)$/;"	f
yyget_in	build-linux/src/dgn_lex.c	/^FILE *yyget_in  (void)$/;"	f
yyget_in	build-linux/src/lev_lex.c	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	build-linux/src/dgn_lex.c	/^int yyget_leng  (void)$/;"	f
yyget_leng	build-linux/src/lev_lex.c	/^int yyget_leng  (void)$/;"	f
yyget_lineno	build-linux/src/dgn_lex.c	/^int yyget_lineno  (void)$/;"	f
yyget_lineno	build-linux/src/lev_lex.c	/^int yyget_lineno  (void)$/;"	f
yyget_out	build-linux/src/dgn_lex.c	/^FILE *yyget_out  (void)$/;"	f
yyget_out	build-linux/src/lev_lex.c	/^FILE *yyget_out  (void)$/;"	f
yyget_text	build-linux/src/dgn_lex.c	/^char *yyget_text  (void)$/;"	f
yyget_text	build-linux/src/lev_lex.c	/^char *yyget_text  (void)$/;"	f
yyin	build-linux/src/dgn_lex.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v
yyin	build-linux/src/lev_lex.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v
yyinput	build-linux/src/dgn_lex.c	/^    static int yyinput (void)$/;"	f	file:
yyinput	build-linux/src/lev_lex.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	build-linux/src/dgn_lex.c	/^int yyleng;$/;"	v
yyleng	build-linux/src/lev_lex.c	/^int yyleng;$/;"	v
yyless	build-linux/src/dgn_lex.c	170;"	d	file:
yyless	build-linux/src/dgn_lex.c	1947;"	d	file:
yyless	build-linux/src/dgn_lex.c	1948;"	d	file:
yyless	build-linux/src/lev_lex.c	170;"	d	file:
yyless	build-linux/src/lev_lex.c	2695;"	d	file:
yyless	build-linux/src/lev_lex.c	2696;"	d	file:
yylex_destroy	build-linux/src/dgn_lex.c	/^int yylex_destroy  (void)$/;"	f
yylex_destroy	build-linux/src/lev_lex.c	/^int yylex_destroy  (void)$/;"	f
yylineno	build-linux/src/dgn_lex.c	/^int yylineno = 1;$/;"	v
yylineno	build-linux/src/lev_lex.c	/^int yylineno = 1;$/;"	v
yylval	build-linux/src/dgn_yacc.c	/^YYSTYPE yylval;$/;"	v
yylval	build-linux/src/lev_yacc.c	/^YYSTYPE yylval;$/;"	v
yymore	build-linux/src/dgn_lex.c	559;"	d	file:
yymore	build-linux/src/lev_lex.c	861;"	d	file:
yynerrs	build-linux/src/dgn_yacc.c	/^int yynerrs;$/;"	v
yynerrs	build-linux/src/lev_yacc.c	/^int yynerrs;$/;"	v
yynoreturn	build-linux/src/dgn_lex.c	101;"	d	file:
yynoreturn	build-linux/src/dgn_lex.c	103;"	d	file:
yynoreturn	build-linux/src/lev_lex.c	101;"	d	file:
yynoreturn	build-linux/src/lev_lex.c	103;"	d	file:
yyout	build-linux/src/dgn_lex.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v
yyout	build-linux/src/lev_lex.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v
yypact	build-linux/src/dgn_yacc.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypact	build-linux/src/lev_yacc.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	build-linux/src/dgn_yacc.c	529;"	d	file:
yypact_value_is_default	build-linux/src/lev_yacc.c	738;"	d	file:
yyparse	build-linux/src/dgn_yacc.c	/^yyparse (void)$/;"	f
yyparse	build-linux/src/lev_yacc.c	/^yyparse (void)$/;"	f
yypgoto	build-linux/src/dgn_yacc.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypgoto	build-linux/src/lev_yacc.c	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yypop_buffer_state	build-linux/src/dgn_lex.c	/^void yypop_buffer_state (void)$/;"	f
yypop_buffer_state	build-linux/src/lev_lex.c	/^void yypop_buffer_state (void)$/;"	f
yypush_buffer_state	build-linux/src/dgn_lex.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yypush_buffer_state	build-linux/src/lev_lex.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr1	build-linux/src/lev_yacc.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyr2	build-linux/src/lev_yacc.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	build-linux/src/dgn_lex.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrealloc	build-linux/src/lev_lex.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	build-linux/src/dgn_lex.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrestart	build-linux/src/lev_lex.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrline	build-linux/src/dgn_yacc.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyrline	build-linux/src/lev_yacc.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyset_debug	build-linux/src/dgn_lex.c	/^void yyset_debug (int  _bdebug )$/;"	f
yyset_debug	build-linux/src/lev_lex.c	/^void yyset_debug (int  _bdebug )$/;"	f
yyset_in	build-linux/src/dgn_lex.c	/^void yyset_in (FILE *  _in_str )$/;"	f
yyset_in	build-linux/src/lev_lex.c	/^void yyset_in (FILE *  _in_str )$/;"	f
yyset_lineno	build-linux/src/dgn_lex.c	/^void yyset_lineno (int  _line_number )$/;"	f
yyset_lineno	build-linux/src/lev_lex.c	/^void yyset_lineno (int  _line_number )$/;"	f
yyset_out	build-linux/src/dgn_lex.c	/^void yyset_out (FILE *  _out_str )$/;"	f
yyset_out	build-linux/src/lev_lex.c	/^void yyset_out (FILE *  _out_str )$/;"	f
yyss_alloc	build-linux/src/dgn_yacc.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yyss_alloc	build-linux/src/lev_yacc.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystos	build-linux/src/lev_yacc.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	build-linux/src/dgn_yacc.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	build-linux/src/dgn_yacc.c	862;"	d	file:
yystpcpy	build-linux/src/lev_yacc.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	build-linux/src/lev_yacc.c	1333;"	d	file:
yystrlen	build-linux/src/dgn_yacc.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	build-linux/src/dgn_yacc.c	846;"	d	file:
yystrlen	build-linux/src/lev_yacc.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	build-linux/src/lev_yacc.c	1317;"	d	file:
yysyntax_error	build-linux/src/dgn_yacc.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yysyntax_error	build-linux/src/lev_yacc.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yytable	build-linux/src/lev_yacc.c	/^static const yytype_int16 yytable[] =$/;"	v	file:
yytable_value_is_error	build-linux/src/dgn_yacc.c	534;"	d	file:
yytable_value_is_error	build-linux/src/lev_yacc.c	743;"	d	file:
yyterminate	build-linux/src/dgn_lex.c	814;"	d	file:
yyterminate	build-linux/src/lev_lex.c	1118;"	d	file:
yytext	build-linux/src/dgn_lex.c	/^char *yytext;$/;"	v
yytext	build-linux/src/lev_lex.c	/^char *yytext;$/;"	v
yytext_ptr	build-linux/src/dgn_lex.c	337;"	d	file:
yytext_ptr	build-linux/src/dgn_lex.c	339;"	d	file:
yytext_ptr	build-linux/src/lev_lex.c	337;"	d	file:
yytext_ptr	build-linux/src/lev_lex.c	339;"	d	file:
yytname	build-linux/src/dgn_yacc.c	/^static const char *const yytname[] =$/;"	v	file:
yytname	build-linux/src/lev_yacc.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	build-linux/src/dgn_yacc.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytnamerr	build-linux/src/lev_yacc.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	build-linux/include/dgn_comp.h	/^  enum yytokentype$/;"	g
yytokentype	build-linux/include/lev_comp.h	/^  enum yytokentype$/;"	g
yytokentype	build-linux/src/dgn_yacc.c	/^  enum yytokentype$/;"	g	file:
yytokentype	build-linux/src/lev_yacc.c	/^  enum yytokentype$/;"	g	file:
yytoknum	build-linux/src/dgn_yacc.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytoknum	build-linux/src/lev_yacc.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	build-linux/src/dgn_yacc.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytranslate	build-linux/src/lev_yacc.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	build-linux/src/dgn_yacc.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	build-linux/src/dgn_yacc.c	/^typedef short yytype_int16;$/;"	t	file:
yytype_int16	build-linux/src/lev_yacc.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	build-linux/src/lev_yacc.c	/^typedef short yytype_int16;$/;"	t	file:
yytype_int8	build-linux/src/dgn_yacc.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	build-linux/src/dgn_yacc.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_int8	build-linux/src/lev_yacc.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	build-linux/src/lev_yacc.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	build-linux/src/dgn_yacc.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	build-linux/src/dgn_yacc.c	/^typedef unsigned short yytype_uint16;$/;"	t	file:
yytype_uint16	build-linux/src/lev_yacc.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	build-linux/src/lev_yacc.c	/^typedef unsigned short yytype_uint16;$/;"	t	file:
yytype_uint8	build-linux/src/dgn_yacc.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	build-linux/src/dgn_yacc.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yytype_uint8	build-linux/src/lev_yacc.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	build-linux/src/lev_yacc.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	build-linux/src/dgn_lex.c	/^    static void yyunput (int c, char * yy_bp )$/;"	f	file:
yyunput	build-linux/src/lev_lex.c	/^    static void yyunput (int c, char * yy_bp )$/;"	f	file:
yyvs_alloc	build-linux/src/dgn_yacc.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yyvs_alloc	build-linux/src/lev_yacc.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywarning	util/dgn_main.c	/^void yywarning(s)$/;"	f
yywarning	util/lev_main.c	/^void yywarning(const char *s) {$/;"	f
yywrap	util/dgn_main.c	/^int yywrap()$/;"	f
yywrap	util/lev_main.c	/^int yywrap(void) {$/;"	f
yyyymmdd	src/hacklib.c	/^long yyyymmdd(time_t date) {$/;"	f
zap_color	src/mapglyph.c	26;"	d	file:
zap_dig	src/dig.c	/^void zap_dig(void) {$/;"	f
zap_hit	src/zap.c	/^static int zap_hit(int ac, int type) {$/;"	f	file:
zap_oseen	src/muse.c	/^static boolean zap_oseen;$/;"	v	file:
zap_over_floor	src/zap.c	/^int zap_over_floor(xchar x, xchar y, int type, boolean *shopdamage) {$/;"	f
zap_steed	src/zap.c	/^static boolean zap_steed(struct obj *obj) {$/;"	f	file:
zap_strike_fx	src/zap.c	/^void zap_strike_fx(xchar x, xchar y, int type) {$/;"	f
zap_syms	src/zap.c	/^static const char zap_syms[] = { WAND_CLASS, 0 };$/;"	v	file:
zap_types	win/proxy/glyphmap.c	/^static char *zap_types[] = {	\/* spell.h *\/$/;"	v	file:
zap_updown	src/zap.c	/^static boolean zap_updown(struct obj *obj) {$/;"	f	file:
zapcolors	src/decl.c	/^const int zapcolors[NUM_ZAP] = {$/;"	v
zapdir_to_glyph	src/display.c	/^int zapdir_to_glyph(int dx, int dy, int beam_type) {$/;"	f
zapnodir	src/zap.c	/^void zapnodir(struct obj *obj) {$/;"	f
zappable	src/zap.c	/^int zappable(struct obj *wand) {$/;"	f
zapyourself	src/zap.c	/^int zapyourself(struct obj *obj, boolean ordinary) {$/;"	f
zdir	src/decl.c	/^const schar zdir[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 1,-1};$/;"	v
zeromonst	src/makemon.c	/^static struct monst zeromonst;$/;"	v	typeref:struct:monst	file:
zeroobj	src/decl.c	/^struct obj zeroobj = DUMMY;$/;"	v	typeref:struct:obj
zhitm	src/zap.c	/^static int zhitm(struct monst *mon, int type, int nd, struct obj **ootmp) {$/;"	f	file:
zhitu	src/zap.c	/^static void zhitu(int type, int nd, const char *fltxt, xchar sx, xchar sy) {$/;"	f	file:
zombienum	include/you.h	/^	      zombienum;	\/* PM_ as a zombie *\/$/;"	m	struct:Race
