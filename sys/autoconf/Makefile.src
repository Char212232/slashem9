#	NetHack Makefile.
#       @configure_input@
#	SCCS Id: @(#)Makefile.src	3.4	2002/03/02

VPATH = @srcdir@
srcdir = @srcdir@

SYSTEM = @SYSTEM@
EXEEXT = @EXEEXT@

SHELL=/bin/sh

LINK=$(CC)

# for UNIX systems
SYSUNIXSRC = $(srcdir)/../sys/share/ioctl.c $(srcdir)/../sys/share/unixtty.c \
	$(srcdir)/../sys/unix/unixmain.c $(srcdir)/../sys/unix/unixunix.c \
	$(srcdir)/../sys/unix/unixres.c
SYSUNIXOBJ = ioctl.o unixmain.o unixtty.o unixunix.o unixres.o

SYSSRC=@SYSSRC@
SYSOBJ=@SYSOBJ@

CC = @CC@
WINDRES = @WINDRES@

CFLAGS = -DAUTOCONF -I../include -I$(srcdir)/../include -std=c99 @CFLAGS@
LFLAGS = @LFLAGS@

# Proxy windowing system
WINPROXYCFLAGS=@NETHACK_PROXY_CFLAGS@

# files for a straight tty port using no native windowing system
WINTTYSRC = $(srcdir)/../win/tty/getline.c $(srcdir)/../win/tty/termcap.c $(srcdir)/../win/tty/topl.c \
	$(srcdir)/../win/tty/wintty.c
WINTTYOBJ = getline.o termcap.o topl.o wintty.o

# Files for curses interface
WINCURSESSRC = $(srcdir)/../win/curses/cursmain.c $(srcdir)/../win/curses/curswins.c \
	$(srcdir)/../win/curses/cursmisc.c $(srcdir)/../win/curses/cursdial.c \
	$(srcdir)/../win/curses/cursstat.c $(srcdir)/../win/curses/cursinit.c \
	$(srcdir)/../win/curses/cursmesg.c $(srcdir)/../win/curses/cursinvt.c

WINCURSESOBJ = cursmain.o curswins.o cursmisc.o cursdial.o cursstat.o \
	cursinit.o cursmesg.o cursinvt.o

#
# Files for a proxy interface
WINPROXYSRC = $(srcdir)/../win/proxy/winproxy.c $(srcdir)/../win/proxy/callback.c \
	$(srcdir)/../win/proxy/dlbh.c $(srcdir)/../win/proxy/mapid.c $(srcdir)/../win/proxy/riputil.c \
	$(srcdir)/../win/proxy/getopt.c $(srcdir)/../win/proxy/glyphmap.c
WINPROXYOBJ = winproxy.o callback.o dlbh.o mapid.o riputil.o getopt.o \
	glyphmap.o nhwin.a

WINSRC = @WINSRC@
WINOBJ = @WINOBJ@
WINTTYLIB = @WINTTYLIB@
WINCURSESLIB = -lncursesw

WINLIB = @WINLIB@

LIBS =

# make NetHack
GAME     = slashem$(EXEEXT)

RANDOBJ =


# used by `make depend' to reconstruct this Makefile; you shouldn't need this
AWK	= @AWK@

MAKEDEFS = ../util/makedefs

# timestamp files to reduce `make' overhead and shorten .o dependency lists
CONFIG_H = ../src/config.h-t
HACK_H	= ../src/hack.h-t

# all .c that are part of the main NetHack program and are not operating- or
# windowing-system specific
HACKCSRC = $(srcdir)/allmain.c $(srcdir)/alloc.c $(srcdir)/apply.c \
	$(srcdir)/artifact.c $(srcdir)/attrib.c $(srcdir)/ball.c \
	$(srcdir)/bones.c $(srcdir)/borg.c $(srcdir)/botl.c $(srcdir)/cmd.c $(srcdir)/dbridge.c \
	$(srcdir)/decl.c $(srcdir)/detect.c $(srcdir)/dig.c $(srcdir)/display.c\
	$(srcdir)/dlb.c $(srcdir)/do.c $(srcdir)/do_name.c $(srcdir)/do_wear.c \
	$(srcdir)/dog.c $(srcdir)/dogmove.c $(srcdir)/dokick.c \
	$(srcdir)/dothrow.c $(srcdir)/drawing.c $(srcdir)/dungeon.c \
	$(srcdir)/eat.c $(srcdir)/end.c $(srcdir)/engrave.c $(srcdir)/exper.c \
	$(srcdir)/explode.c $(srcdir)/extralev.c $(srcdir)/files.c \
	$(srcdir)/fountain.c $(srcdir)/hack.c $(srcdir)/hacklib.c \
	$(srcdir)/invent.c $(srcdir)/light.c $(srcdir)/lock.c $(srcdir)/mail.c \
	$(srcdir)/makemon.c $(srcdir)/mapglyph.c $(srcdir)/mcastu.c \
	$(srcdir)/mhitm.c $(srcdir)/mhitu.c $(srcdir)/minion.c \
	$(srcdir)/mklev.c $(srcdir)/mkmap.c $(srcdir)/mkmaze.c \
	$(srcdir)/mkobj.c $(srcdir)/mkroom.c $(srcdir)/mon.c \
	$(srcdir)/mondata.c $(srcdir)/monmove.c $(srcdir)/monst.c \
	$(srcdir)/mplayer.c $(srcdir)/mthrowu.c $(srcdir)/muse.c \
	$(srcdir)/music.c $(srcdir)/o_init.c $(srcdir)/objects.c \
	$(srcdir)/objnam.c $(srcdir)/options.c $(srcdir)/pager.c \
	$(srcdir)/pickup.c $(srcdir)/pline.c $(srcdir)/polyself.c \
	$(srcdir)/potion.c $(srcdir)/pray.c $(srcdir)/priest.c \
	$(srcdir)/quest.c $(srcdir)/questpgr.c $(srcdir)/read.c \
	$(srcdir)/rect.c $(srcdir)/region.c $(srcdir)/restore.c $(srcdir)/rip.c\
	$(srcdir)/rnd.c $(srcdir)/role.c $(srcdir)/rumors.c $(srcdir)/save.c \
	$(srcdir)/shk.c $(srcdir)/shknam.c $(srcdir)/sit.c $(srcdir)/sounds.c \
	$(srcdir)/sp_lev.c $(srcdir)/spell.c $(srcdir)/steal.c \
	$(srcdir)/steed.c $(srcdir)/teleport.c $(srcdir)/timeout.c \
	$(srcdir)/topten.c $(srcdir)/track.c $(srcdir)/trap.c \
	$(srcdir)/u_init.c $(srcdir)/uhitm.c $(srcdir)/vault.c \
	$(srcdir)/version.c $(srcdir)/vision.c $(srcdir)/weapon.c \
	$(srcdir)/were.c $(srcdir)/wield.c $(srcdir)/windows.c \
	$(srcdir)/wizard.c $(srcdir)/worm.c $(srcdir)/worn.c $(srcdir)/write.c \
	$(srcdir)/zap.c $(srcdir)/gypsy.c $(srcdir)/tech.c

# all operating-system-dependent .c (for dependencies and such)
SYSCSRC = $(srcdir)/../sys/share/nhlan.c $(srcdir)/../sys/share/ioctl.c \
	$(srcdir)/../sys/share/pcmain.c $(srcdir)/../sys/share/pcsys.c \
	$(srcdir)/../sys/share/pctty.c $(srcdir)/../sys/share/pcunix.c \
	$(srcdir)/../sys/share/random.c $(srcdir)/../sys/share/unixtty.c \
	$(srcdir)/../sys/atari/tos.c $(srcdir)/../sys/be/bemain.c \
	$(srcdir)/../sys/unix/unixmain.c $(srcdir)/../sys/unix/unixres.c \
	$(srcdir)/../sys/unix/unixunix.c $(srcdir)/../sys/winnt/nttty.c \
	$(srcdir)/../sys/winnt/winnt.c

# generated source files (tile.c is handled separately)
GENCSRC = monstr.c vis_tab.c  #tile.c

# all windowing-system-dependent .c (for dependencies and such)
WINCSRC = $(WINTTYSRC) $(WINCURSESSRC) $(WINPROXYSRC) tile.c

# .c files for this version (for date.h)
VERSOURCES = $(HACKCSRC) $(SYSSRC) $(WINSRC) $(GENCSRC)

# .c files for all versions using this Makefile (for lint and tags)
CSOURCES = $(HACKCSRC) $(SYSSRC) $(WINCSRC) $(GENCSRC)


# all .h files except date.h, onames.h, pm.h, and vis_tab.h which would
# cause dependency loops if run through "make depend"
# and dgn_comp.h, dgn_file.h, lev_comp.h, special level & dungeon files.
#
HACKINCL = align.h artifact.h artilist.h attrib.h color.h \
	config.h config1.h coord.h decl.h display.h dlb.h dungeon.h \
	edog.h emin.h engrave.h epri.h eshk.h extern.h flag.h func_tab.h \
	global.h autoconf.h hack.h lev.h macconf.h mfndpos.h micro.h mkroom.h \
	monattk.h mondata.h monflag.h monst.h monsym.h obj.h objclass.h \
	patchlevel.h pcconf.h permonst.h prop.h rect.h region.h rm.h \
	sp_lev.h spell.h system.h tcap.h timeout.h tradstdc.h \
	trap.h unixconf.h vault.h vision.h wintty.h winprocs.h \
	wintype.h you.h youprop.h

HSOURCES = $(HACKINCL) date.h onames.h pm.h vis_tab.h\
		lev_comp.h dgn_comp.h dgn_file.h

# the following .o's _must_ be made before any others (for makedefs)
FIRSTOBJ = monst.o objects.o alloc.o

HOBJ = $(FIRSTOBJ) allmain.o apply.o artifact.o attrib.o ball.o \
	bones.o borg.o botl.o cmd.o dbridge.o decl.o detect.o dig.o display.o dlb.o \
	do.o do_name.o do_wear.o dog.o dogmove.o dokick.o dothrow.o \
	drawing.o dungeon.o eat.o end.o engrave.o exper.o explode.o \
	extralev.o files.o fountain.o hack.o hacklib.o invent.o light.o \
	lock.o mail.o makemon.o mapglyph.o mcastu.o mhitm.o mhitu.o \
	minion.o mklev.o mkmap.o \
	mkmaze.o mkobj.o mkroom.o mon.o mondata.o monmove.o monstr.o \
	mplayer.o mthrowu.o muse.o music.o o_init.o objnam.o options.o \
	pager.o pickup.o pline.o polyself.o potion.o pray.o priest.o \
	quest.o questpgr.o read.o rect.o region.o restore.o rip.o rnd.o \
	role.o rumors.o save.o shk.o shknam.o sit.o sounds.o sp_lev.o spell.o \
	steal.o steed.o teleport.o timeout.o topten.o track.o trap.o u_init.o \
	uhitm.o vault.o vision.o vis_tab.o weapon.o were.o wield.o windows.o \
	wizard.o worm.o worn.o write.o zap.o \
	gypsy.o tech.o \
	$(RANDOBJ) $(SYSOBJ) $(WINOBJ) version.o
# the .o files from the HACKCSRC, SYSSRC, and WINSRC lists

$(GAME):	$(SYSTEM)
	@echo "$(GAME) is up to date."

Sysunix:	$(HOBJ) Makefile
	@echo "Loading ..."
	@$(LINK) $(LFLAGS) -o $(GAME) $(HOBJ) $(WINLIB) $(LIBS)
	@touch Sysunix

Syswinnt:	$(HOBJ) @EXTRA_UNSHARE@ Makefile
	@echo "Loading ..."
	@$(LINK) $(LFLAGS) -o $(GAME) $(HOBJ) $(WINLIB) $(LIBS)
	@touch Syswinnt

Sys3B2:	$(HOBJ) Makefile
	@echo "Loading ..."
	@$(LINK) $(LFLAGS) -o $(GAME) $(HOBJ) $(WINLIB) -lmalloc
	@touch Sys3B2

Sysatt:	$(HOBJ) Makefile
	@echo "Loading ..."
	@$(LD) $(LFLAGS) /lib/crt0s.o /lib/shlib.ifile -o $(GAME) $(HOBJ)
	@touch Sysatt

SysV-AT:	DUMB.Setup $(HOBJ) Makefile
	@echo "Loading ..."
	@$(LINK) $(LFLAGS) -o $(GAME) $(HOBJ) $(WINLIB)
	@touch SysV-AT

DUMB.Setup:	../include/extern.h
	cp ../include/extern.h ../include/extern.h.BAK
	cat ../include/extern.h | \
		sed -e '/^E\ int\ /!b' \
			-e '/[^;/ 	]$$/N' \
			-e '/[(][*]occupation[)]/b' \
			-e '/[(][*]afternmv[)]/b' \
			-e '/float_down/b' \
			-e '/done1/b' \
			-e '/identify/b' \
			-e '/Hear_again/b' \
			-e '/hangup/b' \
			-e 's/^\(.*\)$$/\/\* \1 \/\*\*\//' | \
		sed -e '/^E\ void\ /!b' \
			-e '/[^;/ 	]$$/N' \
			-e 's/^\(.*\)$$/\/\* \1 \/\*\*\//' \
				>../include/extern.DUMB
	cp ../include/extern.DUMB ../include/extern.h
	@touch DUMB.Setup

.SUFFIXES:	.dll .o

.o.dll:
	@NHKEYDLL_GCC@$(CC) -shared -Wl,--export-all-symbols \
	@NHKEYDLL_GCC@	-Wl,--add-stdcall-alias -o $@ $<

nhdefkey.o: $(srcdir)/../sys/winnt/nhdefkey.c
	$(CC) $(CFLAGS) -DBUILD_DLL -c $(srcdir)/../sys/winnt/nhdefkey.c

nh340key.o: $(srcdir)/../sys/winnt/nh340key.c
	$(CC) $(CFLAGS) -DBUILD_DLL -c $(srcdir)/../sys/winnt/nh340key.c

nhraykey.o: $(srcdir)/../sys/winnt/nhraykey.c
	$(CC) $(CFLAGS) -DBUILD_DLL -c $(srcdir)/../sys/winnt/nhraykey.c

all:	$(GAME)

#	dependencies for makedefs and its outputs, which the util
#	Makefile is responsible for keeping up to date
#

# special rules, to force update of makedefs, real dependencies should be
# below in the 'make depend' output.
monst.o:
	$(CC) $(CFLAGS) -c $(srcdir)/monst.c
	@rm -f $(MAKEDEFS)

objects.o:
	$(CC) $(CFLAGS) -c $(srcdir)/objects.c
	@rm -f $(MAKEDEFS)

../include/filename.h: $(MAKEDEFS) ../include/file.h
	../util/makedefs -f

# Microsoft Window's native port resources
../dat/tiles.bmp:
	(cd ../util; make tile2bmp$(EXEEXT))
	(cd ../dat; $(MAKE) tiles.bmp)

# NetHack windows library for modules needed by more than one windows
# interface.
nhwin.a:	tile.o
	$(AR) cr nhwin.a tile.o

$(MAKEDEFS): ../util/makedefs.c  $(CONFIG_H) ../include/permonst.h \
		../include/objclass.h ../include/monsym.h \
		../include/artilist.h ../include/dungeon.h ../include/obj.h \
		../include/monst.h ../include/you.h ../include/flag.h \
		../include/dlb.h ../include/patchlevel.h ../include/qtext.h
	@( cd ../util ; $(MAKE) makedefs)

../include/onames.h: $(MAKEDEFS)
	@( cd ../util ; $(MAKE) ../include/onames.h )
../include/pm.h: $(MAKEDEFS)
	@( cd ../util ; $(MAKE) ../include/pm.h )
monstr.c: $(MAKEDEFS)
	@( cd ../util ; $(MAKE) ../src/monstr.c )
../include/vis_tab.h: $(MAKEDEFS)
	@( cd ../util ; $(MAKE) ../include/vis_tab.h )
# makedefs -z makes both vis_tab.h and vis_tab.c, but writes the .h first
vis_tab.c: ../include/vis_tab.h
tile.c: $(srcdir)/../win/share/tilemap.c $(HACK_H)
	@( cd ../util ; $(MAKE) ../src/tile.c )

#	date.h should be remade any time any of the source or include code
#	is modified.  Unfortunately, this would make the contents of this
#	file far more complex.  Since "hack.h" depends on most of the include
#	files, we kludge around this by making date.h dependent on hack.h,
#	even though it doesn't include this file.
#
#	hack.h depends on makedefs' output, so we know makedefs will be
#	up to date before being executed
../include/date.h:	$(VERSOURCES) $(HACK_H)
	../util/makedefs -v


tags: $(CSOURCES)
	@echo ctags -tw ...
	@ctags -tw $(CSOURCES)
	@( cd ../include ; ctags -tw $(HSOURCES) )
	@( cd ../util ; $(MAKE) tags )

clean:
	-rm -f *.o nhwin.a $(HACK_H) $(CONFIG_H)

spotless: clean
	-rm -f a.out core $(GAME) Sys*
	-rm -f ../include/date.h ../include/onames.h ../include/pm.h
	-rm -f monstr.c ../include/vis_tab.h vis_tab.c tile.c *.moc
	-rm -f ../include/filename.h

depend: ../sys/autoconf/depend.awk \
		$(SYSCSRC) $(WINCSRC) $(GENCSRC) $(HACKCSRC)
	@cp Makefile Makefile.bak
	@sed -n '1,/^# DO NOT DELETE THIS LINE OR CHANGE ANYTHING BEYOND IT/p' \
		< Makefile.bak > Makefile
	@echo '' >> Makefile
	@$(AWK) -f ../sys/autoconf/depend.awk ../include/*.h \
		$(srcdir)/../include/*.h $(SYSCSRC) $(WINCSRC) \
		$(GENCSRC) $(HACKCSRC) >> Makefile
	@echo '# DEPENDENCIES MUST END AT END OF FILE' >> Makefile
	@echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> Makefile
	@echo '# see make depend above' >> Makefile
	- diff Makefile.bak Makefile
	@rm -f Makefile.bak

# DO NOT DELETE THIS LINE OR CHANGE ANYTHING BEYOND IT

# config.h timestamp
$(CONFIG_H): ../include/config.h ../include/config1.h ../include/tradstdc.h \
		../include/global.h ../include/coord.h ../include/system.h \
		../include/unixconf.h ../include/micro.h \
		../include/pcconf.h ../include/macconf.h \
		../include/ntconf.h ../include/nhlan.h \
		../include/autoconf.h
	touch $(CONFIG_H)
# hack.h timestamp
$(HACK_H): ../include/hack.h $(CONFIG_H) ../include/align.h \
		../include/dungeon.h ../include/monsym.h ../include/mkroom.h \
		../include/objclass.h ../include/youprop.h ../include/prop.h \
		../include/permonst.h ../include/monattk.h \
		../include/monflag.h ../include/mondata.h ../include/pm.h \
		../include/wintype.h ../include/decl.h ../include/quest.h \
		../include/obj.h ../include/spell.h ../include/tech.h \
		../include/you.h ../include/attrib.h ../include/monst.h \
		../include/skills.h ../include/onames.h ../include/color.h \
		../include/timeout.h ../include/trap.h ../include/flag.h \
		../include/rm.h ../include/vision.h ../include/display.h \
		../include/engrave.h ../include/rect.h ../include/region.h \
		../include/winprocs.h ../include/wintty.h
	touch $(HACK_H)
#
nhlan.o: $(srcdir)/../sys/share/nhlan.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/nhlan.c
ioctl.o: $(srcdir)/../sys/share/ioctl.c $(HACK_H) ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/ioctl.c
pcmain.o: $(srcdir)/../sys/share/pcmain.c $(HACK_H) ../include/dlb.h \
		../include/patchlevel.h
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/pcmain.c
pcsys.o: $(srcdir)/../sys/share/pcsys.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/pcsys.c
pctty.o: $(srcdir)/../sys/share/pctty.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/pctty.c
pcunix.o: $(srcdir)/../sys/share/pcunix.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/pcunix.c
random.o: $(srcdir)/../sys/share/random.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/random.c
unixtty.o: $(srcdir)/../sys/share/unixtty.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/share/unixtty.c
tos.o: $(srcdir)/../sys/atari/tos.c $(HACK_H) ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/atari/tos.c
bemain.o: $(srcdir)/../sys/be/bemain.c $(HACK_H) ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/be/bemain.c
unixmain.o: $(srcdir)/../sys/unix/unixmain.c $(HACK_H) ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/unix/unixmain.c
unixres.o: $(srcdir)/../sys/unix/unixres.c $(CONFIG_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/unix/unixres.c
unixunix.o: $(srcdir)/../sys/unix/unixunix.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/unix/unixunix.c
nttty.o: $(srcdir)/../sys/winnt/nttty.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/winnt/nttty.c
winnt.o: $(srcdir)/../sys/winnt/winnt.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/../sys/winnt/winnt.c
getline.o: $(srcdir)/../win/tty/getline.c $(HACK_H) ../include/func_tab.h
	$(CC) $(CFLAGS) -c $(srcdir)/../win/tty/getline.c
termcap.o: $(srcdir)/../win/tty/termcap.c $(HACK_H) ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/../win/tty/termcap.c
topl.o: $(srcdir)/../win/tty/topl.c $(HACK_H) ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/../win/tty/topl.c
wintty.o: $(srcdir)/../win/tty/wintty.c $(HACK_H) ../include/dlb.h \
		../include/patchlevel.h ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/../win/tty/wintty.c

cursmain.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursmain.c

curswins.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/curswins.c

cursmisc.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursmisc.c

cursdial.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursdial.c

cursstat.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursstat.c

cursinit.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursinit.c

cursmesg.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursmesg.c

cursinvt.o:
	$(CC) $(CFLAGS) -c $(srcdir)/../win/curses/cursinvt.c

#WINCURSESSRC = $(srcdir)/../win/curses/cursmain.c $(srcdir)../win/curses/curswins.c \
#        $(srcdir)/../win/curses/cursmisc.c $(srcdir)/../win/curses/cursdial.c \
#        $(srcdir)/../win/curses/cursstat.c $(srcdir)/../win/curses/cursinit.c \
#        $(srcdir)/../win/curses/cursmesg.c

winproxy.o: $(srcdir)/../win/proxy/winproxy.c $(HACK_H) \
		../include/patchlevel.h ../include/date.h \
		../include/winproxy.h
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/winproxy.c
callback.o: $(srcdir)/../win/proxy/callback.c $(HACK_H) ../include/func_tab.h \
		../include/winproxy.h
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/callback.c
dlbh.o: $(srcdir)/../win/proxy/dlbh.c $(HACK_H) ../include/dlb.h
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/dlbh.c
mapid.o: $(srcdir)/../win/proxy/mapid.c $(HACK_H) ../include/winproxy.h
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/mapid.c
riputil.o: $(srcdir)/../win/proxy/riputil.c $(HACK_H)
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/riputil.c
getopt.o: $(srcdir)/../win/proxy/getopt.c $(HACK_H)
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/getopt.c
glyphmap.o: $(srcdir)/../win/proxy/glyphmap.c $(HACK_H) ../include/winproxy.h
	$(CC) $(CFLAGS) $(WINPROXYCFLAGS) -c $(srcdir)/../win/proxy/glyphmap.c
tile.o: tile.c $(HACK_H)
monstr.o: monstr.c $(CONFIG_H)
vis_tab.o: vis_tab.c $(CONFIG_H) ../include/vis_tab.h
allmain.o: $(srcdir)/allmain.c $(HACK_H) ../include/patchlevel.h
	$(CC) $(CFLAGS) -c $(srcdir)/allmain.c
alloc.o: $(srcdir)/alloc.c $(CONFIG_H)
	$(CC) $(CFLAGS) -c $(srcdir)/alloc.c
apply.o: $(srcdir)/apply.c $(HACK_H) ../include/edog.h ../include/eleash.h
	$(CC) $(CFLAGS) -c $(srcdir)/apply.c
artifact.o: $(srcdir)/artifact.c $(HACK_H) ../include/artifact.h \
		../include/artilist.h
	$(CC) $(CFLAGS) -c $(srcdir)/artifact.c
attrib.o: $(srcdir)/attrib.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/attrib.c
ball.o: $(srcdir)/ball.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/ball.c
bones.o: $(srcdir)/bones.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/bones.c
botl.o: $(srcdir)/botl.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/botl.c
cmd.o: $(srcdir)/cmd.c $(HACK_H) ../include/func_tab.h
	$(CC) $(CFLAGS) -c $(srcdir)/cmd.c
dbridge.o: $(srcdir)/dbridge.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/dbridge.c
decl.o: $(srcdir)/decl.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/decl.c
detect.o: $(srcdir)/detect.c $(HACK_H) ../include/artifact.h
	$(CC) $(CFLAGS) -c $(srcdir)/detect.c
dig.o: $(srcdir)/dig.c $(HACK_H) ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/dig.c
display.o: $(srcdir)/display.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/display.c
dlb.o: $(srcdir)/dlb.c $(CONFIG_H) ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/dlb.c
do.o: $(srcdir)/do.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/do.c
do_name.o: $(srcdir)/do_name.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/do_name.c
do_wear.o: $(srcdir)/do_wear.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/do_wear.c
dog.o: $(srcdir)/dog.c $(HACK_H) ../include/edog.h ../include/emin.h \
		../include/epri.h
	$(CC) $(CFLAGS) -c $(srcdir)/dog.c
dogmove.o: $(srcdir)/dogmove.c $(HACK_H) ../include/mfndpos.h \
		../include/edog.h ../include/emin.h ../include/epri.h \
		../include/eleash.h
	$(CC) $(CFLAGS) -c $(srcdir)/dogmove.c
dokick.o: $(srcdir)/dokick.c $(HACK_H) ../include/eshk.h
	$(CC) $(CFLAGS) -c $(srcdir)/dokick.c
dothrow.o: $(srcdir)/dothrow.c $(HACK_H) ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/dothrow.c
drawing.o: $(srcdir)/drawing.c $(HACK_H) ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/drawing.c
dungeon.o: $(srcdir)/dungeon.c $(HACK_H) ../include/dgn_file.h ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/dungeon.c
eat.o: $(srcdir)/eat.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/eat.c
end.o: $(srcdir)/end.c $(HACK_H) ../include/eshk.h ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/end.c
engrave.o: $(srcdir)/engrave.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/engrave.c
exper.o: $(srcdir)/exper.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/exper.c
explode.o: $(srcdir)/explode.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/explode.c
extralev.o: $(srcdir)/extralev.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/extralev.c
files.o: $(srcdir)/files.c $(HACK_H) ../include/dlb.h ../include/filename.h ../include/winproxy.h
	$(CC) $(CFLAGS) -c $(srcdir)/files.c
fountain.o: $(srcdir)/fountain.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/fountain.c
hack.o: $(srcdir)/hack.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/hack.c
hacklib.o: $(srcdir)/hacklib.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/hacklib.c
invent.o: $(srcdir)/invent.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/invent.c
light.o: $(srcdir)/light.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/light.c
lock.o: $(srcdir)/lock.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/lock.c
mail.o: $(srcdir)/mail.c $(HACK_H) ../include/mail.h
	$(CC) $(CFLAGS) -c $(srcdir)/mail.c
makemon.o: $(srcdir)/makemon.c $(HACK_H) ../include/epri.h ../include/emin.h \
		../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/makemon.c
mapglyph.o: $(srcdir)/mapglyph.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mapglyph.c
mcastu.o: $(srcdir)/mcastu.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mcastu.c
mhitm.o: $(srcdir)/mhitm.c $(HACK_H) ../include/artifact.h ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/mhitm.c
mhitu.o: $(srcdir)/mhitu.c $(HACK_H) ../include/artifact.h ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/mhitu.c
minion.o: $(srcdir)/minion.c $(HACK_H) ../include/emin.h ../include/epri.h
	$(CC) $(CFLAGS) -c $(srcdir)/minion.c
mklev.o: $(srcdir)/mklev.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mklev.c
mkmap.o: $(srcdir)/mkmap.c $(HACK_H) ../include/sp_lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/mkmap.c
mkmaze.o: $(srcdir)/mkmaze.c $(HACK_H) ../include/sp_lev.h ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/mkmaze.c
mkobj.o: $(srcdir)/mkobj.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mkobj.c
mkroom.o: $(srcdir)/mkroom.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mkroom.c
mon.o: $(srcdir)/mon.c $(HACK_H) ../include/mfndpos.h ../include/edog.h \
		../include/artifact.h
	$(CC) $(CFLAGS) -c $(srcdir)/mon.c
mondata.o: $(srcdir)/mondata.c $(HACK_H) ../include/eshk.h ../include/epri.h
	$(CC) $(CFLAGS) -c $(srcdir)/mondata.c
monmove.o: $(srcdir)/monmove.c $(HACK_H) ../include/mfndpos.h \
		../include/artifact.h ../include/epri.h
	$(CC) $(CFLAGS) -c $(srcdir)/monmove.c
monst.o: $(srcdir)/monst.c $(CONFIG_H) ../include/permonst.h \
		../include/align.h ../include/monattk.h ../include/monflag.h \
		../include/monsym.h ../include/dungeon.h ../include/eshk.h \
		../include/vault.h ../include/epri.h ../include/egyp.h \
		../include/color.h
	$(CC) $(CFLAGS) -c $(srcdir)/monst.c
mplayer.o: $(srcdir)/mplayer.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mplayer.c
mthrowu.o: $(srcdir)/mthrowu.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/mthrowu.c
muse.o: $(srcdir)/muse.c $(HACK_H) ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/muse.c
music.o: $(srcdir)/music.c $(HACK_H) #interp.c
	$(CC) $(CFLAGS) -c $(srcdir)/music.c
o_init.o: $(srcdir)/o_init.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/o_init.c
objects.o: $(srcdir)/objects.c $(CONFIG_H) ../include/obj.h \
		../include/objclass.h ../include/prop.h ../include/skills.h \
		../include/color.h objects.c
	$(CC) $(CFLAGS) -c $(srcdir)/objects.c
objnam.o: $(srcdir)/objnam.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/objnam.c
options.o: $(srcdir)/options.c $(CONFIG_H) ../include/objclass.h \
		../include/flag.h $(HACK_H) ../include/tcap.h ../include/filename.h
	$(CC) $(CFLAGS) -c $(srcdir)/options.c
pager.o: $(srcdir)/pager.c $(HACK_H) ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/pager.c
pickup.o: $(srcdir)/pickup.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/pickup.c
pline.o: $(srcdir)/pline.c $(HACK_H) ../include/epri.h ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/pline.c
polyself.o: $(srcdir)/polyself.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/polyself.c
potion.o: $(srcdir)/potion.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/potion.c
pray.o: $(srcdir)/pray.c $(HACK_H) ../include/epri.h
	$(CC) $(CFLAGS) -c $(srcdir)/pray.c
priest.o: $(srcdir)/priest.c $(HACK_H) ../include/mfndpos.h ../include/eshk.h \
		../include/epri.h ../include/emin.h
	$(CC) $(CFLAGS) -c $(srcdir)/priest.c
quest.o: $(srcdir)/quest.c $(HACK_H) ../include/qtext.h
	$(CC) $(CFLAGS) -c $(srcdir)/quest.c
questpgr.o: $(srcdir)/questpgr.c $(HACK_H) ../include/dlb.h ../include/qtext.h
	$(CC) $(CFLAGS) -c $(srcdir)/questpgr.c
read.o: $(srcdir)/read.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/read.c
rect.o: $(srcdir)/rect.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/rect.c
region.o: $(srcdir)/region.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/region.c
restore.o: $(srcdir)/restore.c $(HACK_H) ../include/lev.h ../include/tcap.h
	$(CC) $(CFLAGS) -c $(srcdir)/restore.c
rip.o: $(srcdir)/rip.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/rip.c
rnd.o: $(srcdir)/rnd.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/rnd.c
role.o: $(srcdir)/role.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/role.c
rumors.o: $(srcdir)/rumors.c $(HACK_H) ../include/lev.h ../include/dlb.h
	$(CC) $(CFLAGS) -c $(srcdir)/rumors.c
save.o: $(srcdir)/save.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/save.c
shk.o: $(srcdir)/shk.c $(HACK_H) ../include/eshk.h
	$(CC) $(CFLAGS) -c $(srcdir)/shk.c
shknam.o: $(srcdir)/shknam.c $(HACK_H) ../include/eshk.h
	$(CC) $(CFLAGS) -c $(srcdir)/shknam.c
sit.o: $(srcdir)/sit.c $(HACK_H) ../include/artifact.h
	$(CC) $(CFLAGS) -c $(srcdir)/sit.c
sounds.o: $(srcdir)/sounds.c $(HACK_H) ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/sounds.c
sp_lev.o: $(srcdir)/sp_lev.c $(HACK_H) ../include/dlb.h ../include/sp_lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/sp_lev.c
spell.o: $(srcdir)/spell.c $(HACK_H) ../include/edog.h
	$(CC) $(CFLAGS) -c $(srcdir)/spell.c
steal.o: $(srcdir)/steal.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/steal.c
steed.o: $(srcdir)/steed.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/steed.c
teleport.o: $(srcdir)/teleport.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/teleport.c
timeout.o: $(srcdir)/timeout.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/timeout.c
topten.o: $(srcdir)/topten.c $(HACK_H) ../include/dlb.h ../include/patchlevel.h
	$(CC) $(CFLAGS) -c $(srcdir)/topten.c
track.o: $(srcdir)/track.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/track.c
trap.o: $(srcdir)/trap.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/trap.c
u_init.o: $(srcdir)/u_init.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/u_init.c
uhitm.o: $(srcdir)/uhitm.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/uhitm.c
vault.o: $(srcdir)/vault.c $(HACK_H) ../include/vault.h
	$(CC) $(CFLAGS) -c $(srcdir)/vault.c
version.o: $(srcdir)/version.c $(HACK_H) ../include/date.h \
		../include/patchlevel.h
	$(CC) $(CFLAGS) -c $(srcdir)/version.c
vision.o: $(srcdir)/vision.c $(HACK_H) ../include/vis_tab.h
	$(CC) $(CFLAGS) -c $(srcdir)/vision.c
weapon.o: $(srcdir)/weapon.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/weapon.c
were.o: $(srcdir)/were.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/were.c
wield.o: $(srcdir)/wield.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/wield.c
wizard.o: $(srcdir)/wizard.c $(HACK_H) ../include/qtext.h ../include/epri.h
	$(CC) $(CFLAGS) -c $(srcdir)/wizard.c
worm.o: $(srcdir)/worm.c $(HACK_H) ../include/lev.h
	$(CC) $(CFLAGS) -c $(srcdir)/worm.c
worn.o: $(srcdir)/worn.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/worn.c
write.o: $(srcdir)/write.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/write.c
zap.o: $(srcdir)/zap.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/zap.c
gypsy.o: $(srcdir)/gypsy.c $(HACK_H) ../include/egyp.h ../include/qtext.h
	$(CC) $(CFLAGS) -c $(srcdir)/gypsy.c
tech.o: $(srcdir)/tech.c $(HACK_H)
	$(CC) $(CFLAGS) -c $(srcdir)/tech.c
# DEPENDENCIES MUST END AT END OF FILE
# IF YOU PUT STUFF HERE IT WILL GO AWAY
# see make depend above
